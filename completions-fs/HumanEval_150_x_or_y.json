{"name": "HumanEval_150_x_or_y", "language": "fs", "prompt": "//A simple program which should return the value of x if n is \n// a prime number and should return the value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nlet x_or_y (n: int) (x: int) (y: int): int  = \n", "tests": "let test() = \n  let candidate = x_or_y\n  assert (candidate 7 34 12 = 34)\n  assert (candidate 15 8 5 = 5)\n  assert (candidate 3 33 5212 = 33)\n  assert (candidate 1259 3 52 = 3)\n  assert (candidate 7919 -1 12 = -1)\n  assert (candidate 3609 1245 583 = 583)\n  assert (candidate 91 56 129 = 129)\n  assert (candidate 6 34 1234 = 1234)\n  assert (candidate 1 2 0 = 0)\n  assert (candidate 2 2 0 = 2)\n  0\n\ntest()", "completions": ["    if n = 0 then x\n    elif n % x = 0 then y\n    else x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n / x) (x_or_y (n", "    if n % x = 0 then y else x", "    if n % x = 0 then y else x", "    if n % x = 0 then y else x", "    if n % x = 0 then y else x", "    if n = 0 then x\n    elif n % 2 = 0 then x\n    else y", "    if n % 2 = 0 then x else y", "    if n = 0 then y\n    elif n % x = 0 then x\n    else x_or_y (n / x) (x - 1) y", "    if n % x = 0 then y else x", "    if n % 2 = 0 then x else y", "    if n % x = 0 then y else x", "    if n % x = 0 then y else x", "    if n % 2 = 0 then x else y", "    if n % x = 0 then y else x", "    if n = 0 then y\n    else if n % x = 0 then x\n    else x_or_y (n / x) (x * y)", "    if n % x = 0 then y else x", "    if n = 0 then x\n    elif n % 2 = 0 then x\n    else y", "    if n % x = 0 then y else x", "    if n % x = 0 then y else x", "    if n % 2 = 0 then x else y"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}