{"name": "HumanEval_15_string_sequence", "language": "fs", "prompt": "//Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence(0)\n// '0'\n// >>> string_sequence(5)\n// '0 1 2 3 4 5'\nlet string_sequence (n: int): string  = \n", "tests": "let test() = \n  let candidate = string_sequence\n  assert (candidate 0 = \"0\")\n  assert (candidate 3 = \"0 1 2 3\")\n  assert (candidate 10 = \"0 1 2 3 4 5 6 7 8 9 10\")\n  0\n\ntest()", "completions": ["    let rec loop i = \n        if i < n then \n            sprintf \"%s \" (loop (i+1))\n        else \n            sprintf \" \"\n    loop 0", "    let rec loop i = \n        if i < n then \n            sprintf \"%i\" i\n        else \n            loop (i - n)\n    loop 0", "    let rec loop i = \n        if i < n then \n            sprintf \"%d \" i\n        else \n            sprintf \"0 \"\n    loop 0", "    let rec loop n = \n        match n with\n        | 0 -> \"\"\n        | _ -> string_sequence(n - 1) + string_sequence(n)\n    loop n", "    let mutable i = 0\n    let mutable res = \"\"\n    while i < n do\n        res <- res + string i\n        i <- i + 1\n    res", "    let rec loop n = \n        if n = 0 then \"\"\n        else string (n - 1) + loop (n - 1)\n    loop n", "    let rec loop i = \n        if i < n then \n            sprintf \"%s \" (loop (i+1))\n        else \n            sprintf \" \"\n    loop 0", "    let mutable i = 0\n    let mutable res = \"\"\n    while i < n do\n        res <- res + string i\n        i <- i + 1\n    res", "    let rec loop n = \n        if n < 0 then \"\"\n        else \n            let i = n % 10\n            if i < 10 then string (n / 10) + string_sequence(i)\n            else string (n / 10) + string_sequence(i) + string_sequence(i)\n    loop n", "    let rec loop i = \n        if i < n then \n            sprintf \"%s\" (loop (i+1))\n        else \n            \"\"\n    loop 0", "    let rec loop i = \n        if i < n then \n            sprintf \"%d\" i\n        else \n            loop (i - n)\n    loop 0", "    let rec loop i = \n        if i < n then \n            sprintf \"%d \" i\n        else \n            loop (i - n)\n    loop 0", "    let mutable i = 0\n    let mutable res = \"\"\n    while i < n do\n        res <- res + string i\n        i <- i + 1\n    res", "    let rec loop i = \n        if i < n then \n            string (i + 1)\n        else \n            loop (i - n + 1)\n    loop 0", "    let rec loop i = \n        if i < n then \n            sprintf \"%d \" i\n        else \n            loop (i - n)\n    loop 0", "    let rec loop i = \n        if i < n then \n            sprintf \"%d \" i\n        else \n            sprintf \"0 \"\n    loop 0", "    let mutable i = 0\n    let mutable res = \"\"\n    while i < n do\n        res <- res + string i\n        i <- i + 1\n    res", "    let rec loop i = \n        if i < n then \n            sprintf \"%s \" (loop (i+1))\n        else\n            sprintf \" \"\n    loop 0", "    let mutable i = 0\n    let mutable res = \"\"\n    while i < n do\n        res <- res + string i\n        i <- i + 1\n    res", "    let rec loop i =\n        if i < n then\n            sprintf \"%i\" i\n        else\n            loop (i-1)\n    loop 0"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}