{"name": "HumanEval_133_sum_squares", "language": "fs", "prompt": "//You are given a list of numbers.\n// You need to return the sum of squared numbers in the given list,\n// round each element in the list to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7] the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n// For lst = [-2.4,1,1] the output should be 6\nlet sum_squares (lst: float list): int  = \n", "tests": "let test() = \n  let candidate = sum_squares\n  assert (candidate [1.0; 2.0; 3.0] = 14)\n  assert (candidate [1.0; 2.0; 3.0] = 14)\n  assert (candidate [1.0; 3.0; 5.0; 7.0] = 84)\n  assert (candidate [1.4; 4.2; 0.0] = 29)\n  assert (candidate [-2.4; 1.0; 1.0] = 6)\n  assert (candidate [100.0; 1.0; 15.0; 2.0] = 10230)\n  assert (candidate [10000.0; 10000.0] = 200000000)\n  assert (candidate [-1.4; 4.6; 6.3] = 75)\n  assert (candidate [-1.4; 17.9; 18.9; 19.9] = 1086)\n  assert (candidate [0.0] = 0)\n  assert (candidate [-1.0] = 1)\n  assert (candidate [-1.0; 1.0; 0.0] = 2)\n  0\n\ntest()", "completions": ["    let rec sum_squares_loop acc (acc_sum: int) (acc_sum_sum: int) (acc_sum_sum_sum: int) (acc_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum", "    let rec sum_squares_acc (acc: int) (lst: float list) = \n        match lst with\n        | [] -> acc\n        | x::xs -> \n            let acc' = acc + x * x\n            sum_squares_acc acc' xs\n    sum_squares_acc 0 lst", "    let rec sum_squares_acc (acc: int) (lst: float list) = \n        match lst with\n        | [] -> acc\n        | x::xs -> \n            let acc' = acc + x * x\n            sum_squares_acc acc' xs\n    sum_squares_acc 0 lst", "    let rec sum_squares_acc (acc: int) (acc_sum: int) (acc_sum_acc: int) (acc_sum_acc_acc: int) (acc_sum_acc_acc_acc: int) (acc_sum_acc_acc_acc_acc: int) (acc_sum_acc_acc_acc_acc_acc: int) (acc_sum_acc_acc_acc_acc_acc_acc: int) (acc_sum_acc_acc_acc_acc_acc_acc_acc: int) (acc_sum_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc_acc", "    let rec sum_squares_list (lst: float list) = \n        match lst with\n        | [] -> 0\n        | x::xs -> \n            let sum = x + (x * x)\n            sum_squares_list xs\n    sum_squares_list lst", "    let rec sum_squares_loop acc (acc: int) (acc_sum: int) (acc_sum_sum: int) (acc_sum_sum_sum: int) (acc_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_", "    let rec sum_squares_rec (acc: int) (acc_sum: int) (acc_sum_sq: int) (acc_sum_sq_sq: int) (acc_sum_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq_sq_sq_sq: int) (acc_sum_sq_sq_sq_sq", "    let rec loop acc lst = \n        match lst with\n        | [] -> acc\n        | x::xs -> loop (acc + x) xs\n    loop 0 lst", "    let rec sum_squares_acc (acc: int) (lst: float list) = \n        match lst with\n        | [] -> acc\n        | x::xs -> \n            let xs_acc = sum_squares_acc (acc + x) xs\n            sum_squares_acc (acc + x) xs_acc\n    sum_squares_acc 0 lst", "    let rec sum_squares_loop (acc: int) (acc_sum: int) (acc_sum_sum: int) (acc_sum_sum_sum: int) (acc_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_", "    let rec sum_squares_acc (acc: int) (lst: float list) =\n        match lst with\n        | [] -> acc\n        | x::xs -> sum_squares_acc (acc + x*x) xs\n    sum_squares_acc 0 lst", "    let rec sum_squares_lst acc lst = \n        match lst with\n        | [] -> acc\n        | x::xs -> \n            let acc' = acc + x * x\n            sum_squares_lst acc' xs\n    sum_squares_lst 0 lst", "    let rec sum_squares_acc (acc: int) (lst: float list) = \n        match lst with\n        | [] -> acc\n        | x::xs -> sum_squares_acc (acc + x*x) xs\n    sum_squares_acc 0 lst", "    let rec sum_squares_acc (acc: int) (acc_sum: int) (acc_sum_sum: int) (acc_sum_sum_sum: int) (acc_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum: int) (acc_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_", "    let rec sum_squares_acc (acc: int) (lst: float list) = \n        match lst with\n        | [] -> acc\n        | x::xs -> \n            let acc' = acc + x * x\n            sum_squares_acc acc' xs\n    sum_squares_acc 0 lst", "    let rec sum_squares_acc (acc: int) (lst: float list) = \n        match lst with\n        | [] -> acc\n        | x::xs -> sum_squares_acc (acc + x*x) xs\n    sum_squares_acc 0 lst", "    let rec sum_squares_list acc lst = \n        match lst with\n        | [] -> acc\n        | x :: xs -> \n            let sum = acc + x * x\n            sum_squares_list (sum + x) xs\n    sum_squares_list 0 lst", "    let rec sum_squares_acc (acc: int) (lst: float list) =\n        match lst with\n        | [] -> acc\n        | x :: xs -> sum_squares_acc (acc + x) xs\n    sum_squares_acc 0 lst", "    let rec sum_squares_acc (acc: int) (lst: float list): int = \n        match lst with\n        | [] -> acc\n        | x::xs -> \n            let acc' = acc + (x*x)\n            sum_squares_acc acc' xs\n    sum_squares_acc 0 lst", "    let rec sum_squares_acc (acc: int) (lst: float list): int = \n        match lst with\n        | [] -> acc\n        | x::xs -> sum_squares_acc (acc + x*x) xs\n    sum_squares_acc 0 lst"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}