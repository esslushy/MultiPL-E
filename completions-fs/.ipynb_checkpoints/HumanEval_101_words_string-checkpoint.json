{"name": "HumanEval_101_words_string", "language": "fs", "prompt": "//You will be given a string of words separated by commas or spaces. Your task is\n// to split the string into words and return an array of the words.\n// For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nlet words_string (s: string): string list  = \n", "tests": "let test() = \n  let candidate = words_string\n  assert (candidate \"Hi, my name is John\" = [\"Hi\"; \"my\"; \"name\"; \"is\"; \"John\"])\n  assert (candidate \"One, two, three, four, five, six\" = [\"One\"; \"two\"; \"three\"; \"four\"; \"five\"; \"six\"])\n  assert (candidate \"Hi, my name\" = [\"Hi\"; \"my\"; \"name\"])\n  assert (candidate \"One,, two, three, four, five, six,\" = [\"One\"; \"two\"; \"three\"; \"four\"; \"five\"; \"six\"])\n  assert (candidate \"\" = [])\n  assert (candidate \"ahmed     , gamal\" = [\"ahmed\"; \"gamal\"])\n  0\n\ntest()", "completions": ["    s.Split(',')\n    |> Array.map (fun s -> s.Trim())", "    s.Split(',')\n    |> List.map (fun s -> s.Trim())", "    let words = s.Split([|','|], StringSplitOptions.RemoveEmptyEntries)\n    words", "    let words = s.Split([|','|], StringSplitOptions.RemoveEmptyEntries)\n    words |> List.map (fun word -> word.Trim())", "    s.Split(',')\n    |> Array.map (fun x -> x.Trim())", "    s.Split([|','|], StringSplitOptions.RemoveEmptyEntries)", "    s.Split(',')\n    |> Array.map (fun x -> x.Trim())", "    s.Split(',')\n    |> Array.map (fun s -> s.Trim())", "    s.Split(',')\n    |> Array.map (fun s -> s.Trim())", "    s.Split([|','|], StringSplitOptions.RemoveEmptyEntries)\n    |> List.map (fun s -> s.Trim())", "    s.Split([|','|], System.StringSplitOptions.RemoveEmptyEntries)\n    |> List.map (fun s -> s.Trim())", "    s.Split(',')\n    |> List.map (fun s -> s.Trim())", "    let words = s.Split(',')\n    words |> Array.map (fun word -> word.Trim())", "    s.Split(',')\n    |> Array.map (fun s -> s.Trim())", "    s.Split(',')\n    |> List.map (fun s -> s.Trim())", "    s.Split(',')\n    |> Array.map (fun s -> s.Trim())", "    s.Split(',')\n    |> Array.map (fun s -> s.Trim())\n    |> Array.toList", "    let words = s.Split(',')\n    words |> List.map (fun w -> w.Trim())", "    s.Split(',')\n    |> Array.map (fun s -> s.Trim())", "    s.Split([|','|], System.StringSplitOptions.RemoveEmptyEntries)\n    |> List.map (fun s -> s.Trim())"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}