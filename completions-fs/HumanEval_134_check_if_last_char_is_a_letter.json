{"name": "HumanEval_134_check_if_last_char_is_a_letter", "language": "fs", "prompt": "//Create a function that returns True if the last character\n// of a given string is an alphabetical character and is not\n// a part of a word, and False otherwise.\n// Note: \"word\" is a group of characters separated by space.\n// Examples:\n// check_if_last_char_is_a_letter(\"apple pie\") \u00e2\u017e\u017e False\n// check_if_last_char_is_a_letter(\"apple pi e\") \u00e2\u017e\u017e True\n// check_if_last_char_is_a_letter(\"apple pi e \") \u00e2\u017e\u017e False\n// check_if_last_char_is_a_letter(\"\") \u00e2\u017e\u017e False\nlet check_if_last_char_is_a_letter (txt: string): bool  = \n", "tests": "let test() = \n  let candidate = check_if_last_char_is_a_letter\n  assert (candidate \"apple\" = false)\n  assert (candidate \"apple pi e\" = true)\n  assert (candidate \"eeeee\" = false)\n  assert (candidate \"A\" = true)\n  assert (candidate \"Pumpkin pie \" = false)\n  assert (candidate \"Pumpkin pie 1\" = false)\n  assert (candidate \"\" = false)\n  assert (candidate \"eeeee e \" = false)\n  assert (candidate \"apple pie\" = false)\n  assert (candidate \"apple pi e \" = false)\n  0\n\ntest()", "completions": ["    let mutable lastCharIsLetter = false\n    for c in txt do\n        if c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' then\n            lastCharIsLetter <- true\n        else\n            lastCharIsLetter <- false\n    lastCharIsLetter", "    let mutable lastCharIsLetter = false\n    for c in txt do\n        if c = ' ' then\n            lastCharIsLetter <- true\n        else\n            if lastCharIsLetter then\n                lastCharIsLetter <- false\n    lastCharIsLetter", "    let mutable lastChar = txt.LastIndexOf(\" \")\n    while lastChar >= 0 do\n        if txt.[lastChar] = 'a' || txt.[lastChar] = '\u00fd' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00ff' || txt.[lastChar] = '\u00fd' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00ff' || txt.[lastChar] = '\u00fd' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00ff' || txt.[lastChar] = '\u00fd' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00ff' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00fe' || txt.[lastChar]", "    let mutable lastCharIsLetter = false\n    for c in txt do\n        if c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\b' || c = '\\f' || c = '\\v' || c = '\\v' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '", "    let mutable lastCharIsLetter = false\n    for c in txt do\n        if c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\b' || c = '\\f' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '", "    let mutable lastCharIsLetter = false\n    for c in txt do\n        if c = ' ' then\n            lastCharIsLetter <- true\n        else\n            if lastCharIsLetter then\n                lastCharIsLetter <- false\n    lastCharIsLetter", "    let mutable lastCharIsLetter = false\n    for c in txt do\n        if c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\b' || c = '\\f' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '", "    let mutable lastCharIsLetter = false\n    for c in txt do\n        if c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\r' || c = '\\n' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\r' || c = '\\n' || c = '\\r' || c = '", "    let mutable lastCharIsLetter = false\n    for c in txt do\n        if c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\b' || c = '\\f' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '", "    let mutable lastChar = txt.Length - 1\n    while lastChar >= 0 && lastChar < txt.Length && txt.[lastChar] = 'a' do\n        lastChar <- lastChar - 1\n    lastChar >= 0 && lastChar < txt.Length && txt.[lastChar] = 'a'", "    let mutable lastCharIsLetter = false\n    for c in txt do\n        if c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\r' || c = '\\n' || c = '\\t' || c = '\\r' || c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\n' || c = '\\r' || c = ' ' || c = '", "    let mutable last_char = txt.Length - 1\n    while last_char >= 0 && txt.[last_char] = 'a' do\n        last_char <- last_char - 1\n    last_char >= 0 && txt.[last_char] = 'z'", "    let rec check_if_last_char_is_a_letter (txt: string): bool = \n        match txt with\n        | \"\" -> false\n        | _ -> \n            let last_char = txt.LastIndexOf(\" \")\n            if last_char = -1 then false\n            else \n                let last_char = txt.LastIndexOf(\" \")\n                if last_char = -1 then false\n                else \n                    let last_char = txt.LastIndexOf(\" \")\n                    if last_char = -1 then false\n                    else \n                        let last_char = txt.LastIndexOf(\" \")\n                        if last_char = -1 then false\n                        else \n                            let last_char = txt.LastIndexOf(\" \")\n                            if last_char = -1 then false\n                            else \n                                let last_char = txt.LastIndexOf(\" \")\n                                if last_char = -1 then false\n                                else \n                                    let last_char = txt.LastIndexOf(\" \")\n                                    if last_char = -1 then false\n                                    else \n                                        let last_char = txt.LastIndexOf(\" \")\n                                        if last_char = -1 then false\n                                        else \n                                            let last_char = txt.LastIndexOf(\" \")\n                                            if last_char = -1 then false\n                                            else \n                                                let last_char = txt.LastIndexOf(\" \")\n                                                if last_char = -1 then false\n                                                else \n                                                    let last_char = txt.LastIndexOf(\" \")\n                                                    if last_char = -1 then false\n                                                    else \n                                                        let last_char = txt.LastIndexOf(\" \")\n                                                        if last_char = -1 then false\n                                                        else \n                                                            let last_char = txt.LastIndexOf(\" \")\n                                                            if last_char = -1 then false\n                                                            else \n                                                                let last_char = txt.LastIndexOf(\" \")\n                                                                if last_char = -1 then false\n                                                                else \n                                                                    let last_char =", "    let mutable lastCharIsLetter = false\n    let mutable lastCharIsDigit = false\n    let mutable lastCharIsSpace = false\n    for c in txt do\n        if c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\b' || c = '\\f' || c = '\\v' || c = '\\v' || c = '\\n' || c = '\\r' || c = '\\t' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c", "    let mutable lastCharIsLetter = false\n    let mutable lastCharIsDigit = false\n    for c in txt do\n        if c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\b' || c = '\\f' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v", "    let mutable lastCharIsLetter = false\n    for c in txt do\n        if c = ' ' then lastCharIsLetter <- true\n    lastCharIsLetter", "    let mutable lastChar = txt.LastIndexOf(\" \")\n    while lastChar <> -1 do\n        if txt.[lastChar] = 'a' || txt.[lastChar] = '\u00fd' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00ff' || txt.[lastChar] = '\u00fd' || txt.[lastChar] = '\u00fe' || txt.[lastChar] = '\u00ff' then\n            lastChar <- lastChar - 1\n        else\n            lastChar <- lastChar + 1\n    lastChar <> -1", "    let mutable lastCharIsLetter = false\n    for c in txt do\n        if c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\b' || c = '\\f' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '", "    let mutable is_letter = false\n    let mutable last_char = txt.Length - 1\n    while last_char >= 0 && not is_letter do\n        if txt.[last_char] = 'a' then\n            is_letter <- true\n        last_char <- last_char - 1\n    is_letter", "    let mutable lastCharIsLetter = false\n    for c in txt do\n        if c = ' ' || c = '\\t' || c = '\\n' || c = '\\r' || c = '\\b' || c = '\\f' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '\\v' || c = '"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}