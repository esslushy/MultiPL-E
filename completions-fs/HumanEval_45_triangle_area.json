{"name": "HumanEval_45_triangle_area", "language": "fs", "prompt": "//Given length of a side and high return area for a triangle.\n// >>> triangle_area(5, 3)\n// 7.5\nlet triangle_area (a: int) (h: int): float  = \n", "tests": "let test() = \n  let candidate = triangle_area\n  assert (candidate 5 3 = 7.5)\n  assert (candidate 2 2 = 2.0)\n  assert (candidate 10 8 = 40.0)\n  0\n\ntest()", "completions": ["    let rec triangle_area_rec (a: int) (h: int): float = \n        if a = h then 0.0\n        else triangle_area_rec (a + 1) (h - 1)\n    triangle_area_rec a h", "    let rec triangle_area_rec (a: int) (h: int): float = \n        if a < h then triangle_area_rec (a + 1) (h - 1)\n        else triangle_area_rec (a + 1) (h - 1)\n    triangle_area_rec a h", "    let rec triangle_area_rec (a: int) (h: int): float = \n        if a = h then 1.0\n        else triangle_area_rec (a + 1) (h - 1)\n    triangle_area_rec a h", "    let rec triangle_area_rec (a: int) (h: int): float = \n        let rec triangle_area_rec_rec (a: int) (h: int): float = \n            let rec triangle_area_rec_rec_rec (a: int) (h: int): float = \n                let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                    let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                        let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                            let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                    let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                        let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                            let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                    let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                        let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                            let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                                let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                                    let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                                        let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                                            let rec triangle_", "    let rec triangle_area_rec (a: int) (h: int) : float = \n        let area = (a * h) + (h - 1)\n        if area > 0 then triangle_area_rec (a + 1) (h - 1)\n        else area\n    triangle_area_rec a h", "    let rec triangle_area_rec (a: int) (h: int): float =\n        if a = h then 0.0\n        else\n            let x = a / h\n            let y = h - x * h\n            let z = h - x * h - y * h\n            triangle_area_rec (x + 1) (y + 1)\n            triangle_area_rec (x + 1) (y - 1)\n            triangle_area_rec (x - 1) (y - 1)\n            triangle_area_rec (x - 1) (y + 1)\n            triangle_area_rec (x + 1) (y + 1)\n            triangle_area_rec (x + 1) (y - 1)\n            triangle_area_rec (x - 1) (y - 1)\n    triangle_area_rec a h", "    let rec triangle_area_rec (a: int) (h: int): float = \n        if a = 0 then 0.0\n        elif h = 0 then 0.0\n        else\n            let h' = h - 1\n            let h'' = h' - 1\n            let h''' = h'' - 1\n            let h'''' = h''' - 1\n            let h''''' = h''''' - 1\n            let h'''''' = h''''''' - 1\n            let h''''''' = h''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n", "    let rec triangle_area_rec (a: int) (h: int): float =\n        let area = h * h\n        let area_rec = area * area\n        let area_rec_rec = area_rec * area_rec\n        let area_rec_rec_rec = area_rec_rec * area_rec_rec\n        let area_rec_rec_rec_rec = area_rec_rec_rec * area_rec_rec_rec\n        let area_rec_rec_rec_rec_rec = area_rec_rec_rec_rec * area_rec_rec_rec_rec\n        let area_rec_rec_rec_rec_rec = area_rec_rec_rec_rec_rec * area_rec_rec_rec_rec_rec\n        let area_rec_rec_rec_rec_rec = area_rec_rec_rec_rec_rec_rec * area_rec_rec_rec_rec_rec\n        let area_rec_rec_rec_rec_rec = area_rec_rec_rec_rec_rec_rec * area_rec_rec_rec_rec_rec\n        let area_rec_rec_rec_rec_rec = area_rec_rec_rec_rec_rec_rec * area_rec_rec_rec_rec_rec\n        let area_rec_rec_rec_rec_rec = area_rec_rec_rec_rec_rec_rec * area_rec_rec_rec_rec_rec\n        let area_rec_rec_rec_rec_rec = area_rec_rec_rec_rec_rec_rec * area_rec_rec_rec_rec_rec\n        let area_rec_rec_rec_rec_rec = area_rec_rec_rec_rec_rec_rec * area_rec_rec_rec_rec_rec\n        let area_rec_rec_rec_rec_rec = area_rec_rec_rec_rec_rec_rec * area_rec_rec_rec_rec_rec\n        let area_rec_rec_rec_rec_rec = area_rec_rec_rec_rec_rec_rec * area_rec_rec_rec_rec_rec\n        let area_rec_rec_rec_rec_rec = area", "    let rec triangle_area_rec (a: int) (h: int): float = \n        if a = h then 0.0\n        else\n            let n = a + h\n            let h' = h - a\n            triangle_area_rec (a + h') (h' - h)\n    triangle_area_rec a h", "    let rec triangle_area_rec (a: int) (h: int) = \n        if a = h then 1.0\n        else\n            let rec triangle_area_rec_rec (a: int) (h: int) = \n                if a = h then 1.0\n                else\n                    let rec triangle_area_rec_rec_rec (a: int) (h: int) = \n                        if a = h then 1.0\n                        else\n                            let rec triangle_area_rec_rec_rec (a: int) (h: int) = \n                                if a = h then 1.0\n                                else\n                                    let rec triangle_area_rec_rec_rec (a: int) (h: int) = \n                                        if a = h then 1.0\n                                        else\n                                            let rec triangle_area_rec_rec_rec (a: int) (h: int) = \n                                                if a = h then 1.0\n                                                else\n                                                    let rec triangle_area_rec_rec_rec (a: int) (h: int) = \n                                                        if a = h then 1.0\n                                                        else\n                                                            let rec triangle_area_rec_rec_rec (a: int) (h: int) = \n                                                                if a = h then 1.0\n                                                                else\n                                                                    let rec triangle_area_rec_rec_rec (a: int) (h: int) = \n                                                                        if a = h then 1.0\n                                                                        else\n                                                                            let rec triangle_area_rec_rec_rec (a: int) (h: int) = \n                                                                                if a = h then 1.0\n                                                                                else\n                                                                                    let rec triangle_area_rec_rec_rec (a: int) (h: int) = \n                                                                                        if a = h then 1.0\n                                                                                        else\n                                                                                            let rec triangle_area_rec_rec_rec (a: int) (h: int) = \n                                                                                               if a = h then 1.0\n                                                                                               else\n                                                                                                   let rec triangle_area_rec_rec_rec (a: int) (h", "    let rec triangle_area_rec (a: int) (h: int) =\n        let rec triangle_area_rec_rec (a: int) (h: int) =\n            let rec triangle_area_rec_rec_rec (a: int) (h: int) =\n                let rec triangle_area_rec_rec_rec (a: int) (h: int) =\n                    let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                        let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                            let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                    let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                        let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                            let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                                let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                                    let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                                        let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                                            let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                                                let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                                                    let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                                                        let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                                                            let rec triangle_area_rec_rec_rec_rec (a: int) (h: int) =\n                                                                                let rec triangle_area_rec_rec_rec_rec (", "    let rec triangle_area_rec (a: int) (h: int) = \n        if a = h then 1.0\n        else\n            let h' = h + 1\n            triangle_area_rec (a + 1) h'\n    triangle_area_rec a h", "    let rec triangle_area_rec (a: int) (h: int): float = \n        if a = h then 0.0\n        else\n            let h' = h + 1\n            triangle_area_rec (a + 1) h'\n    triangle_area_rec a h", "    let rec triangle_area_rec (a: int) (h: int): float = \n        let rec triangle_area_rec_rec (a: int) (h: int): float = \n            let rec triangle_area_rec_rec_rec (a: int) (h: int): float = \n                let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                    let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                        let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                            let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                    let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                        let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                            let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                    let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                        let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                            let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                                let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                                    let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                                        let rec triangle_area_rec_rec_rec_rec (a: int) (h: int): float = \n                                                                            let rec triangle_", "    let rec triangle_area_rec (a: int) (h: int) = \n        if a = h then 0.0\n        else\n            let h' = h + 1\n            triangle_area_rec (a + 1) h'\n    triangle_area_rec a h", "    let rec triangle_area_rec (a: int) (h: int): float =\n        let area = h * h\n        let rec triangle_area_rec_rec (a: int) (h: int): float =\n            if a = h then\n                h\n            else\n                let area_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec = triangle_area_rec_rec (a + 1) (h - 1)\n                let area_rec_rec", "    let rec triangle_area_rec (a: int) (h: int): float = \n        if a = h then 0.0\n        else\n            let h' = h - a\n            triangle_area_rec (a + 1) h'\n    triangle_area_rec a h", "    let rec triangle_area_rec (a: int) (h: int): float = \n        if a = 0 then 0.0\n        elif h = 0 then 0.0\n        else\n            let h' = h - 1\n            let a' = a - 1\n            let h'' = h' - 1\n            let h''' = h'' - 1\n            let h'''' = h''' - 1\n            let h''''' = h''''' - 1\n            let h'''''' = h''''''' - 1\n            let h''''''' = h''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h''''''''''' - 1\n            let h'''''''' = h", "    let rec triangle_area_rec (a: int) (h: int) = \n        let h' = h - 1\n        let h'' = h' - 1\n        let h''' = h'' - 1\n        let h'''' = h''' - 1\n        let h'''''' = h''''' - 1\n        let h'''''''' = h''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h'''''''' = h''''''''''' - 1\n        let h''", "    let rec triangle_area_rec (a: int) (h: int) =\n        if a = 0 then 0.0\n        elif h = 0 then 0.0\n        else\n            let h' = h - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1\n            let h' = h' - 1"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}