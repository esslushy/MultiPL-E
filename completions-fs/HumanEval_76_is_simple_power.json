{"name": "HumanEval_76_is_simple_power", "language": "fs", "prompt": "//Your task is to write a function that returns true if a number x is a simple\n// power of n and false in other cases.\n// x is a simple power of n if n**int=x\n// For example:\n// is_simple_power(1, 4) => true\n// is_simple_power(2, 2) => true\n// is_simple_power(8, 2) => true\n// is_simple_power(3, 2) => false\n// is_simple_power(3, 1) => false\n// is_simple_power(5, 3) => false\nlet is_simple_power (x: int) (n: int): bool  = \n", "tests": "let test() = \n  let candidate = is_simple_power\n  assert (candidate 16 2 = true)\n  assert (candidate 143214 16 = false)\n  assert (candidate 4 2 = true)\n  assert (candidate 9 3 = true)\n  assert (candidate 16 4 = true)\n  assert (candidate 24 2 = false)\n  assert (candidate 128 4 = false)\n  assert (candidate 12 6 = false)\n  assert (candidate 1 1 = true)\n  assert (candidate 1 12 = true)\n  0\n\ntest()", "completions": ["    let rec is_simple_power_rec (n: int) (x: int) (acc: int): bool =\n        if n = 0 then acc = x\n        elif n = 1 then acc = x\n        else is_simple_power_rec (n-1) (x-1) (acc+1)\n    is_simple_power_rec n x 0", "    let rec is_simple_power_rec (n: int) (x: int) =\n        if n = 0 then\n            true\n        elif n = x then\n            true\n        elif n = x + 1 then\n            is_simple_power_rec (n - 1) (x - 1)\n        else\n            false\n    is_simple_power_rec n x", "    let rec is_simple_power_rec (n: int) (x: int) (acc: int): bool = \n        if n = 0 then acc\n        elif n = x then true\n        elif n = x && x%n = 0 then is_simple_power_rec (n-1) (x-1) acc\n        else false\n    is_simple_power_rec n x 0", "    let rec is_simple_power_n (n: int) (x: int) = \n        if n = x then true\n        else if n = 0 then false\n        else is_simple_power_n (n-1) (x-1)\n    is_simple_power_n n x", "    let rec is_simple_power_rec (n: int) (x: int) = \n        if x = n then true\n        else\n            if x = 0 then false\n            else is_simple_power_rec (n-1) (x-1)\n    is_simple_power_rec n x", "    let rec is_simple_power_n (n: int) (x: int) = \n        if n = 0 then true\n        elif n = x then true\n        elif n = x + 1 then is_simple_power_n (n-1) x\n        else false\n    is_simple_power_n n x", "    let rec is_simple_power_rec (n: int) (x: int) = \n        if n = x then true\n        else if n = 0 then false\n        else is_simple_power_rec (n-1) (x-1)\n    is_simple_power_rec n x", "    let rec is_simple_power_rec (n: int) (x: int) = \n        if n = 0 then true\n        elif n = x then true\n        elif n = x + 1 then is_simple_power_rec (n-1) x\n        else false\n    is_simple_power_rec n x", "    let rec is_simple_power_rec (n: int) (x: int) (acc: int): bool = \n        if n = 0 then acc\n        elif n = x then true\n        else is_simple_power_rec (n-1) (x-1) (acc+1)\n    is_simple_power_rec n x 0", "    let rec is_simple_power_n (n: int) (x: int) = \n        if n=x then true\n        else if n%x=0 then is_simple_power_n (n/x) (x-1)\n        else false\n    is_simple_power_n n x", "    let rec is_simple_power_n (n: int) (x: int) = \n        if n = x then true\n        else\n            if n%x = 0 then is_simple_power_n (n/x) (x-1)\n            else false\n    is_simple_power_n n x", "    let rec is_simple_power_n (n: int) (x: int): bool =\n        if n = 0 then true\n        elif n = x then true\n        elif n % x = 0 then is_simple_power_n (n-1) x\n        else false\n    is_simple_power_n n x", "    let rec is_simple_power_rec (n: int) (x: int) = \n        if n = x then true\n        else if n = 0 then false\n        else is_simple_power_rec (n-1) (x-1)\n    is_simple_power_rec n x", "    let rec is_simple_power_n (n: int) (x: int): bool = \n        if n = 0 then true\n        elif n = 1 then x = x\n        elif n = 2 then x = x * x\n        elif n = 3 then x = x * x * x\n        elif n = 4 then x = x * x * x * x\n        elif n = 5 then x = x * x * x * x * x\n        elif n = 6 then x = x * x * x * x * x * x\n        elif n = 7 then x = x * x * x * x * x * x\n        elif n = 8 then x = x * x * x * x * x * x * x\n        elif n = 9 then x = x * x * x * x * x * x * x\n        elif n = 10 then x = x * x * x * x * x * x * x\n        elif n = 11 then x = x * x * x * x * x * x * x\n        elif n = 12 then x = x * x * x * x * x * x * x\n        elif n = 13 then x = x * x * x * x * x * x * x\n        elif n = 14 then x = x * x * x * x * x * x * x\n        elif n = 15 then x = x * x * x * x * x * x * x\n        elif n = 16 then x = x * x * x * x * x * x * x\n        elif n = 17 then x = x * x * x * x * x * x * x\n        elif n = 18 then x = x * x * x * x * x * x * x\n        elif n = 19 then x = x * x * x * x * x * x * x\n        elif n = 20 then x = x * x * x * x * x * x * x\n        elif n = 21 then x = x * x * x * x * x * x * x\n        elif n = 22 then x = x * x * x * x * x * x * x\n        elif n = 23 then x = x * x * x * x * x", "    let rec is_simple_power_n (n: int) (x: int) = \n        if n = 0 then true\n        elif n = x then true\n        elif n = x && x%n = 0 then is_simple_power_n (n-1) x\n        else false\n    is_simple_power_n n x", "    let rec is_simple_power_rec (n: int) (x: int) (acc: int): bool =\n        if n = 0 then\n            acc = x\n        elif n = 1 then\n            acc = x\n        else\n            let rec is_simple_power_rec_rec (n: int) (x: int) (acc: int): bool =\n                if n = 0 then\n                    acc = x\n                elif n = 1 then\n                    acc = x\n                else\n                    let rec is_simple_power_rec_rec_rec (n: int) (x: int) (acc: int): bool =\n                        if n = 0 then\n                            acc = x\n                        elif n = 1 then\n                            acc = x\n                        else\n                            let rec is_simple_power_rec_rec_rec_rec (n: int) (x: int) (acc: int): bool =\n                                if n = 0 then\n                                    acc = x\n                                elif n = 1 then\n                                    acc = x\n                                else\n                                    let rec is_simple_power_rec_rec_rec_rec (n: int) (x: int) (acc: int): bool =\n                                        if n = 0 then\n                                            acc = x\n                                        elif n = 1 then\n                                            acc = x\n                                        else\n                                            let rec is_simple_power_rec_rec_rec_rec (n: int) (x: int) (acc: int): bool =\n                                                if n = 0 then\n                                                    acc = x\n                                                elif n = 1 then\n                                                    acc = x\n                                                else\n                                                    let rec is_simple_power_rec_rec_rec_rec (n: int) (x: int) (acc: int): bool =\n                                                        if n = 0 then\n                                                            acc = x\n                                                        elif n = 1 then\n                                                            acc = x\n                                                        else\n                                                            let rec is_simple_power_rec_rec_rec_rec (n: int) (x: int) (acc: int): bool =\n                                                                if n = 0 then\n                                                                    acc = x\n                                                                elif n = 1 then\n                                                                    acc = x\n                                                              ", "    if n = 0 then true\n    elif n = 1 then false\n    else\n        let rec loop n =\n            if n = 0 then false\n            elif n = 1 then true\n            else\n                let rec loop n =\n                    if n = 0 then false\n                    elif n = 1 then true\n                    else\n                        let rec loop n =\n                            if n = 0 then false\n                            elif n = 1 then true\n                            else\n                                let rec loop n =\n                                    if n = 0 then false\n                                    elif n = 1 then true\n                                    else\n                                        let rec loop n =\n                                            if n = 0 then false\n                                            elif n = 1 then true\n                                            else\n                                                let rec loop n =\n                                                    if n = 0 then false\n                                                    elif n = 1 then true\n                                                    else\n                                                        let rec loop n =\n                                                            if n = 0 then false\n                                                            elif n = 1 then true\n                                                            else\n                                                                let rec loop n =\n                                                                    if n = 0 then false\n                                                                    elif n = 1 then true\n                                                                    else\n                                                                        let rec loop n =\n                                                                            if n = 0 then false\n                                                                            elif n = 1 then true\n                                                                            else\n                                                                                let rec loop n =\n                                                                                    if n = 0 then false\n                                                                                    elif n = 1 then true\n                                                                                    else\n                                                                                        let rec loop n =\n                                                                                            if n = 0 then false\n                                                                                            elif n = 1 then true\n                                                                                            else\n                                                                                               let rec loop n =\n                                                                                                   if n = 0 then false\n                                                                                                   elif n = 1 then true\n                                                                                                   else\n                                                                                                       let rec loop n =\n                                                                                                           if n = 0 then false\n                                                                                                           elif n = 1 then true\n                                                                                                           else\n                                                                                                               let rec loop n =\n                                                                                                                   if n = 0 then false\n                                                                                                                   elif n = 1 then true\n                                                                                                                   else\n                                                                                                                       let rec loop n =\n                                                                                                                           if n = 0 then false\n                                                                                                                           elif n = 1 then", "    let rec is_simple_power_rec (n: int) (x: int) (acc: int): bool = \n        if n = 0 then \n            acc = x\n        else\n            let n' = n - 1\n            if n' = 0 then \n                acc = x\n            else\n                let n' = n' - 1\n                if n' = 0 then \n                    acc = x\n                else\n                    let n' = n' - 1\n                    if n' = 0 then \n                        acc = x\n                    else\n                        let n' = n' - 1\n                        if n' = 0 then \n                            acc = x\n                        else\n                            let n' = n' - 1\n                            if n' = 0 then \n                                acc = x\n                            else\n                                let n' = n' - 1\n                                if n' = 0 then \n                                    acc = x\n                                else\n                                    let n' = n' - 1\n                                    if n' = 0 then \n                                        acc = x\n                                    else\n                                        let n' = n' - 1\n                                        if n' = 0 then \n                                            acc = x\n                                        else\n                                            let n' = n' - 1\n                                            if n' = 0 then \n                                                acc = x\n                                            else\n                                                let n' = n' - 1\n                                                if n' = 0 then \n                                                    acc = x\n                                                else\n                                                    let n' = n' - 1\n                                                    if n' = 0 then \n                                                        acc = x\n                                                    else\n                                                        let n' = n' - 1\n                                                        if n' = 0 then \n                                                            acc = x\n                                                        else\n                                                            let n' = n' - 1\n                                                            if n' = 0 then \n                                                                acc = x\n                                                            else\n                                                                let n' = n' - 1\n                                                                if n' = 0 then \n                                                                    acc = x\n                                                                else\n                                                                    let n' = n' - 1\n                                                                    if n' = 0 then \n                                                                        acc = x\n                                                                    else\n                                                                        let n' = n' - 1\n                                                                        if n", "    let rec is_simple_power_n (n: int) (x: int) = \n        if n = 0 then true\n        elif n = x then true\n        elif n = x && x % n = 0 then true\n        else is_simple_power_n (n-1) (x-1)\n    is_simple_power_n n x", "    let rec is_simple_power_rec (n: int) (x: int) (acc: int): bool = \n        if n = 0 then acc\n        else if n = x then true\n        else is_simple_power_rec (n-1) (x-1) (acc+1)\n    is_simple_power_rec n x 0"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}