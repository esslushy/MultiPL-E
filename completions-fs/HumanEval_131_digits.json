{"name": "HumanEval_131_digits", "language": "fs", "prompt": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits (n: int): int  = \n", "tests": "let test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()", "completions": ["    let rec loop n = \n        if n = 0 then 0\n        else \n            let even = n % 2 = 0\n            if even then loop (n / 2)\n            else loop (n / 2) + 1\n    loop n", "    let rec digits' acc n = \n        if n = 0 then acc\n        else digits' (acc * 10) (n / 10)\n    digits' 0 n", "    let rec loop i = \n        if i < n then \n            loop (i + 1)\n        else \n            0\n    loop n", "    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n-1) + digits' (n-2)\n    digits' n", "    if n = 0 then 0\n    else\n        let even = (n % 2 = 0)\n        if even then n / 2\n        else n / 2 - 1", "    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n - 1) + digits' (n - 2)\n    digits' n", "    let rec loop i = \n        if i = 0 then 0\n        else \n            let odd = (i % 2) = 0\n            if odd then loop (i / 2)\n            else loop (i / 2) + 1\n    loop n", "    let rec digits' n = \n        if n = 0 then 0 \n        else digits' (n-1) + digits' (n-2)\n    digits' n", "    let rec loop acc n = \n        if n = 0 then acc\n        else loop (acc * (n - 1)) (n / 2)\n    loop 0 n", "    let rec digits' acc n = \n        if n = 0 then acc\n        else digits' (n-1) (n-1)\n    digits' 0 n", "    let rec loop acc n = \n        if n = 0 then acc\n        else loop (n - 1) (n / 2)\n    loop 0 n", "    if n < 0 then failwith \"negative number\"\n    else\n        let even = n % 2 = 0\n        if even then n / 2\n        else n / 2 - 1", "    let rec loop i acc = \n        if i = 0 then acc\n        else loop (i-1) (acc * i)\n    loop n 0", "    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n-1) + digits' (n-2)\n    digits' n", "    let rec digits' (n: int) (digits: int list) =\n        if n = 0 then\n            digits\n        else\n            digits' (n - 1) (digits @ [n])\n    digits' n []", "    if n >= 0 then\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n / 2\n    else\n        0", "    let rec loop i = \n        if i < n then \n            loop (i + 1)\n        else \n            0\n    loop (n - 1)", "    let rec loop acc =\n        if n = 0 then acc\n        else loop (acc * 10)\n    loop 0", "    let rec loop i = \n        if i < n then \n            loop (i + 1)\n        else \n            0\n    loop 0", "    let rec loop i acc = \n        if i = 0 then acc\n        else loop (i-1) (acc * i)\n    loop n 0"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}