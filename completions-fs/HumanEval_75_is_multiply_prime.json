{"name": "HumanEval_75_is_multiply_prime", "language": "fs", "prompt": "//Write a function that returns true if the given number is the multiplication of 3 prime numbers\n// and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n// is_multiply_prime(30) == True\n// 30 = 2 * 3 * 5\nlet is_multiply_prime (a: int): bool  = \n", "tests": "let test() = \n  let candidate = is_multiply_prime\n  assert (candidate 5 = false)\n  assert (candidate 30 = true)\n  assert (candidate 8 = true)\n  assert (candidate 10 = false)\n  assert (candidate 125 = true)\n  assert (candidate 105 = true)\n  assert (candidate 126 = false)\n  assert (candidate 729 = false)\n  assert (candidate 891 = false)\n  assert (candidate 1001 = true)\n  0\n\ntest()", "completions": ["    let rec is_multiply_prime_rec (a: int) (b: int): bool = \n        if a = b then true\n        else \n            let rec is_multiply_prime_rec_rec (a: int) (b: int): bool = \n                if a = b then true\n                else \n                    if a % b = 0 then is_multiply_prime_rec_rec (a/b) (b/a)\n                    else false\n            is_multiply_prime_rec_rec a b\n    is_multiply_prime_rec a 1", "    let rec is_multiply_prime_rec (a: int) = \n        if a = 0 then true\n        elif a = 1 then false\n        elif a = 2 then true\n        elif a = 3 then true\n        elif a = 5 then true\n        elif a = 7 then true\n        elif a = 11 then true\n        elif a = 13 then true\n        elif a = 17 then true\n        elif a = 19 then true\n        elif a = 23 then true\n        elif a = 29 then true\n        elif a = 31 then true\n        elif a = 37 then true\n        elif a = 41 then true\n        elif a = 43 then true\n        elif a = 47 then true\n        elif a = 53 then true\n        elif a = 59 then true\n        elif a = 61 then true\n        elif a = 67 then true\n        elif a = 71 then true\n        elif a = 73 then true\n        elif a = 79 then true\n        elif a = 83 then true\n        elif a = 89 then true\n        elif a = 91 then true\n        elif a = 97 then true\n        elif a = 101 then true\n        elif a = 103 then true\n        elif a = 107 then true\n        elif a = 109 then true\n        elif a = 111 then true\n        elif a = 113 then true\n        elif a = 117 then true\n        elif a = 119 then true\n        elif a = 121 then true\n        elif a = 123 then true\n        elif a = 127 then true\n        elif a = 129 then true\n        elif a = 131 then true\n        elif a = 133 then true\n        elif a = 137 then true\n        elif a = 139 then true\n        elif a = 141 then true\n        elif a = 143 then true\n        elif a = 147 then true\n        elif a = 149 then true\n        elif a = 151 then true\n        elif a = 153 then true\n        elif a = 157 then true\n        elif a = 159 then true\n        elif a = 161 then true\n        elif a = 163 then true\n        elif a = 167 then", "    let rec is_multiply_prime_rec (a: int) (b: int): bool = \n        if a = b then true\n        elif a % b = 0 then is_multiply_prime_rec (a/b) (b-1)\n        else false\n    is_multiply_prime_rec a 1", "    let rec is_multiply_prime_rec (a: int) (b: int): bool = \n        if a = b then true\n        elif a % b = 0 then is_multiply_prime_rec (a/b) (b-1)\n        else false\n    is_multiply_prime_rec a 0", "    let rec is_multiply_prime_a (a: int) = \n        if a = 0 then true\n        elif a % 3 = 0 then is_multiply_prime_a (a / 3)\n        else false\n    is_multiply_prime_a a", "    let rec is_multiply_prime_a (a: int): bool = \n        if a = 0 then true\n        elif a % 3 = 0 then is_multiply_prime_a (a / 3)\n        else false\n    is_multiply_prime_a a", "    let rec is_multiply_prime_rec (a: int) (b: int): bool = \n        if a = b then true\n        elif a % b = 0 then is_multiply_prime_rec (a / b) (b - 1)\n        else false\n    is_multiply_prime_rec a 0", "    let rec is_multiply_prime_rec (a: int) (b: int): bool = \n        if a = b then true\n        elif a % b = 0 then is_multiply_prime_rec (a/b) (b-1)\n        else false\n    is_multiply_prime_rec a 0", "    let rec is_multiply_prime_a (a: int): bool = \n        if a < 100 then \n            if a % 3 = 0 then \n                is_multiply_prime_a (a / 3)\n            else\n                is_multiply_prime_a (a / 5)\n        else\n            false\n    is_multiply_prime_a(a)", "    let rec is_multiply_prime_aux (a: int) (b: int) = \n        if a = b then true\n        elif a % b = 0 then is_multiply_prime_aux (a/b) (b-1)\n        else false\n    is_multiply_prime_aux a 0", "    let rec is_multiply_prime_rec (a: int): bool = \n        if a = 0 then true\n        elif a % 3 = 0 then is_multiply_prime_rec (a / 3)\n        else false\n    is_multiply_prime_rec a", "    let rec is_multiply_prime_a (a: int) = \n        if a = 0 then true\n        elif a % 3 = 0 then is_multiply_prime_a (a / 3)\n        else false\n    is_multiply_prime_a a", "    let rec is_multiply_prime_rec (a: int) (b: int): bool = \n        if a = b then true\n        elif a % b = 0 then is_multiply_prime_rec (a/b) (b-1)\n        else false\n    is_multiply_prime_rec a 1", "    let rec is_multiply_prime_rec (a: int) (b: int) (c: int) = \n        if a = b then \n            c = b\n        elif a = c then \n            false\n        else\n            is_multiply_prime_rec (a + b) (a * b) (c * b)\n    is_multiply_prime_rec a 0 0", "    let rec is_multiply_prime_rec (a: int) (b: int): bool = \n        if a = b then true\n        elif a < b then is_multiply_prime_rec (a+1) (b-1)\n        else is_multiply_prime_rec (b+1) (a-1)\n    is_multiply_prime_rec a 0", "    let rec is_multiply_prime_rec (a: int) (b: int): bool = \n        if a = b then true\n        else\n            let rec is_multiply_prime_rec_rec (a: int) (b: int): bool = \n                if a = b then true\n                else\n                    if a % b = 0 then is_multiply_prime_rec_rec (a/b) (b/a)\n                    else false\n            is_multiply_prime_rec_rec a b\n    is_multiply_prime_rec a (a * b)", "    let rec is_multiply_prime_rec (a: int) = \n        if a < 100 then \n            if a % 3 = 0 then \n                is_multiply_prime_rec (a / 3)\n            else \n                false\n        else \n            true\n    is_multiply_prime_rec a", "    let rec is_multiply_prime_rec (a: int) (b: int): bool =\n        if a = b then\n            true\n        else\n            let a' = a + b\n            if is_multiply_prime_rec a' b' then\n                is_multiply_prime_rec a' b'\n            else\n                is_multiply_prime_rec a' b\n    is_multiply_prime_rec a 0", "    let rec is_multiply_prime_rec (a: int) (b: int): bool = \n        if a = b then true\n        elif a % b = 0 then is_multiply_prime_rec (a / b) (b - 1)\n        else false\n    is_multiply_prime_rec a (a - 1)", "    let rec is_multiply_prime_aux (a: int) = \n        if a = 0 then true\n        elif a = 1 then false\n        else is_multiply_prime_aux (a - 1)\n    is_multiply_prime_aux a"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}