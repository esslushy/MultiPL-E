{"name": "HumanEval_2_truncate_number", "language": "fs", "prompt": "//Given a positive floating point number, it can be decomposed into\n// and integer part (largest integer smaller than given number) and decimals\n// (leftover part always smaller than 1).\n// Return the decimal part of the number.\n// >>> truncate_number(3.5)\n// 0.5\nlet truncate_number (number: float): float  = \n", "tests": "let test() = \n  let candidate = truncate_number\n  assert (candidate 3.5 = 0.5)\n  assert (candidate 1.25 = 0.25)\n  assert (candidate 123.0 = 0.0)\n  0\n\ntest()", "completions": ["    let truncate_number_part (number: float) = \n        let truncate_number_decimal (number: float) = \n            let truncate_number_decimal_part (number: float) = \n                let truncate_number_decimal_part_decimal (number: float) = \n                    let truncate_number_decimal_part_decimal_part (number: float) = \n                        let truncate_number_decimal_part_decimal_part_decimal (number: float) = \n                            let truncate_number_decimal_part_decimal_part_decimal_part (number: float) = \n                                let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                    let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                        let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                            let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                    let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                        let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                            let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                    let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                        let truncate_number_decimal_part_decimal_part_decimal_part_decimal (", "    let truncate_number_decimal (number: float) = \n        let truncate_number_decimal_int (number: int) = \n            let truncate_number_decimal_int_int (number: int) = \n                let truncate_number_decimal_int_int_int (number: int) = \n                    let truncate_number_decimal_int_int_int_int (number: int) = \n                        let truncate_number_decimal_int_int_int_int_int (number: int) = \n                            let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                    let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                        let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                            let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                    let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                        let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                            let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                                let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                                    let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                                        let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                                            let truncate_number_decimal_int_int_int_int_int", "    let truncate_number_part (number: float) = \n        let truncate_number_decimal (number: float) = \n            let truncate_number_decimal_part (number: float) = \n                let truncate_number_decimal_part_decimal (number: float) = \n                    let truncate_number_decimal_part_decimal_part (number: float) = \n                        let truncate_number_decimal_part_decimal_part_decimal (number: float) = \n                            let truncate_number_decimal_part_decimal_part_decimal_part (number: float) = \n                                let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                    let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                        let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                            let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                    let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                        let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                            let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                    let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                        let truncate_number_decimal_part_decimal_part_decimal_part_decimal (", "    let truncate_number_to_decimal (number: float) =\n        let truncate_number_to_decimal_to_int (number: float) =\n            let truncate_number_to_decimal_to_int_to_decimal (number: float) =\n                let truncate_number_to_decimal_to_int_to_decimal_to_int (number: float) =\n                    let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal (number: float) =\n                        let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) =\n                            let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal (number: float) =\n                                let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) =\n                                    let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal (number: float) =\n                                        let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) =\n                                            let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal (number: float) =\n                                                let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal", "    let truncate_number_decimal (number: float) = \n        let truncate_number_decimal_int (number: int) = \n            let truncate_number_decimal_int_int (number: int) = \n                let truncate_number_decimal_int_int_int (number: int) = \n                    let truncate_number_decimal_int_int_int_int (number: int) = \n                        let truncate_number_decimal_int_int_int_int_int (number: int) = \n                            let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                    let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                        let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                            let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                    let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                        let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                            let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                                let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                                    let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                                        let truncate_number_decimal_int_int_int_int_int_int (number: int) = \n                                                                            let truncate_number_decimal_int_int_int_int_int", "    let truncate_number_result = \n        let truncate_number_result = number |> float |> Math.Truncate\n        if truncate_number_result < 0.0 then\n            - truncate_number_result\n        else\n            truncate_number_result\n    \n    if truncate_number_result < 0.0 then\n        - truncate_number_result\n    else\n        truncate_number_result", "    let truncate_number_to_decimal (number: float) = \n        let truncate_number_to_decimal_int (number: float) = \n            let truncate_number_to_decimal_int_int (number: float) = \n                let truncate_number_to_decimal_int_int_int (number: float) = \n                    let truncate_number_to_decimal_int_int_int_int (number: float) = \n                        let truncate_number_to_decimal_int_int_int_int_int (number: float) = \n                            let truncate_number_to_decimal_int_int_int_int_int_int (number: float) = \n                                let truncate_number_to_decimal_int_int_int_int_int_int_int (number: float) = \n                                    let truncate_number_to_decimal_int_int_int_int_int_int_int (number: float) = \n                                        let truncate_number_to_decimal_int_int_int_int_int_int_int_int (number: float) = \n                                            let truncate_number_to_decimal_int_int_int_int_int_int_int_int_int (number: float) = \n                                                let truncate_number_to_decimal_int_int_int_int_int_int_int_int_int_int (number: float) = \n                                                    let truncate_number_to_decimal_int_int_int_int_int_int_int_int_int_int_int_int (number: float) = \n                                                        let truncate_number_to_decimal_int_int_int_int_int_int_int_int_int_int_int_int_int_int (number: float) = \n                                                            let truncate_number_to_decimal_int_int_int_int_int_int_int_int_int_int_int_int_int_int_int_int (number: float) = \n                                                                let truncate_number_to_dec", "    let truncate_number_part = number |> float |> floor |> int\n    let truncate_number_decimal = number |> float |> truncate_number_part\n    truncate_number_decimal", "    let truncate_number_to_decimal (number: float) = \n        let truncate_number_to_decimal_to_int (number: float) = \n            let truncate_number_to_decimal_to_int_to_decimal (number: float) = \n                let truncate_number_to_decimal_to_int_to_decimal_to_int (number: float) = \n                    let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal (number: float) = \n                        let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                            let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                                let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                                    let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                                        let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                                            let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_", "    let truncate_number_to_decimal (number: float) = \n        let truncate_number_to_decimal_to_int (number: float) = \n            let truncate_number_to_decimal_to_int_to_decimal (number: float) = \n                let truncate_number_to_decimal_to_int_to_decimal_to_int (number: float) = \n                    let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal (number: float) = \n                        let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                            let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                                let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                                    let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                                        let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                                            let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_", "    let truncate_number_part (number: float) = \n        let truncate_number_part_decimal (number: float) = \n            let truncate_number_part_decimal_part (number: float) = \n                let truncate_number_part_decimal_part_decimal (number: float) = \n                    let truncate_number_part_decimal_part_decimal_part (number: float) = \n                        let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                            let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                    let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                        let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                            let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                    let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                        let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                            let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                    let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                        let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                            let truncate_number_part_decimal_part_", "    let truncate_number_part (number: float) = \n        let truncate_number_decimal (number: float) = \n            let truncate_number_decimal_part (number: float) = \n                let truncate_number_decimal_part_decimal (number: float) = \n                    let truncate_number_decimal_part_decimal_part (number: float) = \n                        let truncate_number_decimal_part_decimal_part_decimal (number: float) = \n                            let truncate_number_decimal_part_decimal_part_decimal_part (number: float) = \n                                let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                    let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                        let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                            let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                    let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                        let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                            let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                    let truncate_number_decimal_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                        let truncate_number_decimal_part_decimal_part_decimal_part_decimal (", "    let truncate_number_part = \n        let truncate_number_part_decimal = \n            let truncate_number_part_decimal_part = \n                let truncate_number_part_decimal_part_decimal = \n                    let truncate_number_part_decimal_part_decimal_part = \n                        let truncate_number_part_decimal_part_decimal_part_decimal = \n                            let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal = \n                                let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal = \n                                    let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal = \n                                        let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal = \n                                            let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part", "    let truncate_number_part (number: float) = \n        let truncate_number_part_decimal (number: float) = \n            let truncate_number_part_decimal_part (number: float) = \n                let truncate_number_part_decimal_part_decimal (number: float) = \n                    let truncate_number_part_decimal_part_decimal_part (number: float) = \n                        let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                            let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                    let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                        let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                            let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                    let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                        let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                            let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                    let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                        let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                            let truncate_number_part_decimal_part_", "    let truncate_number_decimal (number: float) = \n        let truncate_number_decimal_int (number: float) = \n            let truncate_number_decimal_int_int (number: float) = \n                let truncate_number_decimal_int_int_int (number: float) = \n                    let truncate_number_decimal_int_int_int_int (number: float) = \n                        let truncate_number_decimal_int_int_int_int_int (number: float) = \n                            let truncate_number_decimal_int_int_int_int_int_int (number: float) = \n                                let truncate_number_decimal_int_int_int_int_int_int_int (number: float) = \n                                    let truncate_number_decimal_int_int_int_int_int_int_int (number: float) = \n                                        let truncate_number_decimal_int_int_int_int_int_int_int_int (number: float) = \n                                            let truncate_number_decimal_int_int_int_int_int_int_int_int_int (number: float) = \n                                                let truncate_number_decimal_int_int_int_int_int_int_int_int_int (number: float) = \n                                                    let truncate_number_decimal_int_int_int_int_int_int_int_int_int_int (number: float) = \n                                                        let truncate_number_decimal_int_int_int_int_int_int_int_int_int_int_int (number: float) = \n                                                            let truncate_number_decimal_int_int_int_int_int_int_int_int_int_int_int_int (number: float) = \n                                                                let truncate_number_decimal_int_int_int_int_int_int_int_int_int_int_int_int_int_int_int (number: float) = \n                                                                    let truncate_number_decimal_int", "    let truncate_number_to_decimal (number: float) = \n        let truncate_number_to_decimal_to_int (number: float) = \n            let truncate_number_to_decimal_to_int_to_decimal (number: float) = \n                let truncate_number_to_decimal_to_int_to_decimal_to_int (number: float) = \n                    let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal (number: float) = \n                        let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                            let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                                let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                                    let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                                        let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) = \n                                            let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_", "    let truncate_number_part (number: float) = \n        let truncate_number_part_decimal (number: float) = \n            let truncate_number_part_decimal_part (number: float) = \n                let truncate_number_part_decimal_part_decimal (number: float) = \n                    let truncate_number_part_decimal_part_decimal_part (number: float) = \n                        let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                            let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                    let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                        let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                            let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                    let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                        let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                            let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                    let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                        let truncate_number_part_decimal_part_decimal_part_decimal (number: float) = \n                                                                            let truncate_number_part_decimal_part_", "    let truncate_number_result = \n        if number < 0.0 then \n            -number\n        else\n            number\n    if truncate_number_result < 0.0 then \n        -truncate_number_result\n    else\n        truncate_number_result", "    let truncate_number_to_decimal (number: float) =\n        let truncate_number_to_decimal_to_int (number: float) =\n            let truncate_number_to_decimal_to_int_to_decimal (number: float) =\n                let truncate_number_to_decimal_to_int_to_decimal_to_int (number: float) =\n                    let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal (number: float) =\n                        let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) =\n                            let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) =\n                                let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) =\n                                    let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) =\n                                        let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int (number: float) =\n                                            let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to", "    let truncate_number_decimal (number: float) = \n        let truncate_number_decimal_int (number: int) = \n            let truncate_number_decimal_int_int (number: int) = \n                let truncate_number_decimal_int_int_int (number: int) = \n                    let truncate_number_decimal_int_int_int_int (number: int) = \n                        let truncate_number_decimal_int_int_int_int_int (number: int) = \n                            let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                    let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                        let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                            let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                                let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                                    let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                                        let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                                            let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                                                let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                                                    let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                                                        let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                                                            let truncate_number_decimal_int_int_int_int_int (number: int) = \n                                                                                let truncate_number_decimal_int_"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}