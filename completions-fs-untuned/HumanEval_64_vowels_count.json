{"name": "HumanEval_64_vowels_count", "language": "fs", "prompt": "//Write a function vowels_count which takes a string representing\n// a word as input and returns the number of vowels in the string.\n// Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n// vowel, but only when it is at the end of the given word.\n// Example:\n// >>> vowels_count(\"abcde\")\n// 2\n// >>> vowels_count(\"ACEDY\")\n// 3\nlet vowels_count (s: string): int  = \n", "tests": "let test() = \n  let candidate = vowels_count\n  assert (candidate \"abcde\" = 2)\n  assert (candidate \"Alone\" = 3)\n  assert (candidate \"key\" = 2)\n  assert (candidate \"bye\" = 1)\n  assert (candidate \"keY\" = 2)\n  assert (candidate \"bYe\" = 1)\n  assert (candidate \"ACEDY\" = 3)\n  0\n\ntest()", "completions": ["(s.length === 1) ? 0 :\n(s.charAt(s.length - 1) === 'y') ? 1 :\n(s.charAt(s.length - 2) === 'y') ? 2 :\n(s.charAt(s.length - 1) === 'y') ? 3 :\n0;", "  (s.length === 1 ? 0 :\n   (s.charAt(s.length - 1) === 'y' ? 1 : 0));", "  (s.length === 1 ? 1 : 0)\n  + (s.charAt(s.length - 1) === 'y' ? 1 : 0);", "  (s.length === 1) ? 0 :\n  (s.charAt(s.length - 1) === 'y') ? 1 :\n  (s.charAt(s.length - 2) === 'y') ? 2 :\n  (s.charAt(s.length - 3) === 'y') ? 3 :\n  (s.charAt(s.length - 4) === 'y') ? 4 :\n  (s.charAt(s.length - 5) === 'y') ? 5 :\n  (s.charAt(s.length - 6) === 'y') ? 6 :\n  (s.charAt(s.length - 7) === 'y') ? 7 :\n  (s.charAt(s.length - 8) === 'y') ? 8 :\n  (s.charAt(s.length - 9) === 'y') ? 9 :\n  (s.charAt(s.length - 10) === 'y') ? 10 :\n  (s.charAt(s.length - 11) === 'y') ? 11 :\n  (s.charAt(s.length - 12) === 'y') ? 12 :\n  (s.charAt(s.length - 13) === 'y') ? 13 :\n  (s.charAt(s.length - 14) === 'y') ? 14 :\n  (s.charAt(s.length - 15) === 'y') ? 15 :\n  (s.charAt(s.length - 16) === 'y') ? 16 :\n  (s.charAt(s.length - 17) === 'y') ? 17 :\n  (s.charAt(s.length - 18) === 'y') ? 18 :\n  (s.charAt(s.length - 19) === 'y') ? 19 :\n  (s.charAt(s.length - 20) === 'y') ? 20 :\n  (s.charAt(s.length - 21) === 'y') ? 21 :\n  (s.charAt(s.length - 22) === 'y') ? 22 :\n  (s.charAt(s.length - 23) === 'y') ? 23 :\n  (s.charAt(s.length - 24) === 'y')", "(s.length == 1 ? 0 :\ns.charAt(0) == 'y' ? 1 :\ns.charAt(s.length - 1) == 'y' ? 2 :\ns.charAt(s.length - 2) == 'y' ? 3 :\ns.charAt(s.length - 1) == 'y' ? 4 :\ns.charAt(s.length - 2) == 'y' ? 5 :\ns.charAt(s.length - 1) == 'y' ? 6 :\ns.charAt(s.length - 2) == 'y' ? 7 :\ns.charAt(s.length - 1) == 'y' ? 8 :\ns.charAt(s.length - 2) == 'y' ? 9 :\ns.charAt(s.length - 1) == 'y' ? 10 :\ns.charAt(s.length - 2) == 'y' ? 11 :\ns.charAt(s.length - 1) == 'y' ? 12 :\ns.charAt(s.length - 2) == 'y' ? 13 :\ns.charAt(s.length - 1) == 'y' ? 14 :\ns.charAt(s.length - 2) == 'y' ? 15 :\ns.charAt(s.length - 1) == 'y' ? 16 :\ns.charAt(s.length - 2) == 'y' ? 17 :\ns.charAt(s.length - 1) == 'y' ? 18 :\ns.charAt(s.length - 2) == 'y' ? 19 :\ns.charAt(s.length - 1) == 'y' ? 20 :\ns.charAt(s.length - 2) == 'y' ? 21 :\ns.charAt(s.length - 1) == 'y' ? 22 :\ns.charAt(s.length - 2) == 'y' ? 23 :\ns.charAt(s.length - 1) == 'y' ? 24 :\ns.charAt(s.length - 2) == 'y' ? 25 :\ns.charAt(s.length - 1) == 'y' ? 26 :\ns.charAt(s.length - 2) ==", "  (s.length == 1) ? 0 :\n  (s.charAt(0) == 'y') ? 1 :\n  (s.charAt(s.length - 1) == 'y') ? 2 :\n  (s.charAt(s.length - 2) == 'y') ? 3 :\n  0;", "  (s.length - 1) * (s[s.length - 1] == 'y' ? 1 : 0)", "(s) => s.length - (s.length % 2 == 0 ? 1 : 0);", "  (s.length == 1 ? 0 :\n   (s.charAt(s.length - 1) == 'y' ? 1 : 0));", "(s: string) => {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] == 'y') {\n      count++;\n    }\n  }\n  return count;\n};", "  (s.length === 1) ? 1 :\n  (s.length === 2) ? 2 :\n  (s.length === 3) ? 3 :\n  (s.length === 4) ? 4 :\n  (s.length === 5) ? 5 :\n  (s.length === 6) ? 6 :\n  (s.length === 7) ? 7 :\n  (s.length === 8) ? 8 :\n  (s.length === 9) ? 9 :\n  (s.length === 10) ? 10 :\n  (s.length === 11) ? 11 :\n  (s.length === 12) ? 12 :\n  (s.length === 13) ? 13 :\n  (s.length === 14) ? 14 :\n  (s.length === 15) ? 15 :\n  (s.length === 16) ? 16 :\n  (s.length === 17) ? 17 :\n  (s.length === 18) ? 18 :\n  (s.length === 19) ? 19 :\n  (s.length === 20) ? 20 :\n  (s.length === 21) ? 21 :\n  (s.length === 22) ? 22 :\n  (s.length === 23) ? 23 :\n  (s.length === 24) ? 24 :\n  (s.length === 25) ? 25 :\n  (s.length === 26) ? 26 :\n  (s.length === 27) ? 27 :\n  (s.length === 28) ? 28 :\n  (s.length === 29) ? 29 :\n  (s.length === 30) ? 30 :\n  (s.length === 31) ? 31 :\n  (s.length === 32) ? 32 :\n  (s.length === 33) ? 33 :\n  (s.length === 34) ? 34 :\n  (s.length === 35) ? 35 :\n  (s.length === 36) ? 36 :\n  (s.length === 37) ? 37 :\n  (s.length === 38) ? 38 :\n  (s.length === 39) ? 39 :\n  (s.length === 40) ? 40 :\n  (s.length === 41) ? 41 :\n  (s.length === 42) ? 42 :\n  (s.length === 43)", "  (s.length === 1) ? 0 :\n  (s.length === 2) ? 1 :\n  (s.length === 3) ? 2 :\n  (s.length === 4) ? 3 :\n  (s.length === 5) ? 4 :\n  (s.length === 6) ? 5 :\n  (s.length === 7) ? 6 :\n  (s.length === 8) ? 7 :\n  (s.length === 9) ? 8 :\n  (s.length === 10) ? 9 :\n  (s.length === 11) ? 10 :\n  (s.length === 12) ? 11 :\n  (s.length === 13) ? 12 :\n  (s.length === 14) ? 13 :\n  (s.length === 15) ? 14 :\n  (s.length === 16) ? 15 :\n  (s.length === 17) ? 16 :\n  (s.length === 18) ? 17 :\n  (s.length === 19) ? 18 :\n  (s.length === 20) ? 19 :\n  (s.length === 21) ? 20 :\n  (s.length === 22) ? 21 :\n  (s.length === 23) ? 22 :\n  (s.length === 24) ? 23 :\n  (s.length === 25) ? 24 :\n  (s.length === 26) ? 25 :\n  (s.length === 27) ? 26 :\n  (s.length === 28) ? 27 :\n  (s.length === 29) ? 28 :\n  (s.length === 30) ? 29 :\n  (s.length === 31) ? 30 :\n  (s.length === 32) ? 31 :\n  (s.length === 33) ? 32 :\n  (s.length === 34) ? 33 :\n  (s.length === 35) ? 34 :\n  (s.length === 36) ? 35 :\n  (s.length === 37) ? 36 :\n  (s.length === 38) ? 37 :\n  (s.length === 39) ? 38 :\n  (s.length === 40) ? 39 :\n  (s.length === 41) ? 40 :\n  (s.length === 42) ? 41 :\n  (s.length === 43)", "function (s: string) {\n  let vowels = s.match(/[aeiou]/)\n  let count = 0\n  for (let i = 0; i < vowels.length; i++) {\n    if (vowels[i] === 'y') count++\n  }\n  return count\n}", "(s) => {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charAt(i) === 'y') {\n      count++;\n    }\n  }\n  return count;\n}", "  (s.length - 1) / 2", "function (s: string) {\n  let vowels = s.match(/[aeiou]/)\n  if (vowels) {\n    return vowels.length\n  }\n  return 0\n}", "(s: string) => {\n  let vowels = s.match(/[aeiou]/)\n  let count = 0\n  for (let i = 0; i < vowels.length; i++) {\n    if (vowels[i] === 'y') {\n      count++\n    }\n  }\n  return count\n}", "  (s.length === 1 ? 1 : 0)\n  + (s.charAt(s.length - 1) === 'y' ? 1 : 0);", "  (s.length > 1 ? s.charAt(s.length - 1) : '').toLowerCase().split(' ').length;", "(s) => s.length > 0 ? s.charAt(s.length - 1) : 0;"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}