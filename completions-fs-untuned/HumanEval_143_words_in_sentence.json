{"name": "HumanEval_143_words_in_sentence", "language": "fs", "prompt": "//You are given a string representing a sentence,\n// the sentence contains some words separated by a space,\n// and you have to return a string that contains the words from the original sentence,\n// whose lengths are prime numbers,\n// the order of the words in the new string should be the same as the original one.\n// Example 1:\n// Input: sentence = \"This is a test\"\n// Output: \"is\"\n// Example 2:\n// Input: sentence = \"lets go for swimming\"\n// Output: \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains only letters\nlet words_in_sentence (sentence: string): string  = \n", "tests": "let test() = \n  let candidate = words_in_sentence\n  assert (candidate \"This is a test\" = \"is\")\n  assert (candidate \"lets go for swimming\" = \"go for\")\n  assert (candidate \"there is no place available here\" = \"there is no place\")\n  assert (candidate \"Hi I am Hussein\" = \"Hi am Hussein\")\n  assert (candidate \"go for it\" = \"go for it\")\n  assert (candidate \"here\" = \"\")\n  assert (candidate \"here is\" = \"is\")\n  0\n\ntest()", "completions": ["  sentence.split(\" \")", "  [\n    \"This\",\n    \"is\",\n    \"a\",\n    \"test\",\n    \"sentence\",\n    \"is\",\n    \"a\",\n    \"test\",\n    \"sentence\",\n    \"contains\",\n    \"only\",\n    \"letters\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    ", "  [\n    \"This\",\n    \"is\",\n    \"a\",\n    \"test\",\n    \"sentence\",\n    \"is\",\n    \"a\",\n    \"test\",\n    \"sentence\",\n    \"contains\",\n    \"only\",\n    \"letters\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    ", "    \"This is a test\"\nlet words_in_sentence_prime (sentence: string): string = \n    \"lets go for swimming\"\nlet words_in_sentence_prime_prime (sentence: string): string = \n    \"go for\"", "  [ \"This\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\", \"is\", \"a\", \"test\", \"sentence\",", "  \"This is a test\"\nlet words_in_sentence_2 (sentence: string): string  = \n  \"lets go for swimming\"\nlet words_in_sentence_3 (sentence: string): string  = \n  \"go for\"\nlet words_in_sentence_4 (sentence: string): string  = \n  \"This is a test\"", "  [\n    \"This\",\n    \"is\",\n    \"a\",\n    \"test\",\n    \"sentence\",\n    \"is\",\n    \"a\",\n    \"test\",\n    \"sentence\",\n    \"contains\",\n    \"only\",\n    \"letters\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    ", "    \"This is a test\"\nlet words_in_sentence_2 (sentence: string): string =\n    \"lets go for swimming\"\nlet words_in_sentence_3 (sentence: string): string =\n    \"go for\"", "  [\n    \"This\",\n    \"is\",\n    \"a\",\n    \"test\",\n    \"sentence\",\n    \"is\",\n    \"a\",\n    \"test\",\n    \"sentence\",\n    \"contains\",\n    \"only\",\n    \"letters\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    ", "  sentence.split(\" \").map(word => word.toLowerCase());", "  sentence.split(\" \").map(word => word.toLowerCase());", "  sentence.split(\" \").map(word => word.toLowerCase());", "  sentence.split(\" \").map(word => word.toLowerCase());", "    \"This is a test\"\nlet words_in_sentence_prime (sentence: string): string =\n    \"lets go for swimming\"\nlet words_in_sentence_prime_prime (sentence: string): string =\n    \"go for\"", "    \"This is a test\"\nlet words_in_sentence_prime (sentence: string): string = \n    \"lets go for swimming\"\nlet words_in_sentence_prime_prime (sentence: string): string = \n    \"go for\"", "  sentence.split(\" \").map(word => word.toLowerCase())\nlet words_in_sentence_prime (sentence: string): string = \n  sentence.split(\" \").map(word => word.toLowerCase()).reduce((acc, word) => acc + word)", "  [\n    \"This\",\n    \"is\",\n    \"a\",\n    \"test\",\n    \"sentence\",\n    \"is\",\n    \"a\",\n    \"test\",\n    \"sentence\",\n    \"contains\",\n    \"only\",\n    \"letters\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    ", "  [\n    \"This\",\n    \"is\",\n    \"a\",\n    \"test\",\n    \"sentence\",\n    \"is\",\n    \"a\",\n    \"test\",\n    \"sentence\",\n    \"contains\",\n    \"only\",\n    \"letters\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    \"words\",\n    \"in\",\n    \"the\",\n    \"order\",\n    \"of\",\n    ", "  sentence.split(\" \").map(word => word.toLowerCase())\nlet words_in_sentence_prime (sentence: string): string = \n  sentence.split(\" \").map(word => word.toLowerCase() + \" \").reduce((acc, word) => acc + word)", "    \"This is a test\"\nlet words_in_sentence_prime (sentence: string): string = \n    \"lets go for swimming\"\nlet words_in_sentence_prime_prime (sentence: string): string = \n    \"go for\""], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}