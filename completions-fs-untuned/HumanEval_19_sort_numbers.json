{"name": "HumanEval_19_sort_numbers", "language": "fs", "prompt": "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three five'\nlet sort_numbers (numbers: string): string  = \n", "tests": "let test() = \n  let candidate = sort_numbers\n  assert (candidate \"\" = \"\")\n  assert (candidate \"three\" = \"three\")\n  assert (candidate \"three five nine\" = \"three five nine\")\n  assert (candidate \"five zero four seven nine eight\" = \"zero four five seven eight nine\")\n  assert (candidate \"six five four three two one zero\" = \"zero one two three four five six\")\n  0\n\ntest()", "completions": ["  numbers.split('').map(Number::toString).sort().join('');", "  numbers.split('').map(Number).sort();", "  numbers.split(' ').map(Number).sort().join(' ');", "  numbers.split('').map(Number).sort().join('');", "  numbers.split(' ').map(Number).sort().join(' ');", "  numbers.split(' ').map(n => n.toUpperCase()).sort();", "  numbers.split(' ').map(Number::toString).sort();", "  numbers.split('').map(n => n.toUpperCase()).sort();", "    numbers.split('').map(Number).sort().join('');", "    numbers.split(' ').map(Number).sort().join(' ');", "  numbers.split(' ').map(Number).sort().join(' ');", "  numbers.split('').map(Number::toString).sort();", "  numbers.split(/\\s+/).map(Number::toString).sort();", "  numbers.split(' ').map(Number::toString).sort();", "  numbers.split(' ').map(Number).sort().join(' ');", "  numbers.split('').map(n => n.toUpperCase()).sort();", "  numbers.split(' ').map(Number).sort().join(' ');", "  numbers.split(' ').map(Number).sort();", "  numbers.split(' ').map(Number).sort().join(' ');", "  numbers.split(' ').map(Number).sort().join(' ');"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}