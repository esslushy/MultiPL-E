{"name": "HumanEval_54_same_chars", "language": "fs", "prompt": "//Check if two words have the same characters.\n// >>> same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc')\n// True\n// >>> same_chars('abcd', 'dddddddabc')\n// True\n// >>> same_chars('dddddddabc', 'abcd')\n// True\n// >>> same_chars('eabcd', 'dddddddabc')\n// False\n// >>> same_chars('abcd', 'dddddddabce')\n// False\n// >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n// False\nlet same_chars (s0: string) (s1: string): bool  = \n", "tests": "let test() = \n  let candidate = same_chars\n  assert (candidate \"eabcdzzzz\" \"dddzzzzzzzddeddabc\" = true)\n  assert (candidate \"abcd\" \"dddddddabc\" = true)\n  assert (candidate \"dddddddabc\" \"abcd\" = true)\n  assert (candidate \"eabcd\" \"dddddddabc\" = false)\n  assert (candidate \"abcd\" \"dddddddabcf\" = false)\n  assert (candidate \"eabcdzzzz\" \"dddzzzzzzzddddabc\" = false)\n  assert (candidate \"aabb\" \"aaccc\" = false)\n  0\n\ntest()", "completions": ["    (s0 === s1) ? true : false;", "    (s0 === s1)", "    (s0 === s1) ? true : false;", "    (s0 === s1)", "// >>> same_chars('abcd', 'dddddddabc')", "    (s0 === s1) ? true : false;", "  (s0 === s1) ? true : false;", "  (s0 === s1) ? true : false;", "    (s0 == s1) ? true : false;", "  (s0 === s1) ? true : false;", "    (s0 === s1) ? true : false;", "    (s0 === s1) ? true : false;", "    (s0 === s1) ? true : false;", "    (s0 === s1) ? true : false;", "// >>> same_chars('abcd', 'dddddddabc')", "    (s0 == s1)", "    (s0 === s1) ? true : false;", "    (s0 === s1)", "  (s0 === s1)", "// >>> same_chars('abcd', 'dddddddabc')"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}