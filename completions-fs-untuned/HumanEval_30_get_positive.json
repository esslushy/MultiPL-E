{"name": "HumanEval_30_get_positive", "language": "fs", "prompt": "//Return only positive numbers in the list.\n// >>> get_positive([-1, 2, -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nlet get_positive (l: int list): int list  = \n", "tests": "let test() = \n  let candidate = get_positive\n  assert (candidate [-1; -2; 4; 5; 6] = [4; 5; 6])\n  assert (candidate [5; 3; -5; 2; 3; 3; 9; 0; 123; 1; -10] = [5; 3; 2; 3; 3; 9; 123; 1])\n  assert (candidate [-1; -2] = [])\n  assert (candidate [] = [])\n  0\n\ntest()", "completions": ["  l.map(i => i < 0 ? -i : i)", "  l.map(i => i < 0 ? -i : i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(", "  l.map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i", "  l.map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i", "  l.map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i * i)\n  .filter(i => i > 0)\n  .map(i", "  l.map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i", "  l.map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n", "  l.map(i => i * i)", "  l.map(i => i + 1)", "  l.map(i => i < 0 ? -i : i);", "  [-1, 2, -4, 5, 6]\n  ", "  l.map(i => i * i)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i", "  l.map(i => i * i)", "  l.map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i", "  l.map(i => i < 0 ? -i : i);", "  l.map(i => i * i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i", "  l.map(i => i < 0 ? -i : i)", "  l.map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < l.length - 1)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i <", "  l.map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .map(i", "  l.map(i => i % 2 == 0 ? i : i - 1)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}