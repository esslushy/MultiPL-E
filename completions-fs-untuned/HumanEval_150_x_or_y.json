{"name": "HumanEval_150_x_or_y", "language": "fs", "prompt": "//A simple program which should return the value of x if n is \n// a prime number and should return the value of y otherwise.\n// Examples:\n// for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nlet x_or_y (n: int) (x: int) (y: int): int  = \n", "tests": "let test() = \n  let candidate = x_or_y\n  assert (candidate 7 34 12 = 34)\n  assert (candidate 15 8 5 = 5)\n  assert (candidate 3 33 5212 = 33)\n  assert (candidate 1259 3 52 = 3)\n  assert (candidate 7919 -1 12 = -1)\n  assert (candidate 3609 1245 583 = 583)\n  assert (candidate 91 56 129 = 129)\n  assert (candidate 6 34 1234 = 1234)\n  assert (candidate 1 2 0 = 0)\n  assert (candidate 2 2 0 = 2)\n  0\n\ntest()", "completions": ["  x_or_y(n, n, n)", "    x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  (n > 0) ? x_or_y(n - 1, n, n) : y;", "  x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  (x_or_y(n, 0, 0) + x_or_y(n, 1, 0) + x_or_y(n, 2, 0) + x_or_y(n, 3, 0) + x_or_y(n, 4, 0) + x_or_y(n, 5, 0) + x_or_y(n, 6, 0) + x_or_y(n, 7, 0) + x_or_y(n, 8, 0) + x_or_y(n, 9, 0) + x_or_y(n, 10, 0) + x_or_y(n, 11, 0) + x_or_y(n, 12, 0) + x_or_y(n, 13, 0) + x_or_y(n, 14, 0) + x_or_y(n, 15, 0) + x_or_y(n, 16, 0) + x_or_y(n, 17, 0) + x_or_y(n, 18, 0) + x_or_y(n, 19, 0) + x_or_y(n, 20, 0) + x_or_y(n, 21, 0) + x_or_y(n, 22, 0) + x_or_y(n, 23, 0) + x_or_y(n, 24, 0) + x_or_y(n, 25, 0) + x_or_y(n, 26, 0) + x_or_y(n, 27, 0) + x_or_y(n, 28, 0) + x_or_y(n, 29, 0) + x_or_y(n, 30, 0) + x_or_y(n, 31, 0) + x_or_y(n, 32, 0) + x_or_y(n, 33, 0) + x_or_y(n, 34, 0) + x_or_y(n, 35, 0) + x_or_y(n, 36, 0) + x_or_y(n, 37, 0) + x_or_y(n, 38, 0) + x_or", "  x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  x_or_y(n, n, n)", "  x_or_y(n, 0, 0)"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}