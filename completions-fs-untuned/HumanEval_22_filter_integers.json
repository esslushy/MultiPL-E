{"name": "HumanEval_22_filter_integers", "language": "fs", "prompt": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n", "tests": "let test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()", "completions": ["  values.map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())", "  values.filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n", "  filter_integers(values)\nlet filter_integers_2 (values: SomeType list): int list = \n  filter_integers(values)", "  values.map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())", "    values.filter(value => value > 0)\nlet filter_integers_with_default (values: SomeType list): int list = \n    values.filter(value => value > 0)", "  values.filter(value => value !== null);", "  values.map(value => value.toString())\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value =>", "  values.map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v", "  values.map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())", "  values.filter(value => value.toString().length > 0);", "  filter_integers(values)\nlet filter_integers_empty: int list = \n  filter_integers([]);", "  filter(value => value !== null, values)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value", "  values.map((value: SomeType) => value)", "  values.map(v => v.toString()).filter(v => v > 0);", "  filter(value => value !== null, values)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value", "  values.filter(v => v.toString().length > 0)\n  .map(v => v.toString().length)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  ", "  values.filter(v => v !== null);", "  values.map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())", "  values.filter(v => v % 2 === 0);", "  values.map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}