{"name": "HumanEval_9_rolling_max", "language": "fs", "prompt": "//From a given list of integers, generate a list of rolling maximum element found until given moment\n// in the sequence.\n// >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nlet rolling_max (numbers: int list): int list  = \n", "tests": "let test() = \n  let candidate = rolling_max\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [4; 3; 2; 1] = [4; 4; 4; 4])\n  assert (candidate [3; 2; 3; 100; 3] = [3; 3; 3; 100; 100])\n  0\n\ntest()", "completions": ["  numbers.map(i => i + 1)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max", "  numbers.map(n => n + 1)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .reverse()\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort", "  numbers.map(n => n + 1)", "  numbers.map(i => i + 1)\n  .reduce((max, i) => max + i)\n  .filter(i => i > 0)\n  .sort()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .reverse()\n  .map(i =>", "  numbers.map(i => i + 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i < n - 1)\n  .filter(i => i > 0)\n  .filter(i => i <", "  numbers.map(n => n + 1)", "  numbers.map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i => i > 0)\n  .filter(i =>", "  numbers.map(n => n + 1)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .sort()\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0)\n  .map(n => n)\n  .reverse()\n  .filter(n => n > 0", "  numbers.map(n => n + 1)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .reverse()\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .reverse()\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .reverse()\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .reverse()\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .reverse()\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .reverse()\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .reverse()\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .reverse()\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .reverse()\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((a, b) => a + b", "  numbers.map(n => n + 1)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(n => n > 0)\n  .filter(", "  numbers.map((n: number) => n + 1)\n  .filter((n: number) => n > 0)\n  .sort((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reduce((n: number) => n + 1)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number)", "  numbers.map(i => i + 1)\n  .filter(i => i > 0)\n  .reduce((a, b) => a + b)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((a, b) => a + b)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((a, b) => a + b)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((a, b) => a + b)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((a, b) => a + b)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((a, b) => a + b)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((a, b) => a + b)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((a, b) => a + b)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((a, b) => a + b)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((a, b) => a + b)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((a, b) => a + b)\n  .filter(i => i > 0)\n  .", "  numbers.map(i => i + 1)\n  .filter(i => i > 0)\n  .reduce((a, b) => a + b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b)\n  .reverse()\n  .sort((a, b) => a - b", "  numbers.map(n => n + 1)\n  .filter(n => n > 0)\n  .reduce((acc, n) => acc + n, 0)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .filter", "  numbers.map(i => i + 1)\n  .filter(i => i > 0)\n  .reduce((i, j) => i + j)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i > 0)\n  .reverse", "  numbers.map(n => n + 1)", "  numbers.map(n => n + 1)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .filter(n => n > 0)\n  .map(n => n", "  numbers.map(i => i + 1)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i, 0)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i, 0)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i, 0)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i, 0)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i, 0)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i, 0)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i, 0)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i, 0)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i, 0)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((max, i) => max + i, 0)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reduce((max, i", "  numbers.map(n => n + 1)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .filter(n => n > 0", "  numbers.map(i => i + 1)"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}