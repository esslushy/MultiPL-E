{"name": "HumanEval_45_triangle_area", "language": "fs", "prompt": "//Given length of a side and high return area for a triangle.\n// >>> triangle_area(5, 3)\n// 7.5\nlet triangle_area (a: int) (h: int): float  = \n", "tests": "let test() = \n  let candidate = triangle_area\n  assert (candidate 5 3 = 7.5)\n  assert (candidate 2 2 = 2.0)\n  assert (candidate 10 8 = 40.0)\n  0\n\ntest()", "completions": ["  (a + h) / 2;", "  (a + h) / 2;", "  (a + h) / 2;", "  (a * (a * a + a * a + a * a)) / (a * a * a * a);", "  (a * a) / (h * h);", "  (a * a) / (a * a + a * a + a * a);", "  (a * a) / (a * a + a * a + a * a)", "  (a * (a + 1) * (a + 2) * (a + 3)) / (6 * (a + 1) * (a + 2) * (a + 3));", "  (a * (a + 1)) / 2;", "  (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (a * a) * (", "  (a * a) / (a * a + a * a + a * a);", "  (a * (a + 1) * (a + 2) * (a + 3)) / (6 * (a + 1) * (a + 2) * (a + 3));", "  (a * a) / (a * a + a * a + a * a)", "  (a + h) / 2;", "  (a + h) / 2;", "  (a + h) / 2;", "  (a + h) / 2;", "  (a + h) / 2;", "  (a + h) / 2;", "  (a * (a * a + a * a + a * a + a * a) + a * (a * a + a * a + a * a + a * a)) / (a * a);"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}