{"name": "HumanEval_146_specialFilter", "language": "fs", "prompt": "//Write a function that takes an array of numbers as input and returns \n// the number of elements in the array that are greater than 10 and both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33, -2, -3, 45, 21, 109]) => 2\nlet specialFilter (nums: int list): int  = \n", "tests": "let test() = \n  let candidate = specialFilter\n  assert (candidate [5; -2; 1; -5] = 0)\n  assert (candidate [15; -73; 14; -15] = 1)\n  assert (candidate [33; -2; -3; 45; 21; 109] = 2)\n  assert (candidate [43; -12; 93; 125; 121; 109] = 4)\n  assert (candidate [71; -2; -33; 75; 21; 19] = 3)\n  assert (candidate [1] = 0)\n  assert (candidate [] = 0)\n  0\n\ntest()", "completions": ["  (nums.length > 0) ? nums[nums.length - 1] : 0;", "    nums.filter(x => x % 2 == 1)", "  nums.filter((n: number) => n % 2 == 1)", "  nums.filter((n: number) => n % 2 == 1);", "  nums.filter((n: number) => n % 2 == 1);", "  nums.filter((n: number) => n % 2 == 1);", "  nums.filter(n => n % 2 == 1 && n % 10 != 9);", "  nums.filter(x => x % 2 === 1)", "  nums.filter(x => x % 2 == 1)", "  nums.filter((n: number) => n % 2 == 1)", "  nums.filter((n: number) => n % 2 == 1);", "  nums.filter(n => n % 2 == 1)", "  nums.filter((n: number) => n % 2 == 1);", "  nums.filter(n => n % 2 == 1)", "  nums.filter(n => n % 2 == 1 && n % 10 == 1)", "  nums.filter((n: int) => n % 2 == 1)", "  nums.filter((n: number) => n % 2 == 1);", "  nums.filter((n: number) => n % 2 == 0)", "    (nums.length > 10) ? nums.length - 1 : 0;", "  nums.filter((n: number) => n % 2 == 1);"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}