{"name": "HumanEval_82_prime_length", "language": "fs", "prompt": "//Write a function that takes a string and returns True if the string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello') == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n// prime_length('orange') == False\nlet prime_length (string: string): bool  = \n", "tests": "let test() = \n  let candidate = prime_length\n  assert (candidate \"Hello\" = true)\n  assert (candidate \"abcdcba\" = true)\n  assert (candidate \"kittens\" = true)\n  assert (candidate \"orange\" = false)\n  assert (candidate \"wow\" = true)\n  assert (candidate \"world\" = true)\n  assert (candidate \"MadaM\" = true)\n  assert (candidate \"Wow\" = true)\n  assert (candidate \"\" = false)\n  assert (candidate \"HI\" = true)\n  assert (candidate \"go\" = true)\n  assert (candidate \"gogo\" = false)\n  assert (candidate \"aaaaaaaaaaaaaaa\" = false)\n  assert (candidate \"Madam\" = true)\n  assert (candidate \"M\" = false)\n  assert (candidate \"0\" = false)\n  0\n\ntest()", "completions": ["    (string.length === 1) ? true : false;", "    function (string: string): bool {\n        return string.length === string.length % 2 === 0;\n    }", "  (string.length === 1) ? true : false;", "  function (string: string) {\n    return string.length === 1 && string.length % 2 === 0\n  }", "  (string.length === 1) ? true : false;", "  function (string: string): boolean {\n    return string.length === 1 && string.length % 2 === 0\n  }", "    function (string: string): boolean {\n        return string.length === string.length % 2 === 0;\n    }", "  (string.length === 1) ? true : false;", "  (string.length === 1) ? true : false;", "  (string.length === 1) ? true : false;", "  (string.length === 1) ? true : false;", "  function () {\n    return string.length === 1\n  }", "  (string.length === 1) ? true : false;", "  (string.length === 1) ? true : false;", "  (string.length === 1) ? true : false;", "    (string.length === 1) ? true : false;", "  function (string: string) {\n    if (string.length === 0) {\n      return false;\n    }\n    return true;\n  }", "  (string.length === 1)\n  ? true\n  : false;", "  (string.length === 1) ? true : false;", "  function (string: string) {\n    return string.length === string.length && string.length % 2 === 0;\n  }"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}