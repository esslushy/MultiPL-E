{"name": "HumanEval_28_concatenate", "language": "fs", "prompt": "//Concatenate list of strings into a single string\n// >>> concatenate([])\n// ''\n// >>> concatenate(['a', 'b', 'c'])\n// 'abc'\nlet concatenate (strings: string list): string  = \n", "tests": "let test() = \n  let candidate = concatenate\n  assert (candidate [] = \"\")\n  assert (candidate [\"x\"; \"y\"; \"z\"] = \"xyz\")\n  assert (candidate [\"x\"; \"y\"; \"z\"; \"w\"; \"k\"] = \"xyzwk\")\n  0\n\ntest()", "completions": ["  strings.map(s => s.toString())", "  strings.map(s => s.toString());", "  strings.map(s => s.toLowerCase());", "  strings.map(s => s.toLowerCase());", "  strings.map(s => s.toLowerCase());", "  strings.map(s => s.toLowerCase());", "  strings.map(s => s.toLowerCase());", "  strings.map(s => s.toLowerCase());", "  strings.map(s => s.toString())", "  strings.map(s => s.toString());", "  strings.map(s => s.toLowerCase());", "  strings.map(s => s.toLowerCase());", "  strings.map(s => s.toLowerCase());", "  strings.map(s => s.toLowerCase());", "  strings.map(s => s.toString());", "  strings.map(s => s.replace(/\\s+/g, ''));", "  strings.map(s => s.toString())", "  strings.map(s => s.toLowerCase());", "  strings.map(s => s.toString());", "  strings.map(s => s.toLowerCase())"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}