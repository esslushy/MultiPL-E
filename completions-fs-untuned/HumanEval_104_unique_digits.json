{"name": "HumanEval_104_unique_digits", "language": "fs", "prompt": "//Given a list of positive integers x. return a sorted list of all \n// elements that hasn't any even digit.\n// Note: Returned list should be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nlet unique_digits (x: int list): int list  = \n", "tests": "let test() = \n  let candidate = unique_digits\n  assert (candidate [15; 33; 1422; 1] = [1; 15; 33])\n  assert (candidate [152; 323; 1422; 10] = [])\n  assert (candidate [12345; 2033; 111; 151] = [111; 151])\n  assert (candidate [135; 103; 31] = [31; 135])\n  0\n\ntest()", "completions": ["  x.sort()\n  .map(i => i % 2)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(", "  [x]\n  .sort()\n  .map((x: int) => x)\n  .filter((x: int) => x % 2 === 0)\n  .reverse();", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i < 100)\n  .map(i => i)\n  .filter(i => i < 1000)\n  .map(i => i)\n  .filter(i => i < 10000)\n  .map(i => i)\n  .filter(i => i < 100000)\n  .map(i => i)\n  .filter(i => i < 1000000)\n  .map(i => i)\n  .filter(i => i < 10000000)\n  .map(i => i)\n  .filter(i => i < 100000000)\n  .map(i => i)\n  .filter(i => i < 1000000000)\n  .map(i => i)\n  .filter(i => i < 10000000000)\n  .map(i => i)\n  .filter(i => i < 100000000000)\n  .map(i => i)\n  .filter(i => i < 1000000000000)\n  .map(i => i)\n  .filter(i => i < 10000000000000)\n  .map(i => i)\n  .filter(i => i < 100000000000000)\n  .map(i => i)\n  .filter(i => i < 1000000000000000)\n  .map(i => i)\n  .filter(i => i < 10000000000000000)\n  .map(i => i)\n  .filter(i => i < 100000000000000000)\n  .map(i => i)\n  .filter(i => i < 10000000000000000000)\n  .map(i => i)\n  .filter(i => i < 10000000000000000000)\n  .map(i => i)\n  .filter(i => i < 100000000000000000000)\n  .map(i => i)\n  .filter(i => i < 100000000000000000000)\n  .map(i => i)\n  .filter(i => i < 100000000000000000000)\n  .map(i => i)\n", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .reverse", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  ", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(i => i)\n  .filter(i => i % 2)\n  .map(", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n  .filter(i => i > 0)\n  .reverse()\n  .map(i => i)\n", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i < 1)\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i < 1)\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i < 1)\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i < 1)\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i < 1)\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i < 1)\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i < 1)\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .filter(i => i < 10)\n  .map(i => i)\n  .filter(i => i < 1)\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(", "  x.sort()\n  .map(digit => digit % 2)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)\n  .reverse()\n  .map(digit => digit)\n  .filter(digit => digit > 0)\n  .map(digit => digit)", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)\n  .reverse()\n  .map(i => i)\n  .filter(i => i < 2)\n  .map(i => i)", "  x.sort()\n  .map(i => i % 2)\n  .reduce((a, b) => a + b)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n  .reverse()\n  .map(i => i % 2)\n", "  x.sort()\n  .map(i => i % 2)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < x.length)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < x.length)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < x.length)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < x.length)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < x.length)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < x.length)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < x.length)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < x.length)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < x.length)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < x.length)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < x.length)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i < x.length)\n"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}