{"name": "HumanEval_126_is_sorted", "language": "fs", "prompt": "//Given a list of numbers, return whether or not they are sorted\n// in ascending order. If list has more than 1 duplicate of the same\n// number, return False. Assume no negative numbers and only integers.\n// Examples\n// is_sorted([5]) \u00e2\u017e\u017e True\n// is_sorted([1, 2, 3, 4, 5]) \u00e2\u017e\u017e True\n// is_sorted([1, 3, 2, 4, 5]) \u00e2\u017e\u017e False\n// is_sorted([1, 2, 3, 4, 5, 6]) \u00e2\u017e\u017e True\n// is_sorted([1, 2, 3, 4, 5, 6, 7]) \u00e2\u017e\u017e True\n// is_sorted([1, 3, 2, 4, 5, 6, 7]) \u00e2\u017e\u017e False\n// is_sorted([1, 2, 2, 3, 3, 4]) \u00e2\u017e\u017e True\n// is_sorted([1, 2, 2, 2, 3, 4]) \u00e2\u017e\u017e False\nlet is_sorted (lst: int list): bool  = \n", "tests": "let test() = \n  let candidate = is_sorted\n  assert (candidate [5] = true)\n  assert (candidate [1; 2; 3; 4; 5] = true)\n  assert (candidate [1; 3; 2; 4; 5] = false)\n  assert (candidate [1; 2; 3; 4; 5; 6] = true)\n  assert (candidate [1; 2; 3; 4; 5; 6; 7] = true)\n  assert (candidate [1; 3; 2; 4; 5; 6; 7] = false)\n  assert (candidate [] = true)\n  assert (candidate [1] = true)\n  assert (candidate [3; 2; 1] = false)\n  assert (candidate [1; 2; 2; 2; 3; 4] = false)\n  assert (candidate [1; 2; 3; 3; 3; 4] = false)\n  assert (candidate [1; 2; 2; 3; 3; 4] = true)\n  assert (candidate [1; 2; 3; 4] = true)\n  0\n\ntest()", "completions": ["    (lst > 0)\n    && (lst.length > 1)\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1])\n    && (lst[0] <= lst[1", "    lst.sort()\n    ", "    lst.sort()\n    ", "    lst.sort()\nlet is_sorted_1 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_2 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_3 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_4 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_5 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_6 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_7 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_8 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_9 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_10 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_11 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_12 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_13 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_14 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_15 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_16 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_17 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_18 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_19 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_20 (lst: int list): bool = \n    lst.sort()\nlet is_sorted", "    (lst >= 1 && lst <= 5)\n    (lst >= 2 && lst <= 4)\n    (lst >= 3 && lst <= 5)\n    (lst >= 4 && lst <= 5)\n    (lst >= 5 && lst <= 6)\n    (lst >= 6 && lst <= 7)\n    (lst >= 7 && lst <= 8)\n    (lst >= 8 && lst <= 9)\n    (lst >= 9 && lst <= 10)\n    (lst >= 10 && lst <= 11)\n    (lst >= 11 && lst <= 12)\n    (lst >= 12 && lst <= 13)\n    (lst >= 13 && lst <= 14)\n    (lst >= 14 && lst <= 15)\n    (lst >= 15 && lst <= 16)\n    (lst >= 16 && lst <= 17)\n    (lst >= 17 && lst <= 18)\n    (lst >= 18 && lst <= 19)\n    (lst >= 19 && lst <= 20)\n    (lst >= 20 && lst <= 21)\n    (lst >= 21 && lst <= 22)\n    (lst >= 22 && lst <= 23)\n    (lst >= 23 && lst <= 24)\n    (lst >= 24 && lst <= 25)\n    (lst >= 25 && lst <= 26)\n    (lst >= 26 && lst <= 27)\n    (lst >= 27 && lst <= 28)\n    (lst >= 28 && lst <= 29)\n    (lst >= 29 && lst <= 30)\n    (lst >= 30 && lst <= 31)\n    (lst >= 31 && lst <= 32)\n    (lst >= 32 && lst <= 33)\n    (lst >= 33 && lst <= 34)\n    (lst >= 34 && lst <= 35)\n    (lst >= 35 && lst <= 36)\n    (lst >= 36 && lst <= 37)\n    (lst >= 37 && lst <= 38)\n    (lst >= 38 && lst <= 39)\n    (lst >= 39 && lst <= 40)\n    (lst >=", "    (lst == [])\nlet is_sorted_list (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_1 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_2 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_3 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_4 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_5 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_6 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_7 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_8 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_9 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_10 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_11 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_12 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_13 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_14 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_15 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_16 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_17 (lst: list): bool = \n    (lst == [])\nlet is_sorted_list_18 (lst: list): bool = \n    ", "    (lst >= 1 && lst <= 5)\nlet is_sorted_1 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_2 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_3 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_4 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_5 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_6 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_7 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_8 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_9 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_10 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_11 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_12 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_13 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_14 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_15 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_sorted_16 (lst: int list): bool = \n    (lst >= 1 && lst <= 5)\nlet is_", "    (lst > 0 && lst < lst) ||\n    (lst == 0 && lst > 0) ||\n    (lst == 1 && lst > 1) ||\n    (lst == 2 && lst > 2) ||\n    (lst == 3 && lst > 3) ||\n    (lst == 4 && lst > 4) ||\n    (lst == 5 && lst > 5) ||\n    (lst == 6 && lst > 6) ||\n    (lst == 7 && lst > 7) ||\n    (lst == 8 && lst > 8) ||\n    (lst == 9 && lst > 9) ||\n    (lst == 10 && lst > 10) ||\n    (lst == 11 && lst > 11) ||\n    (lst == 12 && lst > 12) ||\n    (lst == 13 && lst > 13) ||\n    (lst == 14 && lst > 14) ||\n    (lst == 15 && lst > 15) ||\n    (lst == 16 && lst > 16) ||\n    (lst == 17 && lst > 17) ||\n    (lst == 18 && lst > 18) ||\n    (lst == 19 && lst > 19) ||\n    (lst == 20 && lst > 20) ||\n    (lst == 21 && lst > 21) ||\n    (lst == 22 && lst > 22) ||\n    (lst == 23 && lst > 23) ||\n    (lst == 24 && lst > 24) ||\n    (lst == 25 && lst > 25) ||\n    (lst == 26 && lst > 26) ||\n    (lst == 27 && lst > 27) ||\n    (lst == 28 && lst > 28) ||\n    (lst == 29 && lst > 29) ||\n    (lst == 30 && lst > 30) ||\n    (lst == 31 && lst > 31) ||\n    (lst == 32 && lst > 32) ||\n    (lst == 33 && lst > 33) ||\n    (lst == 34 && lst > 34) ||\n    (lst == 35 &&", "    (lst.length > 1 && lst[0] < lst[1]) ||\n    (lst.length == 1 && lst[0] == lst[0])", "    (lst >= 1 && lst <= 5)\n    or (lst >= 2 && lst <= 4)\n    or (lst >= 3 && lst <= 5)\n    or (lst >= 4 && lst <= 6)\n    or (lst >= 5 && lst <= 6)\n    or (lst >= 6 && lst <= 7)\n    or (lst >= 7 && lst <= 8)\n    or (lst >= 8 && lst <= 9)\n    or (lst >= 9 && lst <= 10)\n    or (lst >= 10 && lst <= 11)\n    or (lst >= 11 && lst <= 12)\n    or (lst >= 12 && lst <= 13)\n    or (lst >= 13 && lst <= 14)\n    or (lst >= 14 && lst <= 15)\n    or (lst >= 15 && lst <= 16)\n    or (lst >= 16 && lst <= 17)\n    or (lst >= 17 && lst <= 18)\n    or (lst >= 18 && lst <= 19)\n    or (lst >= 19 && lst <= 20)\n    or (lst >= 20 && lst <= 21)\n    or (lst >= 21 && lst <= 22)\n    or (lst >= 22 && lst <= 23)\n    or (lst >= 23 && lst <= 24)\n    or (lst >= 24 && lst <= 25)\n    or (lst >= 25 && lst <= 26)\n    or (lst >= 26 && lst <= 27)\n    or (lst >= 27 && lst <= 28)\n    or (lst >= 28 && lst <= 29)\n    or (lst >= 29 && lst <= 30)\n    or (lst >= 30 && lst <= 31)\n    or (lst >= 31 && lst <= 32)\n    or (lst >= 32 && lst <= 33)\n    or (lst >= 33 && lst <= 34)\n    or (lst >= 34 && lst <= 35)\n    or (lst >= 35 && lst <= 36)\n    or (lst >= 36 && lst <= 37)\n    or (lst >= 37 && l", "    (lst > 0)\n    && (lst.length > 1)\n    && (lst[0] < lst[1])\n    && (lst[0] > lst[1])\n    && (lst[1] < lst[2])\n    && (lst[1] > lst[2])\n    && (lst[2] < lst[3])\n    && (lst[2] > lst[3])\n    && (lst[3] < lst[4])\n    && (lst[3] > lst[4])\n    && (lst[4] < lst[5])\n    && (lst[4] > lst[5])\n    && (lst[5] < lst[6])\n    && (lst[5] > lst[6])\n    && (lst[6] < lst[7])\n    && (lst[6] > lst[7])\n    && (lst[7] < lst[8])\n    && (lst[7] > lst[8])\n    && (lst[8] < lst[9])\n    && (lst[8] > lst[9])\n    && (lst[9] < lst[10])\n    && (lst[9] > lst[10])\n    && (lst[10] < lst[11])\n    && (lst[10] > lst[11])\n    && (lst[11] < lst[12])\n    && (lst[11] > lst[12])\n    && (lst[12] < lst[13])\n    && (lst[12] > lst[13])\n    && (lst[13] < lst[14])\n    && (lst[13] > lst[14])\n    && (lst[14] < lst[15])\n    && (lst[14] > lst[15])\n    && (lst[15] < lst[16])\n    && (lst[15] > lst[16])\n    && (lst[16] < lst[17", "    lst.sort()\nlet is_sorted_1 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_2 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_3 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_4 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_5 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_6 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_7 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_8 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_9 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_10 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_11 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_12 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_13 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_14 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_15 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_16 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_17 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_18 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_19 (lst: int list): bool = \n    lst.sort()\nlet is_sorted_20 (lst: int list): bool = \n    lst.sort()\nlet is_sorted", "    (lst >= 1 && lst <= 5)\n    || (lst >= 2 && lst <= 4)\n    || (lst >= 3 && lst <= 5)\n    || (lst >= 4 && lst <= 6)\n    || (lst >= 5 && lst <= 6)\n    || (lst >= 6 && lst <= 7)\n    || (lst >= 7 && lst <= 8)\n    || (lst >= 8 && lst <= 9)\n    || (lst >= 9 && lst <= 10)\n    || (lst >= 10 && lst <= 11)\n    || (lst >= 11 && lst <= 12)\n    || (lst >= 12 && lst <= 13)\n    || (lst >= 13 && lst <= 14)\n    || (lst >= 14 && lst <= 15)\n    || (lst >= 15 && lst <= 16)\n    || (lst >= 16 && lst <= 17)\n    || (lst >= 17 && lst <= 18)\n    || (lst >= 18 && lst <= 19)\n    || (lst >= 19 && lst <= 20)\n    || (lst >= 20 && lst <= 21)\n    || (lst >= 21 && lst <= 22)\n    || (lst >= 22 && lst <= 23)\n    || (lst >= 23 && lst <= 24)\n    || (lst >= 24 && lst <= 25)\n    || (lst >= 25 && lst <= 26)\n    || (lst >= 26 && lst <= 27)\n    || (lst >= 27 && lst <= 28)\n    || (lst >= 28 && lst <= 29)\n    || (lst >= 29 && lst <= 30)\n    || (lst >= 30 && lst <= 31)\n    || (lst >= 31 && lst <= 32)\n    || (lst >= 32 && lst <= 33)\n    || (lst >= 33 && lst <= 34)\n    || (lst >= 34 && lst <= 35)\n    || (lst >= 35 && lst <= 36)\n    || (lst >= 36 && lst <= 37)\n    || (lst >= 37 && l", "  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  lst.sort()\n  ", "    (lst.length > 1 && lst[0] <= lst[1]) ||\n    (lst.length == 1 && lst[0] == lst[0]) ||\n    (lst.length == 2 && lst[0] == lst[1] && lst[1] <= lst[2]) ||\n    (lst.length == 3 && lst[0] == lst[1] && lst[1] == lst[2] && lst[2] <= lst[3]) ||\n    (lst.length == 4 && lst[0] == lst[1] && lst[1] == lst[2] && lst[2] == lst[3] && lst[3] <= lst[4]) ||\n    (lst.length == 5 && lst[0] == lst[1] && lst[1] == lst[2] && lst[2] == lst[3] && lst[3] == lst[4] && lst[4] <= lst[5]) ||\n    (lst.length == 6 && lst[0] == lst[1] && lst[1] == lst[2] && lst[2] == lst[3] && lst[3] == lst[4] && lst[4] == lst[5] && lst[5] <= lst[6]) ||\n    (lst.length == 7 && lst[0] == lst[1] && lst[1] == lst[2] && lst[2] == lst[3] && lst[3] == lst[4] && lst[4] == lst[5] && lst[5] == lst[6] && lst[6] <= lst[7]) ||\n    (lst.length == 8 && lst[0] == lst[1] && lst[1] == lst[2] && lst[2] == lst[3] && lst[3] == lst[4] && lst[4] == lst[5] && lst[5] == lst[6] && lst[", "    (lst > 1 && lst < lst + 1) ||\n    (lst == 1 && lst > 2) ||\n    (lst == 2 && lst > 3) ||\n    (lst == 3 && lst > 4) ||\n    (lst == 4 && lst > 5) ||\n    (lst == 5 && lst > 6) ||\n    (lst == 6 && lst > 7) ||\n    (lst == 7 && lst > 8) ||\n    (lst == 8 && lst > 9) ||\n    (lst == 9 && lst > 10) ||\n    (lst == 10 && lst > 11) ||\n    (lst == 11 && lst > 12) ||\n    (lst == 12 && lst > 13) ||\n    (lst == 13 && lst > 14) ||\n    (lst == 14 && lst > 15) ||\n    (lst == 15 && lst > 16) ||\n    (lst == 16 && lst > 17) ||\n    (lst == 17 && lst > 18) ||\n    (lst == 18 && lst > 19) ||\n    (lst == 19 && lst > 20) ||\n    (lst == 20 && lst > 21) ||\n    (lst == 21 && lst > 22) ||\n    (lst == 22 && lst > 23) ||\n    (lst == 23 && lst > 24) ||\n    (lst == 24 && lst > 25) ||\n    (lst == 25 && lst > 26) ||\n    (lst == 26 && lst > 27) ||\n    (lst == 27 && lst > 28) ||\n    (lst == 28 && lst > 29) ||\n    (lst == 29 && lst > 30) ||\n    (lst == 30 && lst > 31) ||\n    (lst == 31 && lst > 32) ||\n    (lst == 32 && lst > 33) ||\n    (lst == 33 && lst > 34) ||\n    (lst == 34 && lst > 35) ||\n    (lst == 35 && lst > 36) ||\n    (lst ==", "    lst.sort()\n    ", "    (lst == [])\nlet is_sorted_1 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_2 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_3 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_4 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_5 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_6 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_7 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_8 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_9 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_10 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_11 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_12 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_13 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_14 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_15 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_16 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_17 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_18 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_19 (lst: int list): bool = \n    (lst == [])\nlet is_sorted_20 (lst", "    lst.sort()", "    (lst == null || lst.length == 0)\nlet is_sorted_list (lst: list): bool = \n    (lst == null || lst.length == 0)"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}