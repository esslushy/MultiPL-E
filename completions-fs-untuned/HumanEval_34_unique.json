{"name": "HumanEval_34_unique", "language": "fs", "prompt": "//Return sorted unique elements in a list\n// >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nlet unique (l: int list): int list  = \n", "tests": "let test() = \n  let candidate = unique\n  assert (candidate [5; 3; 5; 2; 3; 3; 9; 0; 123] = [0; 2; 3; 5; 9; 123])\n  0\n\ntest()", "completions": ["  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nunique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique(unique", "  l.sort()\n  l.forEach(x => {\n    if (x > 0) {\n      unique(l.slice(0, x))\n    }\n  })\n  return unique", "  l.sort()\nunique(l)\nunique([])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6, 7, 8, 9])\nunique([1, 2, 3, 4, 5, 6,", "  l.sort()\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique", "  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]", "  l.sort()\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique", "  l.sort()\n  ", "  l.sort()\n  l.forEach(x => x)\n  return unique(l)", "  l.sort()\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique(l)\nunique", "  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l", "  l.sort()\n  l.forEach(item => {\n    if (item !== 0) {\n      unique(item)\n    }\n  })", "  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l.sort()\n  l", "  l.sort()\n  ", "  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]", "  l.sort();\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique(l);\nunique", "  l.sort()\n  l.forEach(item => {\n    if (item !== 0) {\n      unique(item)\n    }\n  })", "  l.sort()\n  ", "  l.sort()\n  ", "  l.sort()\n  ", "  l.sort()\n  "], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}