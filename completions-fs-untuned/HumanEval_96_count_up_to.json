{"name": "HumanEval_96_count_up_to", "language": "fs", "prompt": "//Implement a function that takes an non-negative integer and returns an array of the first n\n// integers that are prime numbers and less than n.\n// for example:\n// count_up_to(5) => [2,3]\n// count_up_to(11) => [2,3,5,7]\n// count_up_to(0) => []\n// count_up_to(20) => [2,3,5,7,11,13,17,19]\n// count_up_to(1) => []\n// count_up_to(18) => [2,3,5,7,11,13,17]\nlet count_up_to (n: int): int list  = \n", "tests": "let test() = \n  let candidate = count_up_to\n  assert (candidate 5 = [2; 3])\n  assert (candidate 6 = [2; 3; 5])\n  assert (candidate 7 = [2; 3; 5])\n  assert (candidate 10 = [2; 3; 5; 7])\n  assert (candidate 0 = [])\n  assert (candidate 22 = [2; 3; 5; 7; 11; 13; 17; 19])\n  assert (candidate 1 = [])\n  assert (candidate 18 = [2; 3; 5; 7; 11; 13; 17])\n  assert (candidate 47 = [2; 3; 5; 7; 11; 13; 17; 19; 23; 29; 31; 37; 41; 43])\n  assert (candidate 101 = [2; 3; 5; 7; 11; 13; 17; 19; 23; 29; 31; 37; 41; 43; 47; 53; 59; 61; 67; 71; 73; 79; 83; 89; 97])\n  0\n\ntest()", "completions": ["[2,3,5,7,11,13,17,19]", "[2,3,5,7,11,13,17,19]", "[2,3,5,7,11,13,17,19]", "[2,3,5,7,11,13,17,19]", "[2,3,5,7,11,13,17,19]", "  [2,3,5,7,11,13,17,19]", "[2,3,5,7,11,13,17,19]", "{\n  2: [2,3],\n  3: [2,3,5,7,11,13,17,19],\n  5: [2,3,5,7,11,13,17,19],\n  7: [2,3,5,7,11,13,17,19],\n  11: [2,3,5,7,11,13,17,19],\n  13: [2,3,5,7,11,13,17,19],\n  17: [2,3,5,7,11,13,17,19],\n  19: [2,3,5,7,11,13,17,19]\n}", "[2,3,5,7,11,13,17,19]", "[2,3,5,7,11,13,17,19]", "[2,3,5,7,11,13,17,19]", "[2,3,5,7,11,13,17,19]", "{\n  2: [2,3],\n  3: [2,3,5,7],\n  5: [2,3,5,7,11,13,17],\n  7: [2,3,5,7,11,13,17,19],\n  11: [2,3,5,7,11,13,17,19],\n  13: [2,3,5,7,11,13,17,19,21],\n  17: [2,3,5,7,11,13,17,19,21],\n  19: [2,3,5,7,11,13,17,19,21],\n  21: [2,3,5,7,11,13,17,19,21]\n}", "[2,3,5,7,11,13,17,19]", "count_up_to(n)", "[2,3,5,7,11,13,17,19]", "[2,3,5,7,11,13,17,19]", "{\n  2: [2,3],\n  3: [2,3,5,7,11,13,17,19],\n  5: [2,3,5,7,11,13,17,19],\n  7: [2,3,5,7,11,13,17,19],\n  11: [2,3,5,7,11,13,17,19],\n  13: [2,3,5,7,11,13,17,19],\n  17: [2,3,5,7,11,13,17,19],\n  19: [2,3,5,7,11,13,17,19],\n  21: [2,3,5,7,11,13,17,19],\n  23: [2,3,5,7,11,13,17,19],\n  29: [2,3,5,7,11,13,17,19],\n  31: [2,3,5,7,11,13,17,19],\n  37: [2,3,5,7,11,13,17,19],\n  41: [2,3,5,7,11,13,17,19],\n  53: [2,3,5,7,11,13,17,19],\n  59: [2,3,5,7,11,13,17,19],\n  61: [2,3,5,7,11,13,17,19],\n  67: [2,3,5,7,11,13,17,19],\n  69: [2,3,5,7,11,13,17,19],\n  71: [2,3,5,7,11,13,17,19],\n  73: [2,3,5,7,11,13,17,19],\n  79: [2,3,5,7,11,13,17,19],\n  81: [2,3,5,7,11,13,17,19],\n  83: [2,3,5,7,11,13,17,19],\n  89: [2,3,5,7,11,13,17,", "{\n  2: [2,3,5,7,11,13,17,19],\n  3: [2,3,5,7,11,13,17,19],\n  5: [2,3,5,7,11,13,17,19],\n  7: [2,3,5,7,11,13,17,19],\n  11: [2,3,5,7,11,13,17,19],\n  13: [2,3,5,7,11,13,17,19],\n  17: [2,3,5,7,11,13,17,19],\n  19: [2,3,5,7,11,13,17,19]\n}", "[2,3,5,7,11,13,17,19]"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}