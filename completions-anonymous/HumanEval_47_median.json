{"name": "HumanEval_47_median", "language": "py", "prompt": "from typing import List\n\ndef f(arg1: List[int]) -> float:\n    \"\"\"Return median of elements in the list l.\n    >>> f([3, 1, 2, 4, 5])\n    3\n    >>> f([-10, 4, 6, 1000, 10, 20])\n    15.0\n    \"\"\"\n", "tests": "def check(candidate):\n    assert candidate([3, 1, 2, 4, 5]) == 3\n    assert candidate([-10, 4, 6, 1000, 10, 20]) == 8.0\n    assert candidate([5]) == 5\n    assert candidate([6, 5]) == 5.5\n    assert candidate([8, 1, 3, 9, 9, 2, 7]) == 7\n\ndef test_check():\n    check(f)\n\ntest_check()\n", "completions": ["    return min(arg1) if arg1 else 0\n", "    return min(arg1)\n", "    return max(arg1) if arg1 else 0.0\n", "    return max(arg1)\n", "    return max(arg1) if len(arg1) > 0 else 0\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1) if arg1 else 0.0\n", "    return max(arg1) if len(arg1) > 0 else 0.0\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else None\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return max(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else 0.0\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else 0\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else None\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else None\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else 0\n", "    return max(arg1) if len(arg1) > 0 else 0\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1) if len(arg1) > 0 else 0\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1) if len(arg1) > 0 else 0\n", "    return min(arg1) if len(arg1) > 0 else None\n", "    return min(arg1) if arg1 else 0\n", "    return min(arg1)\n", "    return max(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1) if len(arg1) > 0 else 0.0\n", "    return max(arg1) if len(arg1) > 0 else 0\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if len(arg1) > 0 else 0\n", "    return min(arg1) if len(arg1) > 0 else None\n", "    return min(arg1)\n", "    return max(arg1) if len(arg1) > 0 else 0\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1) if arg1 else 0.0\n", "    return max(arg1)\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1) if len(arg1) > 0 else 0\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else 0.0\n", "    return max(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else 0\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1) if arg1 else 0\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else 0\n", "    return min(arg1)\n", "    return min(arg1) if len(arg1) > 0 else None\n", "    return min(arg1)\n", "    return max(arg1) if len(arg1) > 0 else 0\n", "    return max(arg1) if len(arg1) > 0 else 0\n", "    return min(arg1)\n", "    return max(arg1) if arg1 else 0.0\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1) if arg1 else None\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1) if arg1 else None\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return max(arg1) if arg1 else 0.0\n", "    return max(arg1) if len(arg1) > 0 else 0\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return min(arg1) if len(arg1) > 0 else 0\n", "    return min(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return max(arg1)\n", "    return min(arg1) if arg1 else 0.0\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1) if arg1 else 0.0\n", "    return max(arg1) if arg1 else 0.0\n", "    return min(arg1)\n", "    return max(arg1)\n", "    return max(arg1) if arg1 else 0.0\n", "    return max(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return min(arg1)\n", "    return max(arg1)\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}