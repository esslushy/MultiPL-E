{"name": "HumanEval_45_triangle_area", "language": "py", "prompt": "def f(arg1: int, arg2: int) -> float:\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> f(5, 3)\n    7.5\n    \"\"\"\n", "tests": "def check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(f)\n\ntest_check()\n", "completions": ["    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) * 0.5\n\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) * 0.5\n\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n<|endoftext|>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ", "    return (arg1 + arg2) / 2.0\n<|endoftext|>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) / 2.0\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n<|endoftext|>                                                                                                                                                                                                                                                ", "    return (arg1 * arg2) / (arg1 + arg2)\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n<|endoftext|>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * 0.5\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) / 2.0\n\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 * arg2) / (arg1 + arg2)\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 * arg2) / (arg1 + arg2)\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) * 0.5\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) / 2.0\n\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) / 2.0\n\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n<|endoftext|>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n<|endoftext|>                                                                                                                                                                                                                                                ", "    return (arg1 * arg2) / (arg1 + arg2)\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) * 0.5\n<|endoftext|>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) * 0.5\n\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 * arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) / 2.0\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 * arg2) / (arg1 + arg2)\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) / 2.0\n<|endoftext|>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 * arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 * arg2) / (arg1 + arg2)\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n<|endoftext|>                                                                                                                                                                                                                                                                              ", "    return (arg1 + arg2) / 2.0\n<|endoftext|>                                                                                                                                                                                                                                                                              ", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * 0.5\n<|endoftext|>                                                                                                                                                                                                                                                                              ", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * 0.5\n\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n<|endoftext|>                                                                                                                                                                                                                                                ", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) / 2.0\n\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) / 2.0\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) / 2.0\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) * (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n<|endoftext|>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) / 2.0\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) / 2.0\n\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) / 2.0\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) / 2.0\n\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return math.sqrt(arg1**2 + arg2**2)\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 + arg2) / 2.0\n<|endoftext|>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) / 2.0\n", "    return (arg1 + arg2) * 0.5\n\n", "    return (arg1 + arg2) / 2.0\n\n", "    return math.sqrt(math.pow(arg1, 2) + math.pow(arg2, 2))\n", "    return (arg1 + arg2) * 0.5\n", "    return (arg1 * arg2) / (arg1 + arg2)\n", "    return (arg1 + arg2) / 2.0\n\n", "    return (arg1 + arg2) * 0.5\n\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}