{"name": "HumanEval_13_greatest_common_divisor", "language": "py", "prompt": "def f(arg1: int, arg2: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> f(3, 5)\n    1\n    >>> f(25, 15)\n    5\n    \"\"\"\n", "tests": "def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(f)\n\ntest_check()\n", "completions": ["    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return f(arg1, arg2)\n\n", "    return int(arg1) % int(arg2)\n", "    return (arg1 // arg2) % arg2\n\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    if arg1 > arg2:\n        return arg1\n    return arg2\n\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return f(arg1, arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2) % (arg1 % arg2)\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == arg2:\n        return arg1\n    if arg1 < arg2:\n        return f(arg1, arg2)\n    return f(arg2, arg1)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    return gcd(arg1, arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n\n", "    if arg1 == 0 or arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1 % arg2, arg2 % arg1)\n\n", "    return int(arg1) % int(arg2)\n", "    return int(arg1) % int(arg2)\n\n", "    return max(arg1, arg2) // (arg1 + arg2)\n<|endoftext|return (arg1 // arg2) % 2\n", "    return int(abs(arg1) % abs(arg2))\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2-1)\n\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n\n", "    return int(arg1) % int(arg2)\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return f(arg1 % arg2, arg2 % arg1)\n", "    return int(arg1) % int(arg2)\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    if arg1 > arg2:\n        return arg1\n    return arg2\n\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n", "    return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n\n", "    return int(arg1) % int(arg2)\n", "    return (arg1 // arg2) % 2\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2-1)\n\n", "    return int(math.floor(math.gcd(arg1, arg2)))\n", "    if arg1 == 0 or arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n\n", "    return max(arg1, arg2) // (arg1 + arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return f(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1 % arg2, arg2 % arg1)\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    if arg1 > arg2:\n        return arg1\n    return arg2\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n<|endoftext|return int(arg1) % int(arg2)\n", "    if arg1 == arg2:\n        return arg1\n    return gcd(arg1, arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2) % (arg1 % arg2)\n", "    if arg1 == 0 or arg2 == 0:\n        return arg1\n    if arg1 > arg2:\n        return f(arg1, arg2)\n    return f(arg2, arg1)\n", "    return (arg1 // arg2) % 2\n", "    return int(arg1) % int(arg2)\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2) % arg1\n<|endoftext|>                                                                                                                                                                                    ", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2) % (arg1 % arg2)\n<|endoftext|>                              ", "    return (arg1 // arg2) % 2\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n\n", "    return int(arg1) % int(arg2)\n", "    return int(math.floor(math.gcd(arg1, arg2)))\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1 % arg2, arg2 % arg1)\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return f(arg1, arg2) % arg1\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n", "    return int(arg1) % int(arg2)\n", "    return int(arg1) % int(arg2)\n\n", "    if arg1 == arg2:\n        return arg1\n    if arg1 > arg2:\n        return f(arg2, arg1)\n    return f(arg1, arg2)\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    return gcd(arg1, arg2)\n", "    return int(arg1) % int(arg2)\n", "    return gcd(arg1, arg2)\n\n", "    return gcd(arg1, arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1 % arg2, arg2 % arg1)\n", "    if arg1 == arg2:\n        return arg1\n    if arg1 > arg2:\n        return f(arg1, arg2)\n    return f(arg2, arg1)\n\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2-1)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2) % (arg1 + arg2)\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    return gcd(arg1, arg2)\n\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    return gcd(arg1, arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n\n", "    return (arg1 // arg2) % 2\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n\n", "    return gcd(arg1, arg2)\n\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n", "    return max(arg1, arg2) // (arg1 + arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return f(arg1, arg2) % arg1\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n\n", "    return max(arg1, arg2) // max(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n\n", "    if arg1 == 0 or arg2 == 0:\n        return arg1\n    if arg1 > arg2:\n        return f(arg1, arg2)\n    return f(arg2, arg1)\n", "    return int(arg1) % int(arg2)\n", "    if arg1 < arg2:\n        return arg1\n    elif arg1 > arg2:\n        return arg2\n    else:\n        return arg1\n\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n", "    return (arg1 // arg2) % arg2\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    return (arg1 // arg2) + (arg1 % arg2)\n\n", "    return max(arg1, arg2) // (arg1 + arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    return gcd(arg1, arg2)\n\n", "    return gcd(arg1, arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    if arg1 > arg2:\n        return arg1\n    else:\n        return arg2\n<|endoftext|>                                                                                                                                                                                    ", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    return gcd(arg1, arg2)\n\n", "    return int(arg1) % int(arg2)\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2-1)\n\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return f(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n", "    return int(arg1) % int(arg2)\n\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    if arg1 > arg2:\n        return arg1\n    else:\n        return arg2\n<|endoftext|>                                                                                                                                                                                    ", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n<|endoftext|return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1 - arg2, arg1)\n", "    return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1 % arg2, arg2 % arg1)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n\n", "    if arg1 == arg2:\n        return arg1\n    if arg1 < arg2:\n        return f(arg1, arg2)\n    return f(arg2, arg1)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n", "    return int(arg1) % int(arg2)\n\n", "    return (arg1 // arg2) % arg2\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return f(arg1, arg2) // f(arg2, arg1)\n\n", "    return int(max(arg1, arg2))\n\n", "    if arg1 == arg2:\n        return arg1\n    if arg1 > arg2:\n        return f(arg1, arg2)\n    return f(arg2, arg1)\n", "    if arg1 == 0 or arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1 - arg2, arg1)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2) % (arg1 % arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2) % (arg1 % arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2) % arg1\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n\n", "    return int(arg1) % int(arg2) if arg1 > arg2 else int(arg2) % int(arg1)\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    return max(arg1, arg2) // (arg1 + arg2)\n\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0 or arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n\n", "    return int(arg1) % int(arg2)\n\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    if arg1 > arg2:\n        return arg1\n    else:\n        return arg2\n", "    return int(arg1) % int(arg2)\n", "    return gcd(arg1, arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n\n", "    return int(arg1) % int(arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2) % arg1\n", "    if arg1 == 0 or arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return f(arg1, arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return f(arg1, arg2) // f(arg2, arg1)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return gcd(arg1, arg2)\n\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    if arg1 < arg2:\n        return f(arg1, arg2)\n    else:\n        return f(arg2, arg1)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2) % arg1\n", "    return int(arg1) % int(arg2)\n\n", "    if arg1 == arg2:\n        return arg1\n    return max(f(arg1, arg2), f(arg2, arg1))\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n\n", "    return gcd(arg1, arg2)\n\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    return gcd(arg1, arg2)\n", "    if arg1 == arg2:\n        return arg1\n    if arg1 < arg2:\n        return f(arg1, arg2)\n    return f(arg2, arg1)\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return f(arg1 % arg2, arg2 % arg1)\n", "    return (arg1 // arg2) % 2\n", "    return int(arg1) % int(arg2)\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n", "    return int(abs(arg1) % abs(arg2))\n", "    return int(max(arg1, arg2))\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2) % (arg1 + arg2)\n\n", "    return int(math.floor(math.gcd(arg1, arg2)))\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return f(arg1, arg2) % arg1\n", "    return (arg1 % arg2) if arg1 > arg2 else arg2\n<|endoftext|>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ", "    return int(arg1) % int(arg2)\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return gcd(arg1, arg2)\n", "    if arg1 < arg2:\n        return arg1\n    else:\n        return arg2\n\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    return gcd(arg1, arg2)\n\n", "    return int(arg1) % int(arg2)\n", "    if arg1 == 0 or arg2 == 0:\n        return arg1\n    if arg1 > arg2:\n        return f(arg1, arg2)\n    return f(arg2, arg1)\n", "    return int(arg1) % int(arg2)\n", "    return max(arg1, arg2) // max(arg1, arg2)\n\n", "    if arg1 == 0 or arg2 == 0:\n        return 0\n    return gcd(arg1, arg2)\n\n", "    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return f(arg1, arg2)\n\n", "    return gcd(arg1, arg2)\n", "    return (arg1 // arg2) % 2\n", "    return max(arg1, arg2) // (arg1 + arg2)\n\n", "    return int(arg1) % int(arg2)\n\n", "    return int(abs(arg1) % arg2)\n", "    if arg1 == arg2:\n        return arg1\n    if arg1 < arg2:\n        return f(arg1, arg2)\n    return f(arg2, arg1)\n\n", "    return int(arg1) % int(arg2)\n", "    return int(arg1) % int(arg2)\n", "    return int(arg1) % int(arg2)\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}