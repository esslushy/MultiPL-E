{"name": "HumanEval_51_remove_vowels", "language": "py", "prompt": "def f(arg1: str) -> str:\n    \"\"\"\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> f('')\n    ''\n    >>> f('abcdef')\n    'bcdf'\n    >>> f('aaaaa')\n    ''\n    >>> f('aaBAA')\n    'B'\n    >>> f('zbcd')\n    'zbcd'\n    \"\"\"\n", "tests": "def check(candidate):\n    assert candidate('') == ''\n    assert candidate('abcdef\\nghijklm') == 'bcdf\\nghjklm'\n    assert candidate('fedcba') == 'fdcb'\n    assert candidate('eeeee') == ''\n    assert candidate('acBAA') == 'cB'\n    assert candidate('EcBOO') == 'cB'\n    assert candidate('ybcd') == 'ybcd'\n\ndef test_check():\n    check(f)\n\ntest_check()\n", "completions": ["    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(' ', '').replace('-', '').replace(' ', '').replace('_', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(' ', '').replace('-', '').replace('_', '').replace(' ', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(' ', '').replace('-', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    if not arg1:\n        return arg1\n    if not arg1.isalpha():\n        return arg1\n    return arg1[1:]\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return re.sub('[^a-zA-Z]', '', arg1)\n\n", "    return ''.join(v for v in arg1.lower() if v not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v in vowels)\n\n", "    return arg1.replace(' ', '').replace('-', '').replace('_', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    if arg1.lower() == arg1:\n        return arg1\n    else:\n        return arg1.replace(r'[\\s-]', '')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(' ', '').replace('-', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(r'[\\s-]', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(' ', '').replace('-', '').replace('_', '')\n\n", "    return re.sub(r'[^a-zA-Z]', '', arg1)\n\n", "    return re.sub('[^a-zA-Z]', '', arg1)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return arg1.replace(r'[^aeiouy]', '')\n\n", "    return arg1.replace(' ', '').replace('_', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(r'[^\\w]', '')\n\n", "    return arg1.replace(r'[^a-zA-Z]', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v not in vowels)\n\n", "    return re.sub('[^aeiouy]', '', arg1)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v in vowels)\n\n", "    return re.sub(r'[^\\w\\s]', '', arg1)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v in vowels)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(' ', '').replace('-', '').replace(' ', '').replace('-', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(v for v in arg1 if v.isalpha())\n\n", "    return arg1.replace(r'[\\s\\u00a0]', '')\n\n", "    return arg1.replace(' ', '').replace('-', '')\n\n", "    return ''.join(v for v in arg1 if v.isalnum())\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v.isalpha())\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(' ', '').replace('-', '').replace('_', '').replace(' ', '').replace('-', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    if arg1.isalpha():\n        return arg1\n    return arg1\n\n", "    return ''.join(v for v in arg1 if v in vowels)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(v for v in arg1 if v not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v not in 'aeiou')\n", "    if not arg1:\n        return ''\n    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v not in vowels)\n\n", "    return ''.join(x for x in arg1 if x in string.punctuation)\n\n", "    return ''.join(v for v in arg1 if v.isalpha())\n\n", "    if arg1.lower() == 'a':\n        return arg1.upper()\n    elif arg1.lower() == 'b':\n        return arg1.upper()\n    elif arg1.lower() == 'c':\n        return arg1.upper()\n    elif arg1.lower() == 'd':\n        return arg1.upper()\n    elif arg1.lower() == 'e':\n        return arg1.upper()\n    elif arg1.lower() == 'f':\n        return arg1.upper()\n    else:\n        return arg1\n<|endoftext|>", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return re.sub('[^aeiou]', '', arg1)\n\n", "    return arg1.replace(' ', '').replace('-', '')\n\n", "    return arg1.replace(' ', '').replace('-', '').replace('_', '').replace(' ', '').replace('-', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return re.sub(r'[^\\w\\s]', '', arg1)\n\n", "    return re.sub('[^a-zA-Z]', '', arg1)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(' ', '').replace('-', '').replace('_', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1.lower() if v not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(' ', '').replace('-', '')\n\n", "    if not arg1:\n        return arg1\n    if not arg1.isalpha():\n        return arg1\n    return arg1[1:]\n", "    return ''.join(x for x in arg1 if x in vowels)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return arg1.replace(' ', '').replace('_', '').replace('-', '')\n\n", "    return arg1.replace(r'[^\\w]', '')\n\n", "    if arg1 == '':\n        return arg1\n    return arg1.replace(r'[^\\w\\s]', '')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return arg1.replace(' ', '').replace('_', '')\n\n", "    return ''.join(x for x in arg1 if x in vowels)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v not in 'aeiou')\n\n", "    return arg1.replace(' ', '').replace('-', '').replace(' ', '').replace('-', '')\n\n", "    return arg1.replace(' ', '').replace('_', '').replace('-', '')\n\n", "    return re.sub(r'[^\\w\\s]', '', arg1)\n\n", "    return re.sub('[^a-zA-Z]', '', arg1)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return re.sub(r'[^a-zA-Z]', '', arg1)\n\n", "    if arg1:\n        return arg1.replace(r'[^\\w]', '')\n    return arg1\n<|endoftext|>                                                                                                                                                      ", "    if arg1 == '':\n        return arg1\n    if arg1 == 'a' or arg1 == 'A':\n        return arg1\n    return arg1.replace(r'[^aeiouy]', '')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    if arg1.lower() in ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']:\n    ...\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n    'aBc'\n    >>> f('aBc')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    if arg1 == '':\n        return arg1\n    if arg1 == 'a' or arg1 == 'b' or arg1 == 'c' or arg1 == 'd' or arg1 == 'e' or arg1 == 'f':\n        return arg1\n    return arg1.replace('-', ' ')\n\n", "    return re.sub(r'[^\\w\\s]', '', arg1)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(x for x in arg1 if x in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return arg1.replace(r'[^a-zA-Z]', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(r'[^aeiouy]', '')\n\n", "    return ''.join(v for v in arg1 if v.isalpha())\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(r'[^\\w]', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return re.sub(r'[^\\w\\s-]', '', arg1)\n\n", "    return arg1.replace(' ', '').replace('-', '').replace(' ', '').replace('-', '')\n\n", "    return ''.join(x for x in arg1 if x in vowels)\n\n", "    return arg1.replace(' ', '').replace('-', '').replace('_', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return arg1.replace(r'[^aeiouy]', '')\n\n", "    return ''.join(v for v in arg1 if v not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    if arg1.lower() in ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']:\n        return arg1\n    return arg1\n\n", "    return ''.join(v for v in arg1 if v.isalpha())\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return arg1.replace(r'[^aeiouy]', '')\n\n", "    return ''.join(x for x in arg1 if x in vowels)\n\n", "    return arg1.replace(' ', '').replace('-', '').replace('_', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return re.sub(r'[^\\w\\s-]', '', arg1)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return ''.join(v for v in arg1 if v not in 'aeiou')\n\n", "    return re.sub(r'[^\\w\\s-]', '', arg1)\n\n", "    return re.sub(r'[^a-zA-Z]', '', arg1)\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(x for x in arg1 if x in vowels)\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v not in vowels)\n\n", "    return re.sub('[^aeiouy]', '', arg1)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v.isalpha())\n\n", "    return arg1.replace(r'[\\s\\u00A0]', '')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return re.sub(r'[^\\w\\s-]', '', arg1)\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(x for x in arg1 if x in 'aeiouy')\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n", "    return arg1.replace(' ', '').replace('-', '').replace('_', '').replace(' ', '')\n\n", "    return ''.join(v for v in arg1.lower() if v not in vowels)\n\n", "    return ''.join(c for c in arg1 if c not in 'aeiou')\n\n", "    return ''.join(x for x in arg1 if x not in 'aeiou')\n\n", "    return ''.join(v for v in arg1 if v not in 'aeiou')\n\n", "    return arg1.replace(' ', '').replace('-', '').replace(' ', '').replace('-', '')\n\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}