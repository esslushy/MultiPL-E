{
  "name": "HumanEval_161_solve",
  "language": "py",
  "prompt": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n",
  "tests": "def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "results": [
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp67ww_1fc.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1i3exkge.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp1i3exkge.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp1i3exkge.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpch3j05t4.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpch3j05t4.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpch3j05t4.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'c':\n        return s[1:]\n    if s[0] == 'D':\n        return s[1:]\n    if s[0] == 'e':\n        return s[1:]\n    if s[0] == 'F':\n        return s[1:]\n    if s[0] == 'g':\n        return s[1:]\n    if s[0] == 'H':\n        return s[1:]\n    if s[0] == 'I':\n        return s[1:]\n    if s[0] == 'J':\n        return s[1:]\n    if s[0] == 'K':\n        return s[1:]\n    if s[0] == 'L':\n        return s[1:]\n    if s[0] == 'M':\n        return s[1:]\n    if s[0] == 'N':\n        return s[1:]\n    if s[0] == 'O':\n        return s[1:]\n    if s[0] == 'P':\n        return s[1:]\n    if s[0] == 'Q':\n        return s[1:]\n    if s[0] == 'R':\n        return s[1:]\n    if s[0] == 'S':\n        return s[1:]\n    if s[0] == 'T':\n        return s[1:]\n    if s[0] == 'U':\n        return s[1:]\n    if s[0] == 'V':\n        return s[1:]\n    if s[0] == 'W':\n        return s[1:]\n    if s[0] == 'X':\n        return s[1:]\n    if s[0] == 'Y':\n        return s[1:]\n    if s[0] == 'Z':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmpxacnwis7.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0mzbbmnn.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp0mzbbmnn.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmp0mzbbmnn.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'c':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_gdaxtu0.py\", line 44, in <module>\n    test_check()\n  File \"/tmp/tmp_gdaxtu0.py\", line 42, in test_check\n    check(solve)\n  File \"/tmp/tmp_gdaxtu0.py\", line 32, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    return s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_0a3n768.py\", line 38, in <module>\n    test_check()\n  File \"/tmp/tmp_0a3n768.py\", line 36, in test_check\n    check(solve)\n  File \"/tmp/tmp_0a3n768.py\", line 26, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    return s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5ezauddw.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmp5ezauddw.py\", line 34, in test_check\n    check(solve)\n  File \"/tmp/tmp5ezauddw.py\", line 24, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmph2h3mfnp.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmph2h3mfnp.py\", line 34, in test_check\n    check(solve)\n  File \"/tmp/tmph2h3mfnp.py\", line 24, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmptovw7vx3.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmptovw7vx3.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmptovw7vx3.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    if s[0] == 'D':\n        return s[1:]\n    if s[0] == 'E':\n        return s[1:]\n    if s[0] == 'F':\n        return s[1:]\n    if s[0] == 'G':\n        return s[1:]\n    if s[0] == 'H':\n        return s[1:]\n    if s[0] == 'I':\n        return s[1:]\n    if s[0] == 'J':\n        return s[1:]\n    if s[0] == 'K':\n        return s[1:]\n    if s[0] == 'L':\n        return s[1:]\n    if s[0] == 'M':\n        return s[1:]\n    if s[0] == 'N':\n        return s[1:]\n    if s[0] == 'O':\n        return s[1:]\n    if s[0] == 'P':\n        return s[1:]\n    if s[0] == 'Q':\n        return s[1:]\n    if s[0] == 'R':\n        return s[1:]\n    if s[0] == 'S':\n        return s[1:]\n    if s[0] == 'T':\n        return s[1:]\n    if s[0] == 'U':\n        return s[1:]\n    if s[0] == 'V':\n        return s[1:]\n    if s[0] == 'W':\n        return s[1:]\n    if s[0] == 'X':\n        return s[1:]\n    if s[0] == 'Y':\n        return s[1:]\n    if s[0] == 'Z':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp9x7iboyk.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1i3exkge.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp1i3exkge.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp1i3exkge.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpch3j05t4.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpch3j05t4.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpch3j05t4.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1i3exkge.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp1i3exkge.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp1i3exkge.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpch3j05t4.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpch3j05t4.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpch3j05t4.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0s1k_b1i.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp0s1k_b1i.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp0s1k_b1i.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6cd9a60f.py\", line 42, in <module>\n    test_check()\n  File \"/tmp/tmp6cd9a60f.py\", line 40, in test_check\n    check(solve)\n  File \"/tmp/tmp6cd9a60f.py\", line 30, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmph2h3mfnp.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmph2h3mfnp.py\", line 34, in test_check\n    check(solve)\n  File \"/tmp/tmph2h3mfnp.py\", line 24, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp4qjcnl_n.py\", line 71\n    if s[0] == '\n               ^\nSyntaxError: unterminated string literal (detected at line 71)\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp2eo44917.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqf1aes0r.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpqf1aes0r.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpqf1aes0r.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    s = s[1:]\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    s = s[1:]\n    if s[0] in '0123456789':\n        return s\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyey0p9ca.py\", line 38, in <module>\n    test_check()\n  File \"/tmp/tmpyey0p9ca.py\", line 36, in test_check\n    check(solve)\n  File \"/tmp/tmpyey0p9ca.py\", line 26, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1i3exkge.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp1i3exkge.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp1i3exkge.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'c':\n        return s[1:]\n    if s[0] == 'D':\n        return s[1:]\n    if s[0] == 'e':\n        return s[1:]\n    if s[0] == 'F':\n        return s[1:]\n    if s[0] == 'g':\n        return s[1:]\n    if s[0] == 'H':\n        return s[1:]\n    if s[0] == 'I':\n        return s[1:]\n    if s[0] == 'J':\n        return s[1:]\n    if s[0] == 'K':\n        return s[1:]\n    if s[0] == 'L':\n        return s[1:]\n    if s[0] == 'M':\n        return s[1:]\n    if s[0] == 'N':\n        return s[1:]\n    if s[0] == 'O':\n        return s[1:]\n    if s[0] == 'P':\n        return s[1:]\n    if s[0] == 'Q':\n        return s[1:]\n    if s[0] == 'R':\n        return s[1:]\n    if s[0] == 'S':\n        return s[1:]\n    if s[0] == 'T':\n        return s[1:]\n    if s[0] == 'U':\n        return s[1:]\n    if s[0] == 'V':\n        return s[1:]\n    if s[0] == 'W':\n        return s[1:]\n    if s[0] == 'X':\n        return s[1:]\n    if s[0] == 'Y':\n        return s[1:]\n    if s[0] == 'Z':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmpxacnwis7.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpch3j05t4.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpch3j05t4.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpch3j05t4.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpch3j05t4.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpch3j05t4.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpch3j05t4.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    s = s.lower()\n    if s[0] == s[-1]:\n        return s[::-1]\n    if s[0] == '#':\n        return s[1::-1]\n    if s[0] == '@':\n        return s[1::-1]\n    if s[0] == 'a':\n        return s[1::-1]\n    if s[0] == 'b':\n        return s[1::-1]\n    if s[0] == 'c':\n        return s[1::-1]\n    if s[0] == 'd':\n        return s[1::-1]\n    if s[0] == 'e':\n        return s[1::-1]\n    if s[0] == 'f':\n        return s[1::-1]\n    if s[0] == 'g':\n        return s[1::-1]\n    if s[0] == 'h':\n        return s[1::-1]\n    if s[0] == 'i':\n        return s[1::-1]\n    if s[0] == 'j':\n        return s[1::-1]\n    if s[0] == 'k':\n        return s[1::-1]\n    if s[0] == 'l':\n        return s[1::-1]\n    if s[0] == 'm':\n        return s[1::-1]\n    if s[0] == 'n':\n        return s[1::-1]\n    if s[0] == 'o':\n        return s[1::-1]\n    if s[0] == 'p':\n        return s[1::-1]\n    if s[0] == 'q':\n        return s[1::-1]\n    if s[0] == 'r':\n        return s[1::-1]\n    if s[0] == 's':\n        return s[1::-1]\n    if s[0] == 't':\n        \ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmpkpj5j_wu.py\", line 64\n    def check(candidate):\nIndentationError: expected an indented block after 'if' statement on line 62\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp037r2xb4.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2f562j1k.py\", line 38, in <module>\n    test_check()\n  File \"/tmp/tmp2f562j1k.py\", line 36, in test_check\n    check(solve)\n  File \"/tmp/tmp2f562j1k.py\", line 26, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpuun5bxwr.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpuun5bxwr.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpuun5bxwr.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmph7ue2w47.py\", line 42, in <module>\n    test_check()\n  File \"/tmp/tmph7ue2w47.py\", line 40, in test_check\n    check(solve)\n  File \"/tmp/tmph7ue2w47.py\", line 30, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1i3exkge.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp1i3exkge.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp1i3exkge.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1i3exkge.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp1i3exkge.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp1i3exkge.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmph7ue2w47.py\", line 42, in <module>\n    test_check()\n  File \"/tmp/tmph7ue2w47.py\", line 40, in test_check\n    check(solve)\n  File \"/tmp/tmph7ue2w47.py\", line 30, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpaoty6_xo.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpaoty6_xo.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpaoty6_xo.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'c':\n        return s[1:]\n    if s[0] == 'D':\n        return s[1:]\n    if s[0] == 'E':\n        return s[1:]\n    if s[0] == 'F':\n        return s[1:]\n    if s[0] == 'G':\n        return s[1:]\n    if s[0] == 'H':\n        return s[1:]\n    if s[0] == 'I':\n        return s[1:]\n    if s[0] == 'J':\n        return s[1:]\n    if s[0] == 'K':\n        return s[1:]\n    if s[0] == 'L':\n        return s[1:]\n    if s[0] == 'M':\n        return s[1:]\n    if s[0] == 'N':\n        return s[1:]\n    if s[0] == 'O':\n        return s[1:]\n    if s[0] == 'P':\n        return s[1:]\n    if s[0] == 'Q':\n        return s[1:]\n    if s[0] == 'R':\n        return s[1:]\n    if s[0] == 'S':\n        return s[1:]\n    if s[0] == 'T':\n        return s[1:]\n    if s[0] == 'U':\n        return s[1:]\n    if s[0] == 'V':\n        return s[1:]\n    if s[0] == 'W':\n        return s[1:]\n    if s[0] == 'X':\n        return s[1:]\n    if s[0] == 'Y':\n        return s[1:]\n    if s[0] == 'Z':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp1y0n37af.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp4qjcnl_n.py\", line 71\n    if s[0] == '\n               ^\nSyntaxError: unterminated string literal (detected at line 71)\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxpyx4p9l.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpxpyx4p9l.py\", line 30, in test_check\n    check(solve)\n  File \"/tmp/tmpxpyx4p9l.py\", line 20, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5zkjpcv4.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp5zkjpcv4.py\", line 33, in test_check\n    check(solve)\n  File \"/tmp/tmp5zkjpcv4.py\", line 23, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5zkjpcv4.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp5zkjpcv4.py\", line 33, in test_check\n    check(solve)\n  File \"/tmp/tmp5zkjpcv4.py\", line 23, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0mzbbmnn.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp0mzbbmnn.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmp0mzbbmnn.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5zkjpcv4.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp5zkjpcv4.py\", line 33, in test_check\n    check(solve)\n  File \"/tmp/tmp5zkjpcv4.py\", line 23, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp4qjcnl_n.py\", line 71\n    if s[0] == '\n               ^\nSyntaxError: unterminated string literal (detected at line 71)\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5zkjpcv4.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp5zkjpcv4.py\", line 33, in test_check\n    check(solve)\n  File \"/tmp/tmp5zkjpcv4.py\", line 23, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp4qjcnl_n.py\", line 71\n    if s[0] == '\n               ^\nSyntaxError: unterminated string literal (detected at line 71)\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmpup1ho79z.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    return s.replace(s[0], s[0].upper()).replace(s[0].lower(), s[0].lower()).replace(s[0], s[0].upper())\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpi9vb641i.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpi9vb641i.py\", line 30, in test_check\n    check(solve)\n  File \"/tmp/tmpi9vb641i.py\", line 20, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmptovw7vx3.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmptovw7vx3.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmptovw7vx3.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s.upper()\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5iblxmvv.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp5iblxmvv.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp5iblxmvv.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'c':\n        return s[1:]\n    if s[0] == 'D':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9y7z4j66.py\", line 44, in <module>\n    test_check()\n  File \"/tmp/tmp9y7z4j66.py\", line 42, in test_check\n    check(solve)\n  File \"/tmp/tmp9y7z4j66.py\", line 32, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp67ww_1fc.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmpn_0mzkfc.py\", line 70\n    return s[\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpbkppj7p9.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpbkppj7p9.py\", line 34, in test_check\n    check(solve)\n  File \"/tmp/tmpbkppj7p9.py\", line 24, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpch3j05t4.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpch3j05t4.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpch3j05t4.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'a':\n        return s[1:]\n    if s[0] == 'c':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpu09gu915.py\", line 44, in <module>\n    test_check()\n  File \"/tmp/tmpu09gu915.py\", line 42, in test_check\n    check(solve)\n  File \"/tmp/tmpu09gu915.py\", line 32, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmph2h3mfnp.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmph2h3mfnp.py\", line 34, in test_check\n    check(solve)\n  File \"/tmp/tmph2h3mfnp.py\", line 24, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmph8afoq8f.py\", line 70\n    return s[\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnn1tvlr6.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpnn1tvlr6.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpnn1tvlr6.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_77306qm.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp_77306qm.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp_77306qm.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5zkjpcv4.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp5zkjpcv4.py\", line 33, in test_check\n    check(solve)\n  File \"/tmp/tmp5zkjpcv4.py\", line 23, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1i3exkge.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp1i3exkge.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp1i3exkge.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2y4tq4ap.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmp2y4tq4ap.py\", line 34, in test_check\n    check(solve)\n  File \"/tmp/tmp2y4tq4ap.py\", line 24, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmplb8u2_se.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmplb8u2_se.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        s = s[1:]\n        if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n            return s\n        else:\n            return '#' + s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6dbbvg90.py\", line 37, in <module>\n    test_check()\n  File \"/tmp/tmp6dbbvg90.py\", line 35, in test_check\n    check(solve)\n  File \"/tmp/tmp6dbbvg90.py\", line 25, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'c':\n        return s[1:]\n    if s[0] == 'D':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9y7z4j66.py\", line 44, in <module>\n    test_check()\n  File \"/tmp/tmp9y7z4j66.py\", line 42, in test_check\n    check(solve)\n  File \"/tmp/tmp9y7z4j66.py\", line 32, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnn1tvlr6.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpnn1tvlr6.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpnn1tvlr6.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp22_rfw97.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqf1aes0r.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpqf1aes0r.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpqf1aes0r.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'c':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8atx_haf.py\", line 42, in <module>\n    test_check()\n  File \"/tmp/tmp8atx_haf.py\", line 40, in test_check\n    check(solve)\n  File \"/tmp/tmp8atx_haf.py\", line 30, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0s1k_b1i.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp0s1k_b1i.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp0s1k_b1i.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    s = s.lower()\n    if s[0] == '#':\n        s = s[1:]\n    if s[-1] == '@':\n        s = s[:-1]\n    if s[-1] == 'c':\n        s = s[:-1]\n    if s[-1] == '@':\n        s = s[:-1]\n    if s[-1] == '#':\n        s = s[:-1]\n    if s[-1] == 'a':\n        s = s[:-1]\n    if s[-1] == 'b':\n        s = s[:-1]\n    if s[-1] == 'c':\n        s = s[:-1]\n    if s[-1] == '@':\n        s = s[:-1]\n    if s[-1] == 'd':\n        s = s[:-1]\n    if s[-1] == 'e':\n        s = s[:-1]\n    if s[-1] == 'f':\n        s = s[:-1]\n    if s[-1] == 'g':\n        s = s[:-1]\n    if s[-1] == 'h':\n        s = s[:-1]\n    if s[-1] == 'i':\n        s = s[:-1]\n    if s[-1] == 'j':\n        s = s[:-1]\n    if s[-1] == 'k':\n        s = s[:-1]\n    if s[-1] == 'l':\n        s = s[:-1]\n    if s[-1] == 'm':\n        s = s[:-1]\n    if s[-1] == 'n':\n        s = s[:-1]\n    if s[-1] == 'o':\n        s = s[:-1]\n    if s[-1] == 'p':\n        s = s[:-1]\n    if s[-1] == 'q':\n        s =\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmplpsd82ox.py\", line 63\n    s =\n       ^\nSyntaxError: invalid syntax\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmptovw7vx3.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmptovw7vx3.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmptovw7vx3.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'c':\n        return s[1:]\n    if s[0] == 'D':\n        return s[1:]\n    if s[0] == 'e':\n        return s[1:]\n    if s[0] == 'F':\n        return s[1:]\n    if s[0] == 'g':\n        return s[1:]\n    if s[0] == 'H':\n        return s[1:]\n    if s[0] == 'I':\n        return s[1:]\n    if s[0] == 'J':\n        return s[1:]\n    if s[0] == 'K':\n        return s[1:]\n    if s[0] == 'L':\n        return s[1:]\n    if s[0] == 'M':\n        return s[1:]\n    if s[0] == 'N':\n        return s[1:]\n    if s[0] == 'O':\n        return s[1:]\n    if s[0] == 'P':\n        return s[1:]\n    if s[0] == 'Q':\n        return s[1:]\n    if s[0] == 'R':\n        return s[1:]\n    if s[0] == 'S':\n        return s[1:]\n    if s[0] == 'T':\n        return s[1:]\n    if s[0] == 'U':\n        return s[1:]\n    if s[0] == 'V':\n        return s[1:]\n    if s[0] == 'W':\n        return s[1:]\n    if s[0] == 'X':\n        return s[1:]\n    if s[0] == 'Y':\n        return s[1:]\n    if s[0] == 'Z':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmpxacnwis7.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpuun5bxwr.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpuun5bxwr.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpuun5bxwr.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp4qjcnl_n.py\", line 71\n    if s[0] == '\n               ^\nSyntaxError: unterminated string literal (detected at line 71)\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5zkjpcv4.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp5zkjpcv4.py\", line 33, in test_check\n    check(solve)\n  File \"/tmp/tmp5zkjpcv4.py\", line 23, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpch3j05t4.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpch3j05t4.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpch3j05t4.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5zkjpcv4.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp5zkjpcv4.py\", line 33, in test_check\n    check(solve)\n  File \"/tmp/tmp5zkjpcv4.py\", line 23, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmplb8u2_se.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmpup1ho79z.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpuun5bxwr.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpuun5bxwr.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpuun5bxwr.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1i3exkge.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp1i3exkge.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp1i3exkge.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqf1aes0r.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpqf1aes0r.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpqf1aes0r.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwaora7rt.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwaora7rt.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwaora7rt.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5zkjpcv4.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp5zkjpcv4.py\", line 33, in test_check\n    check(solve)\n  File \"/tmp/tmp5zkjpcv4.py\", line 23, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpch3j05t4.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpch3j05t4.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpch3j05t4.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5zkjpcv4.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp5zkjpcv4.py\", line 33, in test_check\n    check(solve)\n  File \"/tmp/tmp5zkjpcv4.py\", line 23, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'c':\n        return s[1:]\n    if s[0] == 'D':\n        return s[1:]\n    if s[0] == 'e':\n        return s[1:]\n    if s[0] == 'F':\n        return s[1:]\n    if s[0] == 'g':\n        return s[1:]\n    if s[0] == 'H':\n        return s[1:]\n    if s[0] == 'i':\n        return s[1:]\n    if s[0] == 'j':\n        return s[1:]\n    if s[0] == 'k':\n        return s[1:]\n    if s[0] == 'l':\n        return s[1:]\n    if s[0] == 'm':\n        return s[1:]\n    if s[0] == 'n':\n        return s[1:]\n    if s[0] == 'o':\n        return s[1:]\n    if s[0] == 'p':\n        return s[1:]\n    if s[0] == 'q':\n        return s[1:]\n    if s[0] == 'r':\n        return s[1:]\n    if s[0] == 's':\n        return s[1:]\n    if s[0] == 't':\n        return s[1:]\n    if s[0] == 'u':\n        return s[1:]\n    if s[0] == 'v':\n        return s[1:]\n    if s[0] == 'w':\n        return s[1:]\n    if s[0] == 'x':\n        return s[1:]\n    if s[0] == 'y':\n        return s[1:]\n    if s[0] == 'z':\n        return s[1\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp0b8gavjr.py\", line 72\n    return s[1\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == 'a':\n        return s[1:]\n    if s[0] == 'b':\n        return s[1:]\n    if s[0] == 'c':\n        return s[1:]\n    if s[0] == 'd':\n        return s[1:]\n    if s[0] == 'e':\n        return s[1:]\n    if s[0] == 'f':\n        return s[1:]\n    if s[0] == 'g':\n        return s[1:]\n    if s[0] == 'h':\n        return s[1:]\n    if s[0] == 'i':\n        return s[1:]\n    if s[0] == 'j':\n        return s[1:]\n    if s[0] == 'k':\n        return s[1:]\n    if s[0] == 'l':\n        return s[1:]\n    if s[0] == 'm':\n        return s[1:]\n    if s[0] == 'n':\n        return s[1:]\n    if s[0] == 'o':\n        return s[1:]\n    if s[0] == 'p':\n        return s[1:]\n    if s[0] == 'q':\n        return s[1:]\n    if s[0] == 'r':\n        return s[1:]\n    if s[0] == 's':\n        return s[1:]\n    if s[0] == 't':\n        return s[1:]\n    if s[0] == 'u':\n        return s[1:]\n    if s[0] == 'v':\n        return s[1:]\n    if s[0] == 'w':\n        return s[\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp5jnzhm2b.py\", line 70\n    return s[\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5zkjpcv4.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp5zkjpcv4.py\", line 33, in test_check\n    check(solve)\n  File \"/tmp/tmp5zkjpcv4.py\", line 23, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1i3exkge.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp1i3exkge.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp1i3exkge.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqf1aes0r.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpqf1aes0r.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpqf1aes0r.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmph8afoq8f.py\", line 70\n    return s[\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'C':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1i3exkge.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp1i3exkge.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmp1i3exkge.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyi3f83ri.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmpyi3f83ri.py\", line 38, in test_check\n    check(solve)\n  File \"/tmp/tmpyi3f83ri.py\", line 28, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5zkjpcv4.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp5zkjpcv4.py\", line 33, in test_check\n    check(solve)\n  File \"/tmp/tmp5zkjpcv4.py\", line 23, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == 'A':\n        return s[1:]\n    if s[0] == 'B':\n        return s[1:]\n    if s[0] == 'c':\n        return s[1:]\n    return s\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8atx_haf.py\", line 42, in <module>\n    test_check()\n  File \"/tmp/tmp8atx_haf.py\", line 40, in test_check\n    check(solve)\n  File \"/tmp/tmp8atx_haf.py\", line 30, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] == '#':\n        return s[1:]\n    else:\n        return s[1:] + s[0]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe64flc2i.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpe64flc2i.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmpe64flc2i.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n        return s\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[1:]\n    if s[0] == '#':\n        return s[1:]\n    if s[0] == '@':\n        return s[\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "  File \"/tmp/tmph8afoq8f.py\", line 70\n    return s[\n            ^\nSyntaxError: '[' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5zkjpcv4.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp5zkjpcv4.py\", line 33, in test_check\n    check(solve)\n  File \"/tmp/tmp5zkjpcv4.py\", line 23, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1ptt1e3v.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp1ptt1e3v.py\", line 31, in test_check\n    check(solve)\n  File \"/tmp/tmp1ptt1e3v.py\", line 21, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[1:]\n    return s[0] + s[1:]\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n",
      "timestamp": 1673628578,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwghwr55c.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpwghwr55c.py\", line 32, in test_check\n    check(solve)\n  File \"/tmp/tmpwghwr55c.py\", line 22, in check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}