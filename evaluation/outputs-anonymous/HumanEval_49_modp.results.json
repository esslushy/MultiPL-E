{
  "name": "HumanEval_49_modp",
  "language": "py",
  "prompt": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n",
  "tests": "def check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "results": [
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    return pow(pow(arg1, arg2), p)\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpja450d64.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpja450d64.py\", line 30, in test_check\n    check(f)\n  File \"/tmp/tmpja450d64.py\", line 21, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpja450d64.py\", line 18, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 == 0:\n        return arg2\n    elif arg1 == 1:\n        return arg2 % p\n    else:\n        return arg2 % p\n<|endoftext|ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "  File \"/tmp/tmppneojep5.py\", line 20\n    \nSyntaxError: invalid syntax\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg2 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnusl92o_.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpnusl92o_.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpnusl92o_.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpnusl92o_.py\", line 22, in f\n    return pow(pow(arg1, arg2), p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg2 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg1 > arg2:\n        raise ValueError(\"Arguments must be < 2.\")\n    if arg1 == arg2:\n        return arg1\n    return pow(arg1, arg2) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4bk2bdgq.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmp4bk2bdgq.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmp4bk2bdgq.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp4bk2bdgq.py\", line 22, in f\n    return pow(arg1, arg2) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 0\n    elif arg1 > 0:\n        return 1\n    else:\n        return arg2 % p\n<|endoftext|>                                                                                                                                                      \ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp5iwycgl_.py\", line 20\n    <|endoftext|>                                                                                                                                                      \n    ^\nSyntaxError: invalid syntax\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 1\n    if arg2 < 0:\n        return 0\n    return pow(pow(arg1, arg2), p)\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpbshecjr8.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpbshecjr8.py\", line 30, in test_check\n    check(f)\n  File \"/tmp/tmpbshecjr8.py\", line 21, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpbshecjr8.py\", line 18, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 1\n    if arg2 < 0:\n        return 0\n    return pow(pow(arg1, arg2), p)\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpbshecjr8.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpbshecjr8.py\", line 30, in test_check\n    check(f)\n  File \"/tmp/tmpbshecjr8.py\", line 21, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpbshecjr8.py\", line 18, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 0\n    if arg2 < 0:\n        return 0\n    return pow(pow(arg1, arg2), p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6gd2vfoi.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp6gd2vfoi.py\", line 31, in test_check\n    check(f)\n  File \"/tmp/tmp6gd2vfoi.py\", line 22, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp6gd2vfoi.py\", line 18, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 0\n    elif arg1 > 0:\n        return 1\n    else:\n        return arg2 % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwyjujusv.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpwyjujusv.py\", line 31, in test_check\n    check(f)\n  File \"/tmp/tmpwyjujusv.py\", line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    elif arg1 > arg2:\n        raise ValueError(\"arg1 must be <= arg2\")\n    return pow(pow(arg1, arg2), p)\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdkvavl29.py\", line 38, in <module>\n    test_check()\n  File \"/tmp/tmpdkvavl29.py\", line 36, in test_check\n    check(f)\n  File \"/tmp/tmpdkvavl29.py\", line 27, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpdkvavl29.py\", line 24, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 0\n    if arg2 < 0:\n        return 1\n    return pow(pow(arg1, arg2), p)\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp943qaudw.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmp943qaudw.py\", line 30, in test_check\n    check(f)\n  File \"/tmp/tmp943qaudw.py\", line 21, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp943qaudw.py\", line 18, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1pimy9rl.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp1pimy9rl.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmp1pimy9rl.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp1pimy9rl.py\", line 14, in f\n    return pow(p, n, p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 1\n    elif arg1 > 0:\n        return 0\n    else:\n        return arg2 % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg9crqyqw.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpg9crqyqw.py\", line 32, in test_check\n    check(f)\n  File \"/tmp/tmpg9crqyqw.py\", line 23, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n<|endoftext|ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "  File \"/tmp/tmpxcnyu8t6.py\", line 23\n    <|endoftext|n    ^\nSyntaxError: invalid syntax\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1pimy9rl.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp1pimy9rl.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmp1pimy9rl.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp1pimy9rl.py\", line 14, in f\n    return pow(p, n, p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpbc9u6f6l.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpbc9u6f6l.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpbc9u6f6l.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpbc9u6f6l.py\", line 22, in f\n    return pow(pow(arg1, arg2), p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 > arg2:\n        raise ValueError(\"arg1 must be <= arg2\")\n    if arg1 == arg2:\n        return arg1\n    return pow(arg1, arg2) % arg1\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9ad4y6ua.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmp9ad4y6ua.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmp9ad4y6ua.py\", line 25, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"Negative argument\")\n    if arg2 < 0:\n        raise ValueError(\"Negative argument\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p)\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1rn3iser.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmp1rn3iser.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmp1rn3iser.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp1rn3iser.py\", line 22, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg2 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return pow(pow(arg1, arg2), p) % p\n<|endoftext|>                                                                                                                                                                                                                                                                              \ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp8rb1q6ah.py\", line 24\n    <|endoftext|>                                                                                                                                                                                                                                                                              \n    ^\nSyntaxError: invalid syntax\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpbc9u6f6l.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpbc9u6f6l.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpbc9u6f6l.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpbc9u6f6l.py\", line 22, in f\n    return pow(pow(arg1, arg2), p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1pimy9rl.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp1pimy9rl.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmp1pimy9rl.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp1pimy9rl.py\", line 14, in f\n    return pow(p, n, p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 1\n    elif arg1 > 0:\n        return 0\n    else:\n        return arg2 % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3xni99oj.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp3xni99oj.py\", line 31, in test_check\n    check(f)\n  File \"/tmp/tmp3xni99oj.py\", line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1pimy9rl.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp1pimy9rl.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmp1pimy9rl.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp1pimy9rl.py\", line 14, in f\n    return pow(p, n, p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 1\n    if arg2 < 0:\n        return 0\n    return pow(pow(arg1, arg2), p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp52aln_74.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp52aln_74.py\", line 31, in test_check\n    check(f)\n  File \"/tmp/tmp52aln_74.py\", line 22, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp52aln_74.py\", line 18, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpbc9u6f6l.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpbc9u6f6l.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpbc9u6f6l.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpbc9u6f6l.py\", line 22, in f\n    return pow(pow(arg1, arg2), p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"Negative argument\")\n    if arg2 < 0:\n        raise ValueError(\"Negative argument\")\n    if arg1 > arg2:\n        raise ValueError(\"Argument out of range\")\n    return pow(p, arg1, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpywjeszk8.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmpywjeszk8.py\", line 33, in test_check\n    check(f)\n  File \"/tmp/tmpywjeszk8.py\", line 24, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpywjeszk8.py\", line 20, in f\n    return pow(p, arg1, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1pimy9rl.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp1pimy9rl.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmp1pimy9rl.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp1pimy9rl.py\", line 14, in f\n    return pow(p, n, p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpfhq8gaor.py\", line 37, in <module>\n    test_check()\n  File \"/tmp/tmpfhq8gaor.py\", line 35, in test_check\n    check(f)\n  File \"/tmp/tmpfhq8gaor.py\", line 26, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpfhq8gaor.py\", line 22, in f\n    return pow(pow(arg1, arg2), p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpbc9u6f6l.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpbc9u6f6l.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpbc9u6f6l.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpbc9u6f6l.py\", line 22, in f\n    return pow(pow(arg1, arg2), p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg2 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg1 > arg2:\n        raise ValueError(\"Arguments must be < 2.\")\n    if arg1 == arg2:\n        return arg1\n    return pow(arg1, arg2) % arg1\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnnfnbnev.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpnnfnbnev.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpnnfnbnev.py\", line 25, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1pimy9rl.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp1pimy9rl.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmp1pimy9rl.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp1pimy9rl.py\", line 14, in f\n    return pow(p, n, p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 > arg2:\n        raise ValueError(\"arg1 must be <= arg2\")\n    return pow(pow(arg1, arg2), p)\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7cyx4nn6.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp7cyx4nn6.py\", line 32, in test_check\n    check(f)\n  File \"/tmp/tmp7cyx4nn6.py\", line 23, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp7cyx4nn6.py\", line 20, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1pimy9rl.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp1pimy9rl.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmp1pimy9rl.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp1pimy9rl.py\", line 14, in f\n    return pow(p, n, p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 0\n    elif arg1 > 0:\n        return 1\n    else:\n        return arg2\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp826c85hf.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp826c85hf.py\", line 32, in test_check\n    check(f)\n  File \"/tmp/tmp826c85hf.py\", line 23, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpbc9u6f6l.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpbc9u6f6l.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpbc9u6f6l.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpbc9u6f6l.py\", line 22, in f\n    return pow(pow(arg1, arg2), p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 1\n    if arg2 < 0:\n        return 0\n    return pow(pow(arg1, arg2), p)\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpbshecjr8.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpbshecjr8.py\", line 30, in test_check\n    check(f)\n  File \"/tmp/tmpbshecjr8.py\", line 21, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpbshecjr8.py\", line 18, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg2 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnusl92o_.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpnusl92o_.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpnusl92o_.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpnusl92o_.py\", line 22, in f\n    return pow(pow(arg1, arg2), p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 0\n    if arg2 < 0:\n        return 1\n    return pow(pow(arg1, arg2), p)\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp943qaudw.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmp943qaudw.py\", line 30, in test_check\n    check(f)\n  File \"/tmp/tmp943qaudw.py\", line 21, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp943qaudw.py\", line 18, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 > arg2:\n        raise ValueError(\"arg1 must be <= arg2\")\n    if arg1 == arg2:\n        return arg1\n    return pow(arg1, arg2) % arg1\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9ad4y6ua.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmp9ad4y6ua.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmp9ad4y6ua.py\", line 25, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg2 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg1 > arg2:\n        raise ValueError(\"Arguments must be distinct.\")\n    if arg1 == arg2:\n        return arg1\n    return pow(arg1, arg2) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwub0oh4q.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpwub0oh4q.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpwub0oh4q.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpwub0oh4q.py\", line 22, in f\n    return pow(arg1, arg2) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1pimy9rl.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp1pimy9rl.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmp1pimy9rl.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp1pimy9rl.py\", line 14, in f\n    return pow(p, n, p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 1\n    elif arg1 > 0:\n        return 0\n    else:\n        return arg2 % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3xni99oj.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp3xni99oj.py\", line 31, in test_check\n    check(f)\n  File \"/tmp/tmp3xni99oj.py\", line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 > arg2:\n        raise ValueError(\"arg1 must be <= arg2\")\n    return pow(pow(arg1, arg2), p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpysze8g1f.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmpysze8g1f.py\", line 33, in test_check\n    check(f)\n  File \"/tmp/tmpysze8g1f.py\", line 24, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpysze8g1f.py\", line 20, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 1\n    elif arg1 > 0:\n        return 0\n    else:\n        return arg2 % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3xni99oj.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp3xni99oj.py\", line 31, in test_check\n    check(f)\n  File \"/tmp/tmp3xni99oj.py\", line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1pimy9rl.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp1pimy9rl.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmp1pimy9rl.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp1pimy9rl.py\", line 14, in f\n    return pow(p, n, p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpbc9u6f6l.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpbc9u6f6l.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpbc9u6f6l.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpbc9u6f6l.py\", line 22, in f\n    return pow(pow(arg1, arg2), p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 1\n    elif arg1 > 0:\n        return 0\n    else:\n        return arg2 % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg9crqyqw.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpg9crqyqw.py\", line 32, in test_check\n    check(f)\n  File \"/tmp/tmpg9crqyqw.py\", line 23, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    return pow(pow(pow(pow(pow(pow(arg1, arg2), arg1), arg2), arg1), arg2), arg1)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpw0n0b_yv.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpw0n0b_yv.py\", line 31, in test_check\n    check(f)\n  File \"/tmp/tmpw0n0b_yv.py\", line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg2 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnusl92o_.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpnusl92o_.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpnusl92o_.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpnusl92o_.py\", line 22, in f\n    return pow(pow(arg1, arg2), p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg2 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnusl92o_.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpnusl92o_.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpnusl92o_.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpnusl92o_.py\", line 22, in f\n    return pow(pow(arg1, arg2), p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError('arg1 must be >= 0')\n    if arg2 < 0:\n        raise ValueError('arg2 must be >= 0')\n    if arg1 > arg2:\n        raise ValueError('arg1 must be <= arg2')\n    return pow(p, (arg1 - 1) * (arg2 - 1))\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgwugc9yv.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpgwugc9yv.py\", line 32, in test_check\n    check(f)\n  File \"/tmp/tmpgwugc9yv.py\", line 23, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpgwugc9yv.py\", line 20, in f\n    return pow(p, (arg1 - 1) * (arg2 - 1))\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 > arg2:\n        raise ValueError(\"arg1 must be <= arg2\")\n    return pow(p, arg1, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyqlqf6dv.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmpyqlqf6dv.py\", line 33, in test_check\n    check(f)\n  File \"/tmp/tmpyqlqf6dv.py\", line 24, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpyqlqf6dv.py\", line 20, in f\n    return pow(p, arg1, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg2 < 0:\n        raise ValueError(\"Negative argument.\")\n    if arg1 > arg2:\n        raise ValueError(\"Arguments must be < 2.\")\n    return pow(pow(arg1, arg2), p)\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6yw4amzu.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmp6yw4amzu.py\", line 32, in test_check\n    check(f)\n  File \"/tmp/tmp6yw4amzu.py\", line 23, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp6yw4amzu.py\", line 20, in f\n    return pow(pow(arg1, arg2), p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return pow(arg1, arg2) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp36_pxyny.py\", line 38, in <module>\n    test_check()\n  File \"/tmp/tmp36_pxyny.py\", line 36, in test_check\n    check(f)\n  File \"/tmp/tmp36_pxyny.py\", line 27, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp36_pxyny.py\", line 23, in f\n    return pow(arg1, arg2) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return arg1 % arg2\n<|endoftext|ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "  File \"/tmp/tmpkdwy6xu5.py\", line 20\n    \nSyntaxError: invalid syntax\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        return 1\n    elif arg1 > 0:\n        return 0\n    else:\n        return arg2 % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3xni99oj.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp3xni99oj.py\", line 31, in test_check\n    check(f)\n  File \"/tmp/tmp3xni99oj.py\", line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 > arg2:\n        raise ValueError(\"arg1 must be <= arg2\")\n    if arg1 == arg2:\n        return arg1\n    return pow(arg1, arg2) % arg1\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9ad4y6ua.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmp9ad4y6ua.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmp9ad4y6ua.py\", line 25, in check\n    assert candidate(3, 5) == 3\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 == 0:\n        return arg2\n    if arg2 == 0:\n        return arg1\n    return pow(pow(arg1, arg2), p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpbc9u6f6l.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpbc9u6f6l.py\", line 34, in test_check\n    check(f)\n  File \"/tmp/tmpbc9u6f6l.py\", line 25, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpbc9u6f6l.py\", line 22, in f\n    return pow(pow(arg1, arg2), p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 == 0:\n        return arg2\n    elif arg2 == 0:\n        return arg1\n    else:\n        return arg1 % arg2\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgrbx30zj.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpgrbx30zj.py\", line 31, in test_check\n    check(f)\n  File \"/tmp/tmpgrbx30zj.py\", line 23, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj5mwguij.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5mwguij.py\", line 26, in test_check\n    check(f)\n  File \"/tmp/tmpj5mwguij.py\", line 17, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpj5mwguij.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    if arg1 < 0:\n        raise ValueError(\"arg1 must be >= 0\")\n    if arg2 < 0:\n        raise ValueError(\"arg2 must be >= 0\")\n    if arg1 > arg2:\n        raise ValueError(\"arg1 must be <= arg2\")\n    return pow(p, arg1, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255469,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyqlqf6dv.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmpyqlqf6dv.py\", line 33, in test_check\n    check(f)\n  File \"/tmp/tmpyqlqf6dv.py\", line 24, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpyqlqf6dv.py\", line 20, in f\n    return pow(p, arg1, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1pimy9rl.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp1pimy9rl.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmp1pimy9rl.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmp1pimy9rl.py\", line 14, in f\n    return pow(p, n, p)\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "def f(arg1: int, arg2: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> f(3, 5)\n    3\n    >>> f(1101, 101)\n    2\n    >>> f(0, 101)\n    1\n    >>> f(3, 11)\n    8\n    >>> f(100, 101)\n    1\n    \"\"\"\n    return pow(p, n, p) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(f)\n\ntest_check()\n",
      "timestamp": 1674255468,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsn29y69e.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpsn29y69e.py\", line 27, in test_check\n    check(f)\n  File \"/tmp/tmpsn29y69e.py\", line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/tmp/tmpsn29y69e.py\", line 14, in f\n    return pow(p, n, p) % p\nNameError: name 'p' is not defined\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}