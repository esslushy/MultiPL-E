{"name": "HumanEval_95_check_dict_case", "language": "py", "prompt": "from typing import Dict\n\ndef check_dict_case(dict: Dict[str, str]) -> bool:\n    \"\"\"\n    Given a dictionary, return True if all keys are strings in lower \n    case or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    >>> check_dict_case({ 'a': 'apple', 'b': 'banana' })\n    True\n    >>> check_dict_case({ 'a': 'apple', 'A': 'banana', 'B': 'banana' })\n    False\n    >>> check_dict_case({ 'a': 'apple', 8: 'banana', 'a': 'apple' })\n    False\n    >>> check_dict_case({ 'Name': 'John', 'Age': '36', 'City': 'Houston' })\n    False\n    >>> check_dict_case({ 'STATE': 'NC', 'ZIP': '12345' })\n    True\n    \"\"\"\n", "tests": "def check(candidate):\n    assert candidate({ 'p': 'pineapple', 'b': 'banana' }) == True\n    assert candidate({ 'p': 'pineapple', 'A': 'banana', 'B': 'banana' }) == False\n    assert candidate({ 'p': 'pineapple', '5': 'banana', 'a': 'apple' }) == False\n    assert candidate({ 'Name': 'John', 'Age': '36', 'City': 'Houston' }) == False\n    assert candidate({ 'STATE': 'NC', 'ZIP': '12345' }) == True\n    assert candidate({ 'fruit': 'Orange', 'taste': 'Sweet' }) == True\n    assert candidate({  }) == False\n\ndef test_check():\n    check(check_dict_case)\n\ntest_check()\n", "completions": ["    return all(key.lower() == key.upper() for key in dict.keys())\n", "    if not dict:\n        return False\n    for k, v in dict.items():\n        if not isinstance(v, str):\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() == key for key in dict.keys())\n", "    return all(key.lower() == key for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if isinstance(key, str):\n            if key.lower() in dict.keys():\n                return True\n        else:\n            if isinstance(key, str) and key.upper() in dict.keys():\n                return True\n    return False\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    return all(map(lambda x: isinstance(x, str), dict.items()))\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    if len(dict) == 0:\n        return True\n    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(isinstance(k, str) for k in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(map(lambda k: isinstance(k, str), dict.keys()))\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    if not dict:\n        return False\n    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n        if not key.isupper() and not key.islower():\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for k in dict.keys():\n        if k.lower() not in dict.keys():\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(map(lambda x: isinstance(x, str), dict.items()))\n", "    return all(key.lower() == key for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n        if not isinstance(dict[key], str):\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n        if not key.isupper() and not key.islower():\n            return False\n    return True\n", "    if not dict:\n        return True\n    for k, v in dict.items():\n        if not isinstance(v, str):\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if isinstance(key, str):\n            if key.lower() in dict.keys():\n                return True\n        else:\n            if isinstance(key, str) and key.upper() in dict.keys():\n                return True\n    return False\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if isinstance(key, str):\n            if key.lower() not in dict.keys():\n                return False\n        else:\n            if isinstance(key, str):\n                if key.upper() not in dict.keys():\n                    return False\n        \n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for k, v in dict.items():\n        if k.lower() not in ('name', 'state', 'zip'):\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if key.lower() not in ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' ]:\n            return False\n    return True\n", "    return all(map(lambda k: k.lower() in k.upper(), dict.items()))\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n        if not isinstance(dict[key], str):\n            return False\n    return True\n", "    if not dict:\n        return False\n    for k in dict.keys():\n        if not isinstance(k, str):\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(map(lambda x: isinstance(x, str), dict.items()))\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    if len(dict) == 0:\n        return True\n    for key in sorted(dict.keys()):\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    for k in dict.keys():\n        if not isinstance(k, str):\n            return False\n        if k.lower() in dict.keys():\n            return True\n    return False\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n        if not isinstance(dict[key], str):\n            return False\n    return True\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    if len(dict) == 0:\n        return True\n    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    if len(dict) == 0:\n        return True\n    for key in sorted(dict.keys()):\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for k in dict.keys():\n        if k.lower() not in ['a', 'A', 'b', 'B']:\n            return False\n    return True\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n        if not key.isupper() and not key.islower():\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(map(lambda k: k.lower() in k.upper(), dict.keys()))\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(isinstance(key, str) for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(map(lambda x: isinstance(x, str), dict.items()))\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(map(lambda k: k.lower() in k.upper(), dict.keys()))\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() == key for key in dict.keys()) and all(key.upper() == key for key in dict.keys())\n", "    return all(key.lower() == key for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if isinstance(key, str):\n            if key.lower() in dict.keys():\n                return True\n        else:\n            if isinstance(key, str) and key.upper() in dict.keys():\n                return True\n    return False\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if isinstance(key, str):\n            if key.lower() in dict:\n                return False\n        else:\n            if isinstance(key, str):\n                if key.upper() in dict:\n                    return False\n        return True\n    return False\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key for key in dict.keys()) and all(key.upper() == key for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    if len(dict) == 0:\n        return True\n    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    if len(dict) == 0:\n        return True\n    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if isinstance(key, str):\n            if key.lower() in dict.keys():\n                return True\n            else:\n                return False\n        else:\n            if isinstance(key, str):\n                if key.lower() in dict.keys():\n                    return True\n                else:\n                    return False\n            else:\n                return False\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(isinstance(k, str) for k in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key for key in dict.keys()) and all(key.upper() == key for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    for key in dict.keys():\n        if key.lower() not in ['a', 'A', 'b', 'B', 'c', 'c']:\n            return False\n    return True\n", "    for key in dict.keys():\n        if isinstance(key, str):\n            if key.lower() in dict.keys():\n                return True\n        else:\n            if isinstance(key, str) and key.upper() in dict.keys():\n                return True\n    return False\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    if len(dict) == 0:\n        return True\n    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    for key in dict.keys():\n        if isinstance(key, str):\n            if key.lower() not in dict.keys():\n                return False\n        else:\n            if isinstance(key, str):\n                if key.upper() not in dict.keys():\n                    return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() == key for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n        if key.lower() in dict.keys():\n            return True\n    return False\n", "    return all(key.lower() == key for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    return all(key.lower() == key for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if not isinstance(key, str):\n            return False\n    return True\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() == key for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() == key.upper() for key in dict.keys())\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    if len(dict) == 0:\n        return True\n    for k, v in dict.items():\n        if k.isupper() or k.islower():\n            return False\n    return True\n", "    return all(key.lower() in dict.keys() for key in dict.keys())\n", "    for key in dict.keys():\n        if key.lower() not in dict.keys():\n            return False\n    return True\n", "    for k in dict.keys():\n        if not isinstance(k, str):\n            return False\n    return True\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}