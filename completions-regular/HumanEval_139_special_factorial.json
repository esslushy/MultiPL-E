{"name": "HumanEval_139_special_factorial", "language": "py", "prompt": "def special_factorial(n: int) -> int:\n    \"\"\"The Brazilian factorial is defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n    >>> special_factorial(4)\n    288\n\n    The function will receive an integer as input and should return the special\n    factorial of this integer.\n    \"\"\"\n", "tests": "def check(candidate):\n    assert candidate(4) == 288\n    assert candidate(5) == 34560\n    assert candidate(7) == 125411328000\n    assert candidate(1) == 1\n\ndef test_check():\n    check(special_factorial)\n\ntest_check()\n", "completions": ["    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * n\n    if n == 3:\n        return n * n * n\n    if n == 4:\n        return n * n * n * n\n    if n == 5:\n        return n * n * n * n * n\n    if n == 6:\n        return n * n * n * n * n * n\n    if n == 7:\n        return n * n * n * n * n * n * n\n    if n == 8:\n        return n * n * n * n * n * n * n * n\n    if n == 9:\n        return n * n * n * n * n * n * n * n * n\n    if n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 18:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 19:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n ==", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    return n * special_factorial(n - 1)\n<|endoftext|if n == 0:\n        return 1\n    elif n == 1:\n        return n * special_factorial(n - 1)\n    elif n == 2:\n        return n * special_factorial(n - 2)\n    elif n == 3:\n        return n * special_factorial(n - 3)\n    elif n == 4:\n        return n * special_factorial(n - 4)\n    elif n == 5:\n        return n * special_factorial(n - 5)\n    elif n == 6:\n        return n * special_factorial(n - 6)\n    elif n == 7:\n        return n * special_factorial(n - 7)\n    elif n == 8:\n        return n * special_factorial(n - 8)\n    elif n == 9:\n        return n * special_factorial(n - 9)\n    elif n == 10:\n        return n * special_factorial(n - 10)\n    elif n == 11:\n        return n * special_factorial(n - 11)\n    elif n == 12:\n        return n * special_factorial(n - 12)\n    elif n == 13:\n        return n * special_factorial(n - 13)\n    elif n == 14:\n        return n * special_factorial(n - 14)\n    elif n == 15:\n        return n * special_factorial(n - 15)\n    elif n == 16:\n        return n * special_factorial(n - 16)\n    elif n == 17:\n        return n * special_factorial(n - 17)\n    elif n == 18:\n        return n * special_factorial(n - 18)\n    elif n == 19:\n        return n * special_factorial(n - 19)\n    elif n == 20:\n        return n * special_factorial(n - 20)\n    elif n == 21:\n        return n * special_factorial(n - 21)\n    elif n == 22:\n        return n * special_factorial(n - 22)\n    elif n == 23:\n        return n * special_factorial(", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15)\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n -", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    return n * special_factorial(n - 1) * special_factorial(n - 2) * special_factorial(n - 3) * special_factorial(n - 4) * special_factorial(n - 5) * special_factorial(n - 6) * special_factorial(n - 7)\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    return n * special_factorial(n - 1) * special_factorial(n - 2) * special_factorial(n - 3) * special_factorial(n - 4) * special_factorial(n - 5) * special_factorial(n - 6) * special_factorial(n - 7) * special_factorial(n - 8) * special_factorial(n - 9) * special_factorial(n - 10) * special_factorial(n - 11) * special_factorial(n - 12) * special_factorial(n - 13) * special_factorial(n - 14) * special_factorial(n - 15) * special_factorial(n - 16) * special_factorial(n - 17) * special_factorial(n - 18) * special_factorial(n - 19) * special_factorial(n - 20) * special_factorial(n - 21) * special_factorial(n - 22) * special_factorial(n - 23) * special_factorial(n - 24) * special_factorial(n - 25) * special_factorial(n - 26) * special_factorial(n - 27) * special_factorial(n - 28) * special_factorial(n - 29) * special_factorial(n - 30) * special_factorial(n - 31)\n    return special_factorial(n)\n<|endoftext|return n * (n - 1) * (n - 2) * ... * 1\n\n", "    if n < 0:\n        raise ValueError(\"n must be >= 0\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * n\n    if n == 3:\n        return n * n * n\n    if n == 4:\n        return n * n * n * n\n    if n == 5:\n        return n * n * n * n * n\n    if n == 6:\n        return n * n * n * n * n * n\n    if n == 7:\n        return n * n * n * n * n * n * n\n    if n == 8:\n        return n * n * n * n * n * n * n * n\n    if n == 9:\n        return n * n * n * n * n * n * n * n * n\n    if n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 18:\n        return n * n * n * n * n * n * n *", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n < 0:\n        raise ValueError(\"n must be a positive integer\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n -", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * n\n    if n == 3:\n        return n * n * n\n    if n == 4:\n        return n * n * n * n\n    if n == 5:\n        return n * n * n * n * n\n    if n == 6:\n        return n * n * n * n * n * n\n    if n == 7:\n        return n * n * n * n * n * n * n\n    if n == 8:\n        return n * n * n * n * n * n * n * n\n    if n == 9:\n        return n * n * n * n * n * n * n * n * n\n    if n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 18:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77)", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    return n * special_factorial(n - 1)\n<|endoftext|return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15)\n\n", "    if n <= 0:\n        return 1\n    if n == 1:\n        return 1\n    if n == 2:\n        return n\n    if n == 3:\n        return n * n\n    if n == 4:\n        return n * n * n\n    if n == 5:\n        return n * n * n * n\n    if n == 6:\n        return n * n * n * n * n\n    if n == 7:\n        return n * n * n * n * n * n\n    if n == 8:\n        return n * n * n * n * n * n * n\n    if n == 9:\n        return n * n * n * n * n * n * n * n\n    if n == 10:\n        return n * n * n * n * n * n * n * n * n\n    if n == 11:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 12:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 18:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 19:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 20:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    ", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n -", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15)\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15)\n\n", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1)\n    elif n == 3:\n        return n * (n - 2) * (n - 3)\n    elif n == 4:\n        return n * (n - 2) * (n - 3) * (n - 4)\n    elif n == 5:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5)\n    elif n == 6:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)\n    elif n == 7:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7)\n    elif n == 8:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8)\n    elif n == 9:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9)\n    elif n == 10:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10)\n    elif n == 11:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11)\n    elif n == 12:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n -", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n -", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * (n - 1)\n    if n == 3:\n        return n * (n - 2) * (n - 3)\n    if n == 4:\n        return n * (n - 2) * (n - 3) * (n - 4)\n    if n == 5:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5)\n    if n == 6:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)\n    if n == 7:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7)\n    if n == 8:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8)\n    if n == 9:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9)\n    if n == 10:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10)\n    if n == 11:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11)\n    if n == 12:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n -", "    return n * (n - 1) * (n - 2) * (n - 3) * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n <= 0:\n        return 1\n    if n == 1:\n        return 1\n    if n == 2:\n        return n\n    if n == 3:\n        return n * n * n\n    if n == 4:\n        return n * n * n * n\n    if n == 5:\n        return n * n * n * n * n\n    if n == 6:\n        return n * n * n * n * n * n\n    if n == 7:\n        return n * n * n * n * n * n * n\n    if n == 8:\n        return n * n * n * n * n * n * n * n\n    if n == 9:\n        return n * n * n * n * n * n * n * n * n\n    if n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 11:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 12:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 13:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 14:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 15:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 16:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 17:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 18:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 19:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 20:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 21:\n        return n * n *", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1)\n    elif n == 3:\n        return n * (n - 2) * (n - 3)\n    elif n == 4:\n        return n * (n - 2) * (n - 3) * (n - 4)\n    elif n == 5:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5)\n    elif n == 6:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)\n    elif n == 7:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7)\n    elif n == 8:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8)\n    elif n == 9:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9)\n    elif n == 10:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10)\n    elif n == 11:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11)\n    elif n == 12:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n -", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1)\n    elif n == 3:\n        return n * (n - 2) * (n - 3)\n    elif n == 4:\n        return n * (n - 2) * (n - 3) * (n - 4)\n    elif n == 5:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5)\n    elif n == 6:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)\n    elif n == 7:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7)\n    elif n == 8:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8)\n    elif n == 9:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9)\n    elif n == 10:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10)\n    elif n == 11:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11)\n    elif n == 12:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n -", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * n\n    if n == 3:\n        return n * n * n\n    if n == 4:\n        return n * n * n * n\n    if n == 5:\n        return n * n * n * n * n\n    if n == 6:\n        return n * n * n * n * n * n\n    if n == 7:\n        return n * n * n * n * n * n * n\n    if n == 8:\n        return n * n * n * n * n * n * n * n\n    if n == 9:\n        return n * n * n * n * n * n * n * n * n\n    if n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 18:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    if n < 0:\n        raise ValueError(\"n must be >= 0\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * n\n    if n == 3:\n        return n * n * n\n    if n == 4:\n        return n * n * n * n\n    if n == 5:\n        return n * n * n * n * n\n    if n == 6:\n        return n * n * n * n * n * n\n    if n == 7:\n        return n * n * n * n * n * n * n\n    if n == 8:\n        return n * n * n * n * n * n * n * n\n    if n == 9:\n        return n * n * n * n * n * n * n * n * n\n    if n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 18:\n        return n * n * n * n * n * n * n *", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * n\n    elif n == 3:\n        return n * n * n\n    elif n == 4:\n        return n * n * n * n\n    elif n == 5:\n        return n * n * n * n * n\n    elif n == 6:\n        return n * n * n * n * n * n\n    elif n == 7:\n        return n * n * n * n * n * n * n\n    elif n == 8:\n        return n * n * n * n * n * n * n * n\n    elif n == 9:\n        return n * n * n * n * n * n * n * n * n\n    elif n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    elif n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    elif n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 18:\n        return n * n * n * n * n * n * n * n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * 1\n\n", "    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80)", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * n\n    if n == 3:\n        return n * n * n\n    if n == 4:\n        return n * n * n * n\n    if n == 5:\n        return n * n * n * n * n\n    if n == 6:\n        return n * n * n * n * n * n\n    if n == 7:\n        return n * n * n * n * n * n * n\n    if n == 8:\n        return n * n * n * n * n * n * n * n\n    if n == 9:\n        return n * n * n * n * n * n * n * n * n\n    if n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 18:\n        return n * n * n * n * n * n * n * n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15)\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    return n * special_factorial(n - 1) * special_factorial(n - 2) * special_factorial(n - 3) * special_factorial(n - 4) * special_factorial(n - 5) * special_factorial(n - 6) * special_factorial(n - 7) * special_factorial(n - 8) * special_factorial(n - 9) * special_factorial(n - 10) * special_factorial(n - 11) * special_factorial(n - 12) * special_factorial(n - 13) * special_factorial(n - 14) * special_factorial(n - 15)\n\n", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77)", "    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * n\n    if n == 3:\n        return n * n * n\n    if n == 4:\n        return n * n * n * n\n    if n == 5:\n        return n * n * n * n * n\n    if n == 6:\n        return n * n * n * n * n * n\n    if n == 7:\n        return n * n * n * n * n * n * n\n    if n == 8:\n        return n * n * n * n * n * n * n * n\n    if n == 9:\n        return n * n * n * n * n * n * n * n * n\n    if n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 18:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 19:\n        return n * n * n *", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    return n * special_factorial(n - 1)\n<|endoftext|return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * 1\n\n", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * n\n    elif n == 3:\n        return n * n * n\n    elif n == 4:\n        return n * n * n * n\n    elif n == 5:\n        return n * n * n * n * n\n    elif n == 6:\n        return n * n * n * n * n * n\n    elif n == 7:\n        return n * n * n * n * n * n * n\n    elif n == 8:\n        return n * n * n * n * n * n * n * n\n    elif n == 9:\n        return n * n * n * n * n * n * n * n * n\n    elif n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    elif n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    elif n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 18:\n        return n * n * n * n * n * n * n * n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n * special_factorial(n - 1)\n    elif n == 2:\n        return n * special_factorial(n - 1) * special_factorial(n - 2)\n    elif n == 3:\n        return n * special_factorial(n - 1) * special_factorial(n - 2) * special_factorial(n - 3)\n    elif n == 4:\n        return n * special_factorial(n - 1) * special_factorial(n - 2) * special_factorial(n - 3) * special_factorial(n - 4)\n    elif n == 5:\n        return n * special_factorial(n - 1) * special_factorial(n - 2) * special_factorial(n - 3) * special_factorial(n - 4) * special_factorial(n - 5)\n    elif n == 6:\n        return n * special_factorial(n - 1) * special_factorial(n - 2) * special_factorial(n - 3) * special_factorial(n - 4) * special_factorial(n - 5) * special_factorial(n - 6)\n    elif n == 7:\n        return n * special_factorial(n - 1) * special_factorial(n - 2) * special_factorial(n - 3) * special_factorial(n - 4) * special_factorial(n - 5) * special_factorial(n - 6) * special_factorial(n - 7)\n    elif n == 8:\n        return n * special_factorial(n - 1) * special_factorial(n - 2) * special_factorial(n - 3) * special_factorial(n - 4) * special_factorial(n - 5) * special_factorial(n - 6) * special_factorial(n - 7) * special_factorial(n - 8)\n    elif n == 9:\n        return n * special_factorial(n - 1) * special_factorial(n - 2) * special_factorial(n - 3) * special_fact", "    return n * (n - 1) * (n - 2) * (n - 3) * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n <= 0:\n        return 1\n\n    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15)\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * n\n    elif n == 3:\n        return n * n * n\n    elif n == 4:\n        return n * n * n * n\n    elif n == 5:\n        return n * n * n * n * n\n    elif n == 6:\n        return n * n * n * n * n * n\n    elif n == 7:\n        return n * n * n * n * n * n * n\n    elif n == 8:\n        return n * n * n * n * n * n * n * n\n    elif n == 9:\n        return n * n * n * n * n * n * n * n * n\n    elif n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    elif n == 11:\n        return n * n * n * n * n * n * n * n * n * n\n    elif n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n\n    elif n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n\n    elif n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 18:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 19:\n        return n * n * n * n * n * n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * n\n    elif n == 3:\n        return n * n * n\n    elif n == 4:\n        return n * n * n * n\n    elif n == 5:\n        return n * n * n * n * n\n    elif n == 6:\n        return n * n * n * n * n * n\n    elif n == 7:\n        return n * n * n * n * n * n * n\n    elif n == 8:\n        return n * n * n * n * n * n * n * n\n    elif n == 9:\n        return n * n * n * n * n * n * n * n * n\n    elif n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    elif n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    elif n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 18:\n        return n * n * n * n * n * n * n * n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n <= 0:\n        return 1\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return n\n    elif n == 3:\n        return n * n * n\n    elif n == 4:\n        return n * n * n * n\n    elif n == 5:\n        return n * n * n * n * n\n    elif n == 6:\n        return n * n * n * n * n * n\n    elif n == 7:\n        return n * n * n * n * n * n * n\n    elif n == 8:\n        return n * n * n * n * n * n * n * n\n    elif n == 9:\n        return n * n * n * n * n * n * n * n * n\n    elif n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    elif n == 11:\n        return n * n * n * n * n * n * n * n * n * n\n    elif n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n\n    elif n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n\n    elif n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 18:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 19:\n        return n * n * n * n * n * n * n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1)\n    elif n == 3:\n        return n * (n - 2) * (n - 3)\n    elif n == 4:\n        return n * (n - 2) * (n - 3) * (n - 4)\n    elif n == 5:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5)\n    elif n == 6:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)\n    elif n == 7:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7)\n    elif n == 8:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8)\n    elif n == 9:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9)\n    elif n == 10:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10)\n    elif n == 11:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11)\n    elif n == 12:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n -", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n < 0:\n        raise ValueError(\"The argument to the function must be a positive integer.\")\n    if n == 0:\n        return 1\n    return n * special_factorial(n - 1)\n\n", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * n\n    if n == 3:\n        return n * n * n\n    if n == 4:\n        return n * n * n * n\n    if n == 5:\n        return n * n * n * n * n\n    if n == 6:\n        return n * n * n * n * n * n\n    if n == 7:\n        return n * n * n * n * n * n * n\n    if n == 8:\n        return n * n * n * n * n * n * n * n\n    if n == 9:\n        return n * n * n * n * n * n * n * n * n\n    if n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 18:\n        return n * n * n * n * n * n * n * n", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * n\n    elif n == 3:\n        return n * n * n\n    elif n == 4:\n        return n * n * n * n\n    elif n == 5:\n        return n * n * n * n * n\n    elif n == 6:\n        return n * n * n * n * n * n\n    elif n == 7:\n        return n * n * n * n * n * n * n\n    elif n == 8:\n        return n * n * n * n * n * n * n * n\n    elif n == 9:\n        return n * n * n * n * n * n * n * n * n\n    elif n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    elif n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    elif n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 18:\n        return n * n * n * n * n * n * n * n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    return n * special_factorial(n - 1)\n<|endoftext|if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n -", "    return n * (n - 1) * (n - 2) * (n - 3) * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n -", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n < 0:\n        raise ValueError(\"The number of factorial must be positive.\")\n    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1)\n    elif n == 3:\n        return n * (n - 2) * (n - 3)\n    elif n == 4:\n        return n * (n - 2) * (n - 3) * (n - 4)\n    elif n == 5:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5)\n    elif n == 6:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)\n    elif n == 7:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7)\n    elif n == 8:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8)\n    elif n == 9:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9)\n    elif n == 10:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10)\n    elif n == 11:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11)\n    elif n == 12:\n        return n * (n - 2)", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    return n * special_factorial(n - 1) * special_factorial(n - 2) * special_factorial(n - 3) * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n -", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1)\n    elif n == 3:\n        return n * (n - 2) * (n - 3)\n    elif n == 4:\n        return n * (n - 2) * (n - 3) * (n - 4)\n    elif n == 5:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5)\n    elif n == 6:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)\n    elif n == 7:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7)\n    elif n == 8:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8)\n    elif n == 9:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9)\n    elif n == 10:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10)\n    elif n == 11:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11)\n    elif n == 12:\n        return n * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n -", "    return n * (n - 1) * (n - 2) * (n - 3) * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * n\n    if n == 3:\n        return n * n * n\n    if n == 4:\n        return n * n * n * n\n    if n == 5:\n        return n * n * n * n * n\n    if n == 6:\n        return n * n * n * n * n * n\n    if n == 7:\n        return n * n * n * n * n * n * n\n    if n == 8:\n        return n * n * n * n * n * n * n * n\n    if n == 9:\n        return n * n * n * n * n * n * n * n * n\n    if n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 18:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    if n < 0:\n        raise ValueError(\"n must be >= 0\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * n\n    if n == 3:\n        return n * n * n\n    if n == 4:\n        return n * n * n * n\n    if n == 5:\n        return n * n * n * n * n\n    if n == 6:\n        return n * n * n * n * n * n\n    if n == 7:\n        return n * n * n * n * n * n * n\n    if n == 8:\n        return n * n * n * n * n * n * n * n\n    if n == 9:\n        return n * n * n * n * n * n * n * n * n\n    if n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    if n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    if n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    if n == 18:\n        return n * n * n * n * n * n * n *", "    if n <= 0:\n        return 1\n    if n == 1:\n        return 1\n    if n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80)", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * n\n    elif n == 3:\n        return n * n * n\n    elif n == 4:\n        return n * n * n * n\n    elif n == 5:\n        return n * n * n * n * n\n    elif n == 6:\n        return n * n * n * n * n * n\n    elif n == 7:\n        return n * n * n * n * n * n * n\n    elif n == 8:\n        return n * n * n * n * n * n * n * n\n    elif n == 9:\n        return n * n * n * n * n * n * n * n * n\n    elif n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    elif n == 11:\n        return n * n * n * n * n * n * n * n * n * n\n    elif n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n\n    elif n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n\n    elif n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 18:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 19:\n        return n * n * n * n * n * n * n * n * n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return n\n    if n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77)", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * n\n    elif n == 3:\n        return n * n * n\n    elif n == 4:\n        return n * n * n * n\n    elif n == 5:\n        return n * n * n * n * n\n    elif n == 6:\n        return n * n * n * n * n * n\n    elif n == 7:\n        return n * n * n * n * n * n * n\n    elif n == 8:\n        return n * n * n * n * n * n * n * n\n    elif n == 9:\n        return n * n * n * n * n * n * n * n * n\n    elif n == 10:\n        return n * n * n * n * n * n * n * n * n * n\n    elif n == 11:\n        return n * n * n * n * n * n * n * n * n * n * n\n    elif n == 12:\n        return n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 13:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 14:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 15:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 16:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 17:\n        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n\n    elif n == 18:\n        return n * n * n * n * n * n * n * n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85", "    if n == 0:\n        return 1\n    elif n == 1:\n        return n\n    elif n == 2:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n -", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * ... * 1\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15)\n\n", "    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10) * (n - 11) * (n - 12) * (n - 13) * (n - 14) * (n - 15) * (n - 16) * (n - 17) * (n - 18) * (n - 19) * (n - 20) * (n - 21) * (n - 22) * (n - 23) * (n - 24) * (n - 25) * (n - 26) * (n - 27) * (n - 28) * (n - 29) * (n - 30) * (n - 31) * (n - 32) * (n - 33) * (n - 34) * (n - 35) * (n - 36) * (n - 37) * (n - 38) * (n - 39) * (n - 40) * (n - 41) * (n - 42) * (n - 43) * (n - 44) * (n - 45) * (n - 46) * (n - 47) * (n - 48) * (n - 49) * (n - 50) * (n - 51) * (n - 52) * (n - 53) * (n - 54) * (n - 55) * (n - 56) * (n - 57) * (n - 58) * (n - 59) * (n - 60) * (n - 61) * (n - 62) * (n - 63) * (n - 64) * (n - 65) * (n - 66) * (n - 67) * (n - 68) * (n - 69) * (n - 70) * (n - 71) * (n - 72) * (n - 73) * (n - 74) * (n - 75) * (n - 76) * (n - 77) * (n - 78) * (n - 79) * (n - 80) * (n - 81) * (n - 82) * (n - 83) * (n - 84) * (n - 85"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}