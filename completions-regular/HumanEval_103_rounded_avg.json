{"name": "HumanEval_103_rounded_avg", "language": "py", "prompt": "from typing import Union\n\ndef rounded_avg(n: int, m: int) -> Union[str, int]:\n    \"\"\"You are given two positive integers n and m, and your task is to compute the\n    average of the integers from n through m (including n and m). \n    Round the answer to the nearest integer and convert that to binary.\n    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1, 5)\n    '0b11'\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10, 20)\n    '0b1111'\n    >>> rounded_avg(20, 33)\n    '0b11010'\n    \"\"\"\n", "tests": "def check(candidate):\n    assert candidate(1, 5) == '0b11'\n    assert candidate(7, 13) == '0b1010'\n    assert candidate(964, 977) == '0b1111001010'\n    assert candidate(996, 997) == '0b1111100100'\n    assert candidate(560, 851) == '0b1011000010'\n    assert candidate(185, 546) == '0b101101110'\n    assert candidate(362, 496) == '0b110101101'\n    assert candidate(350, 902) == '0b1001110010'\n    assert candidate(197, 233) == '0b11010111'\n    assert candidate(7, 5) == -1\n    assert candidate(5, 1) == -1\n    assert candidate(5, 5) == '0b101'\n\ndef test_check():\n    check(rounded_avg)\n\ntest_check()\n", "completions": ["    if n < m:\n        return '0b' + str(n)\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + 'b' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / (m + 1), 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / (m - n), 2)) + str(round(n % (m - n), 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1'\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return '0b' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    if n == m - 1:\n        return '0b' + str(n)\n    if n == m:\n        return str(n)\n    if n > m:\n        return '-1'\n    if n == m - 1:\n        return '0b' + str(n)\n    if n == m - 2:\n        return '0b' + str(n)\n    if n == m - 3:\n        return '0b' + str(n)\n    if n == m - 4:\n        return '0b' + str(n)\n    if n == m - 5:\n        return '0b' + str(n)\n    if n == m - 6:\n        return '0b' + str(n)\n    if n == m - 7:\n        return '0b' + str(n)\n    if n == m - 8:\n        return '0b' + str(n)\n    if n == m - 9:\n        return '0b' + str(n)\n    if n == m - 10:\n        return '0b' + str(n)\n    if n == m - 11:\n        return '0b' + str(n)\n    if n == m - 12:\n        return '0b' + str(n)\n    if n == m - 13:\n        return '0b' + str(n)\n    if n == m - 14:\n        return '0b' + str(n)\n    if n == m - 15:\n        return '0b' + str(n)\n    if n == m - 16:\n        return '0b' + str(n)\n    if n == m - 17:\n        return '0b' + str(n)\n    if n == m - 18:\n        return '0b' + str(n)\n    if n == m - 19:\n        return '0b' + str(n)\n    if n == m - 20:\n        return '0b' + str(n)\n    if n == m - 21:\n        return '0b'", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / (m + 1), 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n == m - 1:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1'\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    elif n > m:\n        return -1\n    else:\n        return rounded_avg(n - 1, m) + rounded_avg(m - 1, n)\n", "    if n < m:\n        return '0b' + str(n)\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + 'b' + str(m)\n", "    if n < m:\n        return '0b' + str(n)\n    else:\n        return '0b' + str(m) + str(n)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return str(n) + ' ' + str(m) + ' ' + str(round(n / m, 2))\n", "    if n < m:\n        return '0b' + str(n)\n    else:\n        return '0b' + str(m) + str(n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + '-' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return n // m + 1\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / (m - n), 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / (m + 1), 2))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return int(round(n / (m - n)))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(round(n / (m - n), 2)) + str(round(n % (m - n), 2))\n", "    if n == 0:\n        return '0b0'\n    if m == 0:\n        return '0b0'\n    if n == m:\n        return '0b0'\n    if n > m:\n        return '0b0'\n    if n < m:\n        return '0b1'\n    return '0b' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(n) + str(m)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return '0b1' + str(round(n / (m - n), 2))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return rounded_avg(n - 1, m) + rounded_avg(m - 1, n)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    if n > m:\n        return '-1'\n    return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    if n > m:\n        return '-1'\n    return str(n) + '-' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / (m + 1), 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / (m + 1), 2))\n", "    if n < m:\n        return '0b' + str(n)\n    else:\n        return '0b' + str(m) + 'b' + str(n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return str(n) + '-' + str(m)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    if n < m:\n        return rounded_avg(n, m - 1)\n    return rounded_avg(n, m)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    if n > m:\n        return '-1'\n    return str(n) + '-' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1'\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '0b' + str(n)\n    else:\n        return '0b' + str(m) + str(n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(n) + ' ' + str(m) + ' ' + str(rounded_avg(n, m))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    elif n == m - 1:\n        return rounded_avg(n - 1, m)\n    else:\n        return rounded_avg(n - 1, m - 1) + rounded_avg(n - 1, m)\n", "    if n < m:\n        return '0b' + str(n)\n    else:\n        return '0b' + str(m) + str(n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / m, 2))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    elif n > m:\n        return -1\n    else:\n        return n // m\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1'\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(n) + ' ' + str(m) + ' ' + str(rounded_avg(n, m))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(round(n / (m - n), 2))\n", "    if n == 0 or m == 0:\n        return '0b0'\n    if n == m:\n        return '0b0'\n    if n > m:\n        return '0b' + str(round(n / m, 2))\n    else:\n        return '0b' + str(round(m / n, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + '-' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '0b' + str(n)\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + 'b' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b1' + str(n) + str(m)\n", "    if n < m:\n        return '0b' + str(n)\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / m, 2))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return n // m\n", "    if n < m:\n        return '0b' + str(n) + str(m)\n    else:\n        return '0b' + str(m) + str(n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1'\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / m, 2))\n", "    if n == 0 or m == 0:\n        return '0b0'\n    if n < m:\n        return '0b' + str(n) + 'b'\n    else:\n        return '0b' + str(m) + 'b' + str(n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(n) + ' ' + str(m) + ' ' + str(n - m) + ' ' + str(m - n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1'\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    elif n > m:\n        return -1\n    else:\n        return int(round(n / (m + 1)))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    elif n > m:\n        return -1\n    else:\n        return rounded_avg(n - 1, m) + rounded_avg(m - 1, n)\n", "    if n < m:\n        return '0b' + str(n)\n    else:\n        return '0b' + str(m) + str(n)\n", "    if n < m:\n        return '0b' + str(n)\n    else:\n        return '0b' + str(m) + str(n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b1' + str(n) + str(m)\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return n // m + 1\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return str(round(n / m, 2))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return n // m + 1\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n == m - 1:\n        return '0b1'\n    elif n == m - 2:\n        return '0b11'\n    elif n == m - 3:\n        return '0b11'\n    elif n == m - 4:\n        return '0b11'\n    elif n == m - 5:\n        return '0b11'\n    elif n == m - 6:\n        return '0b11'\n    elif n == m - 7:\n        return '0b11'\n    elif n == m - 8:\n        return '0b11'\n    elif n == m - 9:\n        return '0b11'\n    elif n == m - 10:\n        return '0b11'\n    elif n == m - 11:\n        return '0b11'\n    elif n == m - 12:\n        return '0b11'\n    elif n == m - 13:\n        return '0b11'\n    elif n == m - 14:\n        return '0b11'\n    elif n == m - 15:\n        return '0b11'\n    elif n == m - 16:\n        return '0b11'\n    elif n == m - 17:\n        return '0b11'\n    elif n == m - 18:\n        return '0b11'\n    elif n == m - 19:\n        return '0b11'\n    elif n == m - 20:\n        return '0b11'\n    elif n == m - 21:\n        return '0b11'\n    elif n == m - 22:\n        return '0b11'\n    elif n == m - 23:\n        return '0b11'\n    elif n == m - 24:\n        return '0b11'\n    elif n == m - 25:\n        return '0b11'\n    elif n == m - 26:\n        return '0b11'\n    elif n == m - 27:\n        return '0", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / (m - n), 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(n) + ' ' + str(m) + ' ' + str(rounded_avg(n, m))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(n) + str(m)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    if n > m:\n        return '-1'\n    return str(n) + '-' + str(m)\n", "    if n < m:\n        return '0b' + str(n)\n    else:\n        return str(n) + 'b' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(n) + 'b' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(n) + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / (m - n), 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + '-' + str(m)\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return n // m + 1\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / (m + 1), 2))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    elif n > m:\n        return -1\n    else:\n        return n // m\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n == m - 1:\n        return '0b1'\n    elif n == m - 2:\n        return '0b11'\n    elif n == m - 3:\n        return '0b111'\n    elif n == m - 4:\n        return '0b1111'\n    elif n == m - 5:\n        return '0b111110'\n    elif n == m - 6:\n        return '0b111111'\n    elif n == m - 7:\n        return '0b1111111'\n    elif n == m - 8:\n        return '0b11111111'\n    elif n == m - 9:\n        return '0b1111111110'\n    elif n == m - 10:\n        return '0b1111111111'\n    elif n == m - 11:\n        return '0b11111111111'\n    elif n == m - 12:\n        return '0b111111111111'\n    elif n == m - 13:\n        return '0b11111111111110'\n    elif n == m - 14:\n        return '0b11111111111111'\n    elif n == m - 15:\n        return '0b111111111111111'\n    elif n == m - 16:\n        return '0b1111111111111111'\n    elif n == m - 17:\n        return '0b111111111111111110'\n    elif n == m - 18:\n        return '0b111111111111111111'\n    elif n == m - 19:\n        return '0b1111111111111111111'\n    elif n == m - 20:\n        return '0b11111111111111111111'\n    elif n == m - 21:\n        return '0b1111111111111111111110'\n    elif n == m - 22:\n        return '0b1111111111111111111111'\n    elif n == m - 23:\n        return '0b11111111111111111111111'\n    elif n == m - 24:\n        return '", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return rounded_avg(n - 1, m) + rounded_avg(n - m, m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '0b' + str(n)\n    else:\n        return str(n) + 'b' + str(m)\n", "    if n == 0 or m == 0:\n        return '0b0'\n    if n == m:\n        return '0b0'\n    if n > m:\n        return '0b' + str(n) + 'b'\n    if n < m:\n        return '0b' + str(m) + 'b'\n    return '0b' + str(n) + 'b' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(n) + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return '0b' + str(round(n / (m - n), 2)) + str(round(m / (n - m), 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n == 0:\n        return '0b'\n    if m == 0:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n < m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n < m:\n        return '0b'\n    return '0b'\n<|endoftext|if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n == m - 1:\n        return '0b1'\n    elif n == m - 2:\n        return '0b11'\n    elif n == m - 3:\n        return '0b1110'\n    elif n == m - 4:\n        return '0b11001'\n    elif n == m - 5:\n        return '0b110001'\n    elif n == m - 6:\n        return '0b1100110'\n    elif n == m - 7:\n        return '0b1100101'\n    elif n == m - 8:\n        return '0b11001011'\n    elif n == m - 9:\n        return '0b11001010'\n    elif n == m - 10:\n        return '0b1100101110'\n    elif n == m - 11:\n        return '0b11001010110'\n    elif n == m - 12:\n        return '0b11001010111'\n    elif n == m - 13:\n        return '0b1100101011110'\n    elif n == m - 14:\n        return '0b11001010111001'\n    elif n == m - 15:\n        return '0b1100101011100110'\n    elif n == m - 16:\n        return '0b1100101011100101'\n    elif n == m - 17:\n        return '0b110010101110010110'\n    elif n == m - 18:\n        return '0b110010101110010101'\n    elif n == m - 19:\n        return '0b11001010111001010110'\n    elif n == m - 20:\n        return '0b11001010111001010101'\n    elif n == m - 21:\n        return '0b1100101011100101010110'\n    elif n == m - 22:\n        return '0b11001010111001", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return str(n) + ' ' + str(m) + ' ' + str(rounded_avg(n, m))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / (m - n), 2))\n", "    if n == m:\n        return str(n)\n    elif n < m:\n        return '-1'\n    else:\n        return str(n) + '-' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return str(int(round(n / m)))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(n) + ' ' + str(m) + ' ' + str(rounded_avg(n - 1, m))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    if n > m:\n        return '-1'\n    return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return str(round(n / m, 2)) + 'b' + str(round(m / n, 2))\n", "    if n == 0 or m == 0:\n        return -1\n    if n == m:\n        return n\n    if n > m:\n        return rounded_avg(n - 1, m)\n    else:\n        return rounded_avg(n, m - 1)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return str(n) + ' ' + str(m) + ' ' + str(rounded_avg(n - 1, m))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return rounded_avg(n - 1, m) + rounded_avg(m - 1, n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '0b' + str(n)\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + 'b' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + '-' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / (m + 1), 2))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return rounded_avg(n - 1, m) + rounded_avg(m - 1, n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b1' + str(round(n / m, 2))\n", "    if n < m:\n        return '0b' + str(n)\n    else:\n        return '0b' + str(m) + str(n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + '-' + str(m)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    if n > m:\n        return '-1'\n    return str(round(n / (m + 1), 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return str(n) + ' ' + str(m) + ' ' + str(n - m) + ' ' + str(m - n)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return '0b1' + str(n) + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '0b' + str(n)\n    else:\n        return '0b' + str(m) + str(n)\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return int(round(n / m))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(n) + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return str(n) + ' ' + str(m) + ' ' + str(n - m) + ' ' + str(m - n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / (m - n), 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    if n == 0:\n        return '0b0'\n    if n == 1:\n        return '0b1'\n    if n == m:\n        return '0b1'\n    if n == m - 1:\n        return '0b1'\n    if n == m + 1:\n        return '0b1'\n    if n > m:\n        return '-1'\n    if n > m - 1:\n        return '-1'\n    if n > m + 1:\n        return '-1'\n    if n > m - 1:\n        return '-1'\n    if n > m + 1:\n        return '-1'\n    if n > m - 1:\n        return '-1'\n    if n > m + 1:\n        return '-1'\n    if n > m - 1:\n        return '-1'\n    if n > m + 1:\n        return '-1'\n    if n > m - 1:\n        return '-1'\n    if n > m + 1:\n        return '-1'\n    if n > m - 1:\n        return '-1'\n    if n > m + 1:\n        return '-1'\n    if n > m - 1:\n        return '-1'\n    if n > m + 1:\n        return '-1'\n    if n > m - 1:\n        return '-1'\n    if n > m + 1:\n        return '-1'\n    if n > m - 1:\n        return '-1'\n    if n > m + 1:\n        return '-1'\n    if n > m - 1:\n        return '-1'\n    if n > m + 1:\n        return '-1'\n    if n > m - 1:\n        return '-1'\n    if n > m + 1:\n        return '-1'\n    if n > m - 1:\n        return '-1'\n    if n > m + 1:\n        return '-1'\n    if n > m - 1", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + '-' + str(m)\n", "    if n == 0 or m == 0:\n        return '0'\n    if n > m:\n        return '-1'\n    if n == m:\n        return '0'\n    return '{}'.format(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    elif n > m:\n        return '-1'\n    else:\n        return str(n) + '-' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '0b' + str(n)\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + 'b' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '0b' + str(n)\n    else:\n        return '0b' + str(m) + str(n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + '-' + str(m)\n", "    if n < m:\n        return '0b' + str(n) + str(m)\n    else:\n        return '0b' + str(n) + str(m) + str(m - n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    elif n == 0:\n        return '0b0'\n    elif m == 0:\n        return '0b0'\n    elif n == m:\n        return str(n)\n    elif n % 2 == 0:\n        return str(n) + 'b'\n    elif n % 2 == 1:\n        return str(n) + 'b'\n    else:\n        return str(n) + 'b' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '0b' + str(n)\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / (m - n), 2))\n", "    if n == 0 or m == 0:\n        return '0b0'\n    if n == m:\n        return '0b0'\n    if n > m:\n        return '-1'\n    if n < m:\n        return '0b0'\n    return '0b' + str(round(n / m, 2))\n<|endoftext|if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + '-' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(n) + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return str(round(n / (m + 1), 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return str(round(n / (m + 1), 2)) + 'b' + str(round(m / (n + 1), 2))\n", "    if n == 0 or m == 0:\n        return '0b0'\n    if n == m:\n        return '0b0'\n    if n > m:\n        return '0b' + str(n) + 'b'\n    if n < m:\n        return '0b' + str(m) + 'b'\n    return '0b' + str(n) + 'b' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / (m + 1), 2)) + str(round(n % (m + 1), 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    if n > m:\n        return '-1'\n    return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return str(round(n / m, 2))\n", "    if n == 0:\n        return '0b0'\n    if m == 0:\n        return '0b0'\n    if n < m:\n        return '0b0'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '0b1'\n    return '0b' + str(round(n / m, 2)) + str(round(m / n, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + ' ' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(round(n / (m - n), 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return '0b' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return str(n) + ' ' + str(m) + ' ' + str(n - m) + ' ' + str(m - n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b11'\n    if n > m:\n        return '-1'\n    return '0b' + str(round(n / m, 2))\n", "    if n == 0 or m == 0:\n        return ''\n    if n < m:\n        return '0b' + str(n) + 'b' + str(m)\n    else:\n        return '0b' + str(m) + 'b' + str(n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(round(n / (m + 1), 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return '0b' + str(round(n / (n - m), 2)) + str(round(m / (n - m), 2))\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return n // m + 1\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return rounded_avg(n - 1, m) + rounded_avg(n, m - 1)\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return '0b1'\n    if n > m:\n        return '-1'\n    return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / (m - n), 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    if n == 0:\n        return '0b0'\n    if n == 1:\n        return '0b1'\n    if n == m:\n        return '0b1'\n    if n == m - 1:\n        return '0b1'\n    if n == m + 1:\n        return '0b1'\n    if n == m - n:\n        return '0b1'\n    if n == m - n - 1:\n        return '0b1'\n    if n == m - n - 2:\n        return '0b1'\n    if n == m - n - 3:\n        return '0b1'\n    if n == m - n - 4:\n        return '0b1'\n    if n == m - n - 5:\n        return '0b1'\n    if n == m - n - 6:\n        return '0b1'\n    if n == m - n - 7:\n        return '0b1'\n    if n == m - n - 8:\n        return '0b1'\n    if n == m - n - 9:\n        return '0b1'\n    if n == m - n - 10:\n        return '0b1'\n    if n == m - n - 11:\n        return '0b1'\n    if n == m - n - 12:\n        return '0b1'\n    if n == m - n - 13:\n        return '0b1'\n    if n == m - n - 14:\n        return '0b1'\n    if n == m - n - 15:\n        return '0b1'\n    if n == m - n - 16:\n        return '0b1'\n    if n == m - n - 17:\n        return '0b1'\n    if n == m - n - 18:\n        return '0b1'\n    if n == m - n - 19:\n        return '0b1'\n    if n == m - n - 20:\n        return '0b1'\n    if n == m - n -", "    if n == 0:\n        return '0b'\n    if m == 0:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        return '0b'\n    if n == m:\n        return '0b'\n    if n > m:\n        ", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    if n == m:\n        return str(n)\n    if n > m:\n        return '-1'\n    return str(n) + '-' + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + '-' + str(m)\n", "    if n < m:\n        return -1\n    elif n == m:\n        return n\n    else:\n        return rounded_avg(n - m, m) + rounded_avg(m - n, n)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    elif n > m:\n        return '-1'\n    else:\n        return '0b1' + str(n) + str(m)\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return str(n)\n    else:\n        return str(n) + '-' + str(m)\n", "    if n == 0 or m == 0:\n        return '0'\n    if n > m:\n        return '-1'\n    if n == m:\n        return '0'\n    return str(round(n / m, 2))\n", "    if n < m:\n        return '-1'\n    elif n == m:\n        return '0b1'\n    else:\n        return '0b' + str(round(n / m, 2))\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}