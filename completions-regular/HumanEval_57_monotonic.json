{"name": "HumanEval_57_monotonic", "language": "py", "prompt": "from typing import List\n\ndef monotonic(l: List[int]) -> bool:\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n", "tests": "def check(candidate):\n    assert candidate([1, 2, 4, 10]) == True\n    assert candidate([1, 2, 4, 20]) == True\n    assert candidate([1, 20, 4, 10]) == False\n    assert candidate([4, 1, 0, -10]) == True\n    assert candidate([4, 1, 1, 0]) == True\n    assert candidate([1, 2, 3, 2, 5, 60]) == False\n    assert candidate([1, 2, 3, 4, 5, 60]) == True\n    assert candidate([9, 9, 9, 9]) == True\n\ndef test_check():\n    check(monotonic)\n\ntest_check()\n", "completions": ["    if not l:\n        return True\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) and monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return True\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return True\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) and monotonic(l[-1:])\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[-1]\n    if len(l) == 2:\n        return monotonic(l[:-1]) and monotonic(l[1:])\n    return monotonic(l[:-1]) and monotonic(l[1:])\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) and monotonic(l[1:])\n", "    if not l:\n        return True\n    if l[0] > l[-1]:\n        return False\n    return True\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic_increasing(l)\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) and monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if l[0] > l[-1]:\n        return False\n    return True\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[-1]\n    if len(l) == 2:\n        return l[0] > l[1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] > l[i - 1] for i in range(len(l) - 1))\n", "    if not l:\n        return True\n    if l[0] > l[-1]:\n        return False\n    return True\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) and monotonic(l[1:])\n", "    if not l:\n        return True\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic(l[:-1]) and monotonic(l[1:])\n", "    return all(l[i] < l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i+1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] > l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic_increasing(l) or monotonic_decreasing(l)\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[0]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    return all(monotonic(i) for i in l)\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return False\n    if len(l) == 2:\n        return monotonic(l[1:])\n    if len(l) == 3:\n        return monotonic(l[1:])\n    if len(l) == 4:\n        return monotonic(l[1:])\n    return False\n", "    if not l:\n        return False\n    if not l:\n        return True\n    if l[0] > l[-1]:\n        return False\n    return True\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] < l[i+1] for i in range(len(l)-1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i+1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n", "    return all(l[i] <= l[i+1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[-1]\n    if len(l) == 2:\n        return monotonic(l[:-1]) and monotonic(l[1:])\n    if len(l) == 3:\n        return monotonic(l[:-1]) and monotonic(l[1:]) and monotonic(l[2:])\n    return False\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic(l[:-1]) and monotonic(l[1:])\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] > l[-1]\n    if len(l) == 2:\n        return l[0] > l[1]\n    if len(l) == 3:\n        return l[0] > l[1] > l[2]\n    return False\n", "    if not l:\n        return True\n    if l[0] > l[-1]:\n        return False\n    return True\n", "    return all(l[i] <= l[i+1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic(l[:-1]) or monotonic(l[-1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] > l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return True\n    if l[0] == l[-1]:\n        return False\n    return monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return True\n    if l[0] > l[-1]:\n        return False\n    return True\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] < l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] > l[i - 1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic(l[:-1]) or monotonic(l[-1:])\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic_increasing(l) or monotonic_decreasing(l)\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return True\n    if l[0] > l[-1]:\n        return False\n    return True\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i+1] for i in range(len(l) - 1))\n", "    return all(l[i] > l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return True\n    if l[0] > l[-1]:\n        return False\n    return True\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic_subset(l, 0, len(l) - 1)\n", "    if not l:\n        return True\n    if len(l) == 1:\n        return l[0] < l[0]\n    return monotonic(l[:-1]) and monotonic(l[1:])\n", "    if not l:\n        return True\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    if not l:\n        return True\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) and monotonic(l[-1:])\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] == l[-1]\n    if len(l) == 2:\n        return l[0] > l[1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return True\n    if not l:\n        return False\n    if l[0] > l[-1]:\n        return False\n    return True\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[0]\n    return monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n", "    if not l:\n        return True\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) and monotonic(l[-1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if not l:\n        return True\n    return monotonic(l[0]) or monotonic(l[-1])\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] > l[-1]\n    if len(l) == 2:\n        return l[0] > l[1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return True\n    if l[0] > l[-1]:\n        return False\n    return True\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    if not l:\n        return False\n    if not l[0]:\n        return True\n    return monotonic(l[1:])\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] > l[-1]\n    if len(l) == 2:\n        return l[0] > l[1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return True\n    if l[0] > l[-1]:\n        return False\n    return monotonic(l[1:])\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] > l[-1]\n    if len(l) == 2:\n        return l[0] > l[1]\n    if len(l) == 3:\n        return l[0] > l[1] > l[2]\n    return False\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] > l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) and monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic(l[:-1]) and monotonic(l[-1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic_increasing(l)\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic(l[:-1]) or monotonic(l[-1:])\n", "    if not l:\n        return True\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic(l[:-1]) and monotonic(l[1:])\n", "    return all(l[i] <= l[i+1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if not l:\n        return True\n    if l[0] > l[-1]:\n        return False\n    return True\n", "    return all(l[i] <= l[i+1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic(l[:-1]) or monotonic(l[-1:])\n", "    return all(l[i] > l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    return all(monotonic(l[i] - l[i - 1]) for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[-1]\n    if len(l) == 2:\n        return l[0] > l[1]\n    if len(l) == 3:\n        return l[0] > l[1] > l[2]\n    return False\n", "    return all(l[i] < l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[0]\n    else:\n        return monotonic(l[:-1]) and monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return True\n    if not l:\n        return False\n    if l[0] > l[-1]:\n        return False\n    return True\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[-1]\n    return monotonic(l[:-1]) or monotonic(l[-1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    if len(l) == 2:\n        return l[0] <= l[1]\n    if len(l) == 3:\n        return l[0] <= l[1] <= l[2]\n    return False\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i+1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] > l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic_increasing(l)\n", "    return all(l[i] < l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic(l[:-1]) and monotonic(l[-1:])\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] < l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    if len(l) == 2:\n        return l[0] <= l[1]\n    if len(l) == 3:\n        return l[0] <= l[1] and l[1] <= l[2]\n    if len(l) == 4:\n        return l[0] <= l[1] and l[1] <= l[2] and l[2] <= l[3]\n    return False\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    return all(l[i] <= l[i + 1] for i in range(len(l) - 1))\n", "    return all(l[i] <= l[i+1] for i in range(len(l) - 1))\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return l[0] <= l[-1]\n    return monotonic(l[:-1]) or monotonic(l[1:])\n", "    if not l:\n        return False\n    if len(l) == 1:\n        return True\n    if l[0] > l[-1]:\n        return False\n    return True\n"], "stop_tokens": ["\ndef", "\n#", "\nif", "\nclass"]}