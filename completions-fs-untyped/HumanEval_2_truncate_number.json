{"name": "HumanEval_2_truncate_number", "language": "fs", "prompt": "//Given a positive floating point number, it can be decomposed into\n// and integer part (largest integer smaller than given number) and decimals\n// (leftover part always smaller than 1).\n// Return the decimal part of the number.\n// >>> truncate_number(3.5)\n// 0.5\nlet truncate_number number = \n", "tests": "let test() = \n  let candidate = truncate_number\n  assert (candidate 3.5 = 0.5)\n  assert (candidate 1.25 = 0.25)\n  assert (candidate 123.0 = 0.0)\n  0\n\ntest()", "completions": ["    let truncate_number_part =\n        function\n        | 0.0 -> 0.0\n        | x -> x\n    let truncate_number_decimal =\n        function\n        | x when x < 0.0 -> -x\n        | x when x > 0.0 -> x\n        | _ -> 0.0\n    let truncate_number_decimal_part =\n        function\n        | x when x < 0.0 -> -x\n        | x when x > 0.0 -> x\n        | _ -> 0.0\n    let truncate_number_decimal_part_decimal =\n        function\n        | x when x < 0.0 -> -x\n        | x when x > 0.0 -> x\n        | _ -> 0.0\n    let truncate_number_decimal_part_decimal_part =\n        function\n        | x when x < 0.0 -> -x\n        | x when x > 0.0 -> x\n        | _ -> 0.0\n    let truncate_number_decimal_part_decimal_part_decimal =\n        function\n        | x when x < 0.0 -> -x\n        | x when x > 0.0 -> x\n        | _ -> 0.0\n    let truncate_number_decimal_part_decimal_part_decimal_part =\n        function\n        | x when x < 0.0 -> -x\n        | x when x > 0.0 -> x\n        | _ -> 0.0\n    let truncate_number_decimal_part_decimal_part_decimal_part =\n        function\n        | x when x < 0.0 -> -x\n        | x when x > 0.0 -> x\n        | _ -> 0.0\n    let truncate_number_decimal_part_decimal_part_decimal_part_decimal =\n        function\n        | x when x < 0.0 -> -x\n        | x when x > 0.0 -> x\n        | _ -> 0.0\n    let truncate_number_decimal_part_decimal_part_decimal_part_decimal_part =\n        function\n        | x when x < 0.0 -> -x\n", "    let truncate_number_part = \n        let truncate_number_part_decimal = \n            let truncate_number_part_decimal = \n                let truncate_number_part_decimal = \n                    let truncate_number_part_decimal = \n                        let truncate_number_part_decimal = \n                            let truncate_number_part_decimal = \n                                let truncate_number_part_decimal = \n                                    let truncate_number_part_decimal = \n                                        let truncate_number_part_decimal = \n                                            let truncate_number_part_decimal = \n                                                let truncate_number_part_decimal = \n                                                    let truncate_number_part_decimal = \n                                                        let truncate_number_part_decimal = \n                                                            let truncate_number_part_decimal = \n                                                                let truncate_number_part_decimal = \n                                                                    let truncate_number_part_decimal = \n                                                                        let truncate_number_part_decimal = \n                                                                            let truncate_number_part_decimal = \n                                                                                let truncate_number_part_decimal = \n                                                                                    let truncate_number_part_decimal = \n                                                                                        let truncate_number_part_decimal = \n                                                                                            let truncate_number_part_decimal = \n                                                                                               let truncate_number_part_decimal = \n                                                                                                   let truncate_number_part_decimal = \n                                                                                                       let truncate_number_part_decimal = \n                                                                                                           let truncate_number_part_decimal = \n                                                                                                               let truncate_number_part_decimal = \n                                                                                                                   let truncate_number_part_decimal = \n                                                                                                                       let truncate_number_part_decimal = \n                                                                                                                           let truncate_number_part_decimal = \n                                                                                                                              let truncate_number_part_decimal = \n                                                                                                                                  let truncate_number_part_decimal =", "    let truncate_number_to_decimal number = \n        let truncate_number_to_decimal_to_int number = \n            let truncate_number_to_decimal_to_int_to_decimal number = \n                let truncate_number_to_decimal_to_int_to_decimal_to_int number = \n                    let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal number = \n                        let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int number = \n                            let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int number = \n                                let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int number = \n                                    let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int number = \n                                        let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int number = \n                                            let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int number = \n                                                let truncate_number_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_int_to_decimal_to_", "    let truncate_number_decimal (decimal_part:decimal) = \n        let truncate_number_decimal_int (decimal_part:decimal) = \n            let truncate_number_decimal_int_int (decimal_part:decimal) = \n                let truncate_number_decimal_int_int_int (decimal_part:decimal) = \n                    let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                        let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                            let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                                let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                                    let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                                        let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                                            let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                                                let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                                                    let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                                                        let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                                                            let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                                                                let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                                                                    let truncate_number_decimal_int_int_int_int (decimal_part:decimal) = \n                                                                        let truncate_number_decimal_int_int_int_int (decimal_part:decimal)", "    let truncate_number_part (number:decimal) =\n        let truncate_number_decimal (number:decimal) =\n            let truncate_number_decimal_part (number:decimal) =\n                let truncate_number_decimal_part_part (number:decimal) =\n                    let truncate_number_decimal_part_part_part (number:decimal) =\n                        let truncate_number_decimal_part_part_part_part (number:decimal) =\n                            let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                    let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                        let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                            let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                                let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                                    let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                                        let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                                            let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                                                let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                                                    let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                                                        let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                                                            let truncate_number_decimal_part_part_part_part_part (number:decimal) =\n                                                                                let truncate_number_decimal_part_part_part_part_part (number:dec", "    let truncate_number_part (number:decimal) =\n        let truncate_number_part_decimal (number:decimal) =\n            let truncate_number_part_decimal_part (number:decimal) =\n                let truncate_number_part_decimal_part_decimal (number:decimal) =\n                    let truncate_number_part_decimal_part_decimal_part (number:decimal) =\n                        let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                            let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                                let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                                    let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                                        let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                                            let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                                                let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                                                    let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                                                        let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                                                            let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                                                                let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                                                                    let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                                                                        let truncate_number_part_decimal_part_decimal_part_decimal (number:decimal) =\n                                                                            let truncate_number_part_decimal_part_", "    let rec truncate_number_decimal_part number =\n        match number with\n        | 0.0 -> 0.0\n        | x when x > 0.0 -> x\n        | x when x < 0.0 -> -x\n        | x -> truncate_number_decimal_part (x - 1.0)\n    truncate_number_decimal_part number", "    let rec truncate_number_rec acc number =\n        match number with\n        | 0.0 -> acc\n        | x -> truncate_number_rec (acc * 10.0) x\n    truncate_number_rec 0.0 number", "    let truncate_number_decimal (decimal_part:decimal) =\n        let truncate_number_integer (integer_part:int) =\n            let truncate_number_decimal_integer (decimal_part:decimal) =\n                let truncate_number_decimal_integer_part (integer_part:int) =\n                    let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                        let truncate_number_decimal_integer_part (integer_part:int) =\n                            let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                    let truncate_number_decimal_integer_part (integer_part:int) =\n                                        let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                            let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                                let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                                    let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                                        let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                                            let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                                                let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                                                    let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                                                        let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                                                            let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                                                                let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                                                                    let truncate_number_decimal_integer_part (decimal_part:decimal) =\n                                                                                        let truncate_number", "    let rec truncate_number_decimal number =\n        let truncated_number = number / 10.0\n        if truncated_number <> 0.0 then\n            truncate_number_decimal truncated_number\n        else\n            truncated_number\n    truncate_number_decimal number", "    let truncate_number_part = \n        let truncate_number_part_decimal = \n            let truncate_number_part_decimal_decimal = \n                let truncate_number_part_decimal_decimal_decimal = \n                    let truncate_number_part_decimal_decimal_decimal_decimal = \n                        let truncate_number_part_decimal_decimal_decimal_decimal_decimal = \n                            let truncate_number_part_decimal_decimal_decimal_decimal_decimal_decimal = \n                                let truncate_number_part_decimal_decimal_decimal_decimal_decimal_decimal_decimal = \n                                    let truncate_number_part_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal = \n                                        let truncate_number_part_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal = \n                                            let truncate_number_part_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal = \n                                                let truncate_number_part_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal = \n                                                    let truncate_number_part_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal = \n                                                        let truncate_number_part_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal = \n                                                            let truncate_number_part_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_", "    let truncate_number_decimal =\n        let truncate_number_decimal_int =\n            let truncate_number_decimal_int_int =\n                let truncate_number_decimal_int_int_int =\n                    let truncate_number_decimal_int_int_int =\n                        let truncate_number_decimal_int_int_int =\n                            let truncate_number_decimal_int_int_int =\n                                let truncate_number_decimal_int_int_int =\n                                    let truncate_number_decimal_int_int_int =\n                                        let truncate_number_decimal_int_int_int =\n                                            let truncate_number_decimal_int_int_int =\n                                                let truncate_number_decimal_int_int_int =\n                                                    let truncate_number_decimal_int_int_int =\n                                                        let truncate_number_decimal_int_int_int =\n                                                            let truncate_number_decimal_int_int_int =\n                                                                let truncate_number_decimal_int_int_int =\n                                                                    let truncate_number_decimal_int_int_int =\n                                                                        let truncate_number_decimal_int_int_int =\n                                                                            let truncate_number_decimal_int_int_int =\n                                                                                let truncate_number_decimal_int_int_int =\n                                                                                    let truncate_number_decimal_int_int_int =\n                                                                                        let truncate_number_decimal_int_int_int =\n                                                                                            let truncate_number_decimal_int_int_int =\n                                                                                                   let truncate_number_decimal_int_int_int =\n                                                                                                       let truncate_number_decimal_int_int_int =\n                                                                                                           let truncate_number_decimal_int_int_int =\n                                                                                                               let truncate_number_decimal_int_int_int =\n                                                                                                                   let truncate_number_decimal_int_int_int =\n                                                                                                                       let truncate_number_", "    let rec truncate_number_decimal (decimal_part:decimal) =\n        match decimal_part with\n        | 0.0 -> decimal_part\n        | x -> truncate_number_decimal (x - 1.0)\n    truncate_number_decimal number", "    let truncate_number_decimal (number:decimal) =\n        let truncate_number_decimal_int (number:int) =\n            let truncate_number_decimal_int_int (number:int) =\n                let truncate_number_decimal_int_int_int (number:int) =\n                    let truncate_number_decimal_int_int_int (number:int) =\n                        let truncate_number_decimal_int_int_int (number:int) =\n                            let truncate_number_decimal_int_int_int (number:int) =\n                                let truncate_number_decimal_int_int_int (number:int) =\n                                    let truncate_number_decimal_int_int_int (number:int) =\n                                        let truncate_number_decimal_int_int_int (number:int) =\n                                            let truncate_number_decimal_int_int_int (number:int) =\n                                                let truncate_number_decimal_int_int_int (number:int) =\n                                                    let truncate_number_decimal_int_int_int (number:int) =\n                                                        let truncate_number_decimal_int_int_int (number:int) =\n                                                            let truncate_number_decimal_int_int_int (number:int) =\n                                                                let truncate_number_decimal_int_int_int (number:int) =\n                                                                    let truncate_number_decimal_int_int_int (number:int) =\n                                                                        let truncate_number_decimal_int_int_int (number:int) =\n                                                                            let truncate_number_decimal_int_int_int (number:int) =\n                                                                                let truncate_number_decimal_int_int_int (number:int) =\n                                                                                    let truncate_number_decimal_int_int_int (number:int) =\n                                                                                        let truncate_number_decimal_int_int_int (number:int) =\n                                                                                            let truncate_number_decimal_int_int_int (", "    let truncate_number_part = \n        let truncate_number_part_decimal = \n            let truncate_number_part_decimal = \n                let truncate_number_part_decimal = \n                    let truncate_number_part_decimal = \n                        let truncate_number_part_decimal = \n                            let truncate_number_part_decimal = \n                                let truncate_number_part_decimal = \n                                    let truncate_number_part_decimal = \n                                        let truncate_number_part_decimal = \n                                            let truncate_number_part_decimal = \n                                                let truncate_number_part_decimal = \n                                                    let truncate_number_part_decimal = \n                                                        let truncate_number_part_decimal = \n                                                            let truncate_number_part_decimal = \n                                                                let truncate_number_part_decimal = \n                                                                    let truncate_number_part_decimal = \n                                                                        let truncate_number_part_decimal = \n                                                                            let truncate_number_part_decimal = \n                                                                                let truncate_number_part_decimal = \n                                                                                    let truncate_number_part_decimal = \n                                                                                        let truncate_number_part_decimal = \n                                                                                            let truncate_number_part_decimal = \n                                                                                               let truncate_number_part_decimal = \n                                                                                                   let truncate_number_part_decimal = \n                                                                                                       let truncate_number_part_decimal = \n                                                                                                           let truncate_number_part_decimal = \n                                                                                                               let truncate_number_part_decimal = \n                                                                                                                   let truncate_number_part_decimal = \n                                                                                                                       let truncate_number_part_decimal = \n                                                                                                                           let truncate_number_part_decimal = \n                                                                                                                              let truncate_number_part_decimal = \n                                                                                                                                  let truncate_number_part_decimal =", "    let rec truncate_number_decimal (decimal_part:decimal) (number:decimal) = \n        let truncated_number = number - decimal_part\n        if truncated_number < 0.0 then\n            decimal_part\n        else\n            truncate_number_decimal (decimal_part * (1.0 / truncated_number)) truncated_number\n    truncate_number_decimal (decimal number) number", "    let rec truncate_number_decimal (decimal_part:decimal) (number:decimal) =\n        match number with\n        | x when x < 0.0M -> decimal_part - 1.0M\n        | x when x > 0.0M -> decimal_part + 1.0M\n        | x -> truncate_number_decimal (decimal_part + x) number\n    truncate_number_decimal (decimal number) number", "    let truncate_number_part = \n        let truncate_number_part_decimal = \n            let truncate_number_part_decimal_part = \n                let truncate_number_part_decimal_part_decimal = \n                    let truncate_number_part_decimal_part_decimal_part = \n                        let truncate_number_part_decimal_part_decimal_part_decimal = \n                            let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal = \n                                let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal = \n                                    let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal = \n                                        let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal = \n                                            let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal = \n                                                let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal = \n                                                    let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part", "    let truncate_number_part = \n        let truncate_number_part_decimal = \n            let truncate_number_part_decimal_part = \n                let truncate_number_part_decimal_part_decimal = \n                    let truncate_number_part_decimal_part_decimal_part = \n                        let truncate_number_part_decimal_part_decimal_part_decimal = \n                            let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal = \n                                let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal = \n                                    let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal = \n                                        let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal = \n                                            let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal = \n                                                let truncate_number_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part_decimal_part", "    let truncate_number_part = \n        let truncate_number_part_decimal = \n            let truncate_number_part_decimal_decimal = \n                let truncate_number_part_decimal_decimal_decimal = \n                    let truncate_number_part_decimal_decimal_decimal_decimal = \n                        let truncate_number_part_decimal_decimal_decimal_decimal_decimal_decimal = \n                            let truncate_number_part_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}