{"name": "HumanEval_47_median", "language": "fs", "prompt": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median l = \n", "tests": "let test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()", "completions": ["    let rec loop i l =\n        match l with\n        | [] -> 0.0\n        | x::xs ->\n            if i = 0 then\n                let m = x / float (List.length xs)\n                loop (i-1) xs\n            else\n                let m = x / float (List.length xs)\n                loop (i-1) xs\n                m\n    loop 0 l", "    let rec loop acc l = \n        match l with \n        | [] -> acc\n        | x::xs -> \n            let (x', xs') = List.partition (fun y -> x = y) xs\n            loop (x'@acc) xs'\n    loop [] l", "    let rec loop acc l = \n        match l with \n        | [] -> acc\n        | x::xs -> \n            let xs = List.rev xs\n            let rec loop acc xs = \n                match xs with \n                | [] -> acc\n                | x::xs -> loop (x::acc) xs\n            loop acc xs\n    loop [] l", "    let rec loop i = \n        if i < l then loop (i + 1)\n        else i\n    loop 0", "    let rec loop i l =\n        match l with\n        | [] -> 0.0\n        | x::xs ->\n            if i = 0 then\n                x\n            else\n                loop (i-1) xs\n    loop 0 l", "    let rec loop i acc = \n        if i = l then acc\n        else loop (i - 1) (acc + (l - i) / 2.0)\n    loop 0.0 l", "    let rec loop i l = \n        if i = l then l else loop (i - 1) (l - 1)\n    loop 0 l", "    let rec loop i l =\n        match l with\n        | [] -> 0.0\n        | x::xs ->\n            let xs = x::xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i-1) xs\n            let xs = loop (i+1) xs", "    let rec loop i l =\n        match l with\n        | [] -> 0.0\n        | x::xs ->\n            let xs = x::xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs\n            let xs = loop (i+1) xs", "    let rec loop acc l = \n        match l with\n        | [] -> acc\n        | x::xs -> loop (x::acc) xs\n    loop [] l", "    let rec loop acc = \n        match l with \n        | [] -> acc\n        | x::xs -> \n            let xs' = List.rev xs\n            let xs'' = List.rev acc\n            loop (x::xs')\n    loop []", "    let rec loop i l = \n        match l with \n        | [] -> 0.0\n        | x::xs -> \n            if i = 0 then \n                loop (i-1) xs\n            else \n                let x' = List.item (i-1) xs\n                let x'' = List.item (i-1) xs\n                if x' < x'' then loop (i-1) xs\n                else loop (i-1) xs\n    loop 0 l", "    let rec loop acc l = \n        match l with \n        | [] -> acc\n        | x::xs -> \n            let xs = List.rev xs\n            let xs = List.sort xs\n            let xs = List.rev xs\n            let xs = List.sort xs\n            let xs = List.rev xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs\n            let xs = List.sort xs", "    let rec loop i l = \n        match l with \n        | [] -> 0.0\n        | x::xs -> \n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev xs\n            let xs = List.rev", "    let rec loop acc l = \n        match l with\n        | [] -> acc\n        | x::xs -> loop (x::acc) xs\n    loop [] l", "    let rec loop i l = \n        if i = l then l else loop (i - 1) (l - 1)\n    loop 0 l", "    let rec loop acc = \n        match l with\n        | [] -> acc\n        | x::xs -> loop (acc + x) xs\n    loop 0 l", "    let rec loop i = \n        if i < l.Length then \n            let x = l.[i]\n            let y = loop (i+1)\n            if x < y then loop (i+1)\n            else y\n        else l.Length-1\n    loop 0", "    let rec loop i l = \n        if i = l then \n            l\n        else \n            let mid = (i + l) / 2\n            let x = l - mid\n            if x < 0 then loop (i - 1) x\n            elif x > 0 then loop (i + 1) x\n            else loop (i - 1) x\n    loop 0 l", "    let rec loop acc = function\n        | [] -> acc\n        | x :: xs -> loop (acc + x) xs\n    loop 0 l"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}