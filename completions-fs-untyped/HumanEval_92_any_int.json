{"name": "HumanEval_92_any_int", "language": "fs", "prompt": "//Create a function that takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum of the other two, and all numbers are integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5, 2, 7) \u00e2\u017e\u017e True\n// any_int(3, 2, 2) \u00e2\u017e\u017e False\n// any_int(3, -2, 1) \u00e2\u017e\u017e True\n// any_int(3.6, -2.2, 2) \u00e2\u017e\u017e False\nlet any_int x y z = \n", "tests": "let test() = \n  let candidate = any_int\n  assert (candidate 2 3 1 = true)\n  assert (candidate 2.5 2 3 = false)\n  assert (candidate 1.5 5 3.5 = false)\n  assert (candidate 2 6 2 = false)\n  assert (candidate 4 2 2 = true)\n  assert (candidate 2.2 2.2 2.2 = false)\n  assert (candidate -4 6 2 = true)\n  assert (candidate 2 1 1 = true)\n  assert (candidate 3 4 7 = true)\n  assert (candidate 3.0 4 7 = false)\n  0\n\ntest()", "completions": ["    match x, y, z with\n    | 1, 2, 3 -> true\n    | _ -> false", "    let rec sum x y z = \n        match x, y, z with \n        | 0, 0, 0 -> true\n        | _ -> \n            match x, y, z with \n            | x, y, z when x = y -> sum x y z\n            | _ -> false\n    sum x y z", "    match x, y, z with\n    | x, y, z when x = y && y = z -> true\n    | _ -> false", "    if x = y then true\n    else \n        if x % 2 = 0 then \n            if y % 2 = 0 then \n                if z % 2 = 0 then \n                    true\n                else \n                    false\n            else \n                false\n        else \n            false", "    match x, y, z with\n    | x, y, z when x = y && y = z -> true\n    | _ -> false", "    match x, y, z with\n    | x, y, z when x = y && y = z -> true\n    | _ -> false", "    match x, y, z with\n    | 1, 2, 3 -> true\n    | _ -> false", "    if x = y then \n        true\n    else\n        let mutable sum = 0\n        for i in [x..y] do\n            sum <- sum + i\n        sum = z", "    if x = y then \n        true\n    else\n        let sum = x + y\n        sum = z", "    match x, y, z with\n    | 0, 0, 0 -> true\n    | 0, _, 0 -> false\n    | _, 0, 0 -> false\n    | _, _, 0 -> false\n    | _, _, _ -> false", "    let rec any_int' x y z = \n        match x, y, z with\n        | x, y, z when x = y -> true\n        | _ -> false\n    any_int' x y z", "    match x, y, z with\n    | x, y, z when x = y && y = z -> true\n    | _ -> false", "    if x = y then \n        true\n    else\n        false", "    if x = y then \n        true\n    else\n        let mutable sum = 0\n        for i in [x..y] do\n            sum <- sum + i\n        sum = z", "    match x, y, z with\n    | x, y, z when x = y && y = z -> true\n    | _ -> false", "    match x, y, z with\n    | x, y, z when x = y && y = z -> true\n    | _ -> false", "    match x, y, z with\n    | x, y, z when x = y && y = z -> true\n    | _ -> false", "    match x, y, z with\n    | x, y, z when x = y && y = z -> true\n    | _ -> false", "    match x, y, z with\n    | x, y, z when x = y && y = z -> true\n    | _ -> false", "    let sum = x + y + z\n    sum % 3 = 0 && sum % 2 = 0 && sum % 7 = 0"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}