{"name": "HumanEval_57_monotonic", "language": "fs", "prompt": "//Return True is list elements are monotonically increasing or decreasing.\n// >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n// False\n// >>> monotonic([4, 1, 0, -10])\n// True\nlet monotonic l = \n", "tests": "let test() = \n  let candidate = monotonic\n  assert (candidate [1; 2; 4; 10] = true)\n  assert (candidate [1; 2; 4; 20] = true)\n  assert (candidate [1; 20; 4; 10] = false)\n  assert (candidate [4; 1; 0; -10] = true)\n  assert (candidate [4; 1; 1; 0] = true)\n  assert (candidate [1; 2; 3; 2; 5; 60] = false)\n  assert (candidate [1; 2; 3; 4; 5; 60] = true)\n  assert (candidate [9; 9; 9; 9] = true)\n  0\n\ntest()", "completions": ["  [1, 2, 4, 20]\n  .sort()\n  .reverse()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  .reverse()\n  .sort()\n  ", "  [1, 2, 4, 20]\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a -", "  [1, 2, 4, 20]\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((a, b) => a + b)\n  .filter((x) => x > 0)\n  .filter((x) => x < 20)\n  .filter((x) => x > -10)\n  .filter((x) => x < 10)\n  .filter((x) => x > -1)\n  .filter((x) => x < 1)\n  .filter((x) => x > 0)\n  .filter((x) => x < 20)\n  .filter((x) => x > -10)\n  .filter((x) => x < 10)\n  .filter((x) => x > -1)\n  .filter((x) => x < 1)\n  .filter((x) => x > 0)\n  .filter((x) => x < 20)\n  .filter((x) => x > -10)\n  .filter((x) => x < 10)\n  .filter((x) => x > -1)\n  .filter((x) => x < 1)\n  .filter((x) => x > 0)\n  .filter((x) => x < 20)\n  .filter((x) => x > -10)\n  .filter((x) => x < 10)\n  .filter((x) => x > -1)\n  .filter((x) => x < 1)\n  .filter((x) => x > 0)\n  .filter((x) => x < 20)\n  .filter((x) => x > -10)\n  .filter((x) => x < 10)\n  .filter((x) => x > -1)\n  .filter((x) => x < 1)\n  .filter((x) => x > 0)\n  .filter((x) => x < 20)\n  .filter((x) => x > -10)\n  .filter((x) => x < 10)\n  .filter((x) => x > -1)\n  .filter((x) => x < 1)\n  .filter((x) => x > 0)\n  ", "  [1, 2, 4, 20]\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a - b)\n  .sort((a, b) => a -", "  [1, 2, 4, 20]\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  ", "  [1, 2, 4, 20]\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  ", "  [1, 2, 4, 20]\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  .sort( (a, b) => a - b )\n  .reverse()\n  ", "  [1, 2, 4, 20]\n  .sort()\n  .reverse()\n  .map(i => i + 1)\n  .filter(i => i < 20)\n  .map(i => i + 1)\n  .filter(i => i < 10)\n  .map(i => i + 1)\n  .filter(i => i < -10)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i => i + 1)\n  .filter(i => i < 0)\n  .map(i =>", "  [1, 2, 4, 20]\n  .sort()\n  .reverse()\n  .map(n => n + 1)\n  .reduce((a, b) => a + b, 0)\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n", "  [1, 2, 4, 20]\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(a => a)\n  .filter(a => a >", "  [1, 2, 4, 20]\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x > 0)\n  .sort(a => a > 0)\n  .reverse()\n  .map(x => x)\n  .filter(x => x >", "  [1, 2, 4, 20]\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .sort((a, b) => a - b)\n  .reverse", "  [1, 2, 4, 20]\n  .sort()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  .reverse()\n  ", "  [1, 2, 4, 20]\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .", "  [1, 2, 4, 20]\n  .sort( (a, b) => a - b )\n  .reverse()\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .reduce((a, b) => a + b)\n  .map( (x) => x )\n  .", "  [1, 2, 4, 20]\n  .sort()\n  .reverse()\n  .map(n => n + 1)\n  .filter(n => n > 0)\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)\n  .sort()\n  .reverse()\n  .map(n => n)", "  [1, 2, 4, 20]\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .sort((a, b)", "  [1, 2, 4, 20]\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  .sort()\n  .reverse()\n  .map((x) => x)\n  .reverse()\n  .map((x) => x)\n  ", "  [1, 2, 4, 20]\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .reduce((x, y) => x + y)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  .filter((x) => x > 0)\n  .filter((x) => x < 0)\n  ", "  [1, 2, 4, 20]\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0)\n  .map((x) => x)\n  .filter((x) => x > 0"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}