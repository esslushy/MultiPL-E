{"name": "HumanEval_4_mean_absolute_deviation", "language": "fs", "prompt": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n", "tests": "let test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()", "completions": ["  [1.0, 2.0, 3.0, 4.0];", "[1.0, 2.0, 3.0, 4.0];", "[1.0, 2.0, 3.0, 4.0];", "[1.0, 2.0, 3.0, 4.0];", "  [1.0, 2.0, 3.0, 4.0];", "[\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.0],\n  [1.0, 2.0, 3.0, 4.", "  [1.0, 2.0, 3.0, 4.0];", "  numbers.map(n => n.toFixed(2));", "    [1.0, 2.0, 3.0, 4.0];", "[1.0, 2.0, 3.0, 4.0];", "[1.0, 2.0, 3.0, 4.0];", "[\n  [1.0, 2.0, 3.0, 4.0],\n  [2.0, 3.0, 4.0, 5.0],\n  [3.0, 4.0, 5.0, 6.0],\n  [4.0, 5.0, 6.0, 7.0],\n  [5.0, 6.0, 7.0, 8.0],\n  [6.0, 7.0, 8.0, 9.0],\n  [7.0, 8.0, 9.0, 10.0],\n  [8.0, 9.0, 10.0, 11.0],\n  [9.0, 10.0, 11.0, 12.0],\n  [10.0, 11.0, 12.0, 13.0],\n  [11.0, 12.0, 13.0, 14.0],\n  [12.0, 13.0, 14.0, 15.0],\n  [13.0, 14.0, 15.0, 16.0],\n  [14.0, 15.0, 16.0, 17.0],\n  [15.0, 16.0, 17.0, 18.0],\n  [16.0, 17.0, 18.0, 19.0],\n  [17.0, 18.0, 19.0, 20.0],\n  [18.0, 19.0, 20.0, 21.0],\n  [19.0, 20.0, 21.0, 22.0],\n  [20.0, 21.0, 22.0, 23.0],\n  [21.0, 22.0, 23.0, 24.0],\n  [22.0, 23.0, 24.0, 25.0],\n  [23.0, 24.0, 25.0, 26.0],\n  [24.0, 25.0, 26.0, 27.0],\n  [25.0, 26.0, 27.0, 28.0],\n  [26.0, 27.0, 28.0, 29.0],\n  [27.0, 28.0, 29.0, 30.", "[1.0, 2.0, 3.0, 4.0];", "[1.0, 2.0, 3.0, 4.0];", "    [1.0, 2.0, 3.0, 4.0];", "[1.0, 2.0, 3.0, 4.0];", "  numbers.map(n => (n - x_mean) / x_mean);", "[1.0, 2.0, 3.0, 4.0];", "    [1.0, 2.0, 3.0, 4.0];", "  [1.0, 2.0, 3.0, 4.0];"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}