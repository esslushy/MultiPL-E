{"name": "HumanEval_78_hex_key", "language": "fs", "prompt": "//You have been tasked to write a function that receives \n// a hexadecimal number as a string and counts the number of hexadecimal \n// digits that are primes (prime number, or a prime, is a natural number \n// greater than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note: you may assume the input is always correct or empty string, \n// and symbols A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output should be 6.\n// For num = \"2020\" the output should be 2.\nlet hex_key num = \n", "tests": "let test() = \n  let candidate = hex_key\n  assert (candidate \"AB\" = 1)\n  assert (candidate \"1077E\" = 2)\n  assert (candidate \"ABED1A33\" = 4)\n  assert (candidate \"2020\" = 2)\n  assert (candidate \"123456789ABCDEF0\" = 6)\n  assert (candidate \"112233445566778899AABBCCDDEEFF00\" = 12)\n  0\n\ntest()", "completions": ["  \"AB\"\n  + \"CD\"\n  + \"EF\"\n  + \"F0\"\n  + \"F1\"\n  + \"F2\"\n  + \"F3\"\n  + \"F4\"\n  + \"F5\"\n  + \"F6\"\n  + \"F7\"\n  + \"F8\"\n  + \"F9\"\n  + \"FA\"\n  + \"FB\"\n  + \"FC\"\n  + \"FD\"\n  + \"FE\"\n  + \"FF\"\n  + \"100\"\n  + \"101\"\n  + \"102\"\n  + \"103\"\n  + \"104\"\n  + \"105\"\n  + \"106\"\n  + \"107\"\n  + \"108\"\n  + \"109\"\n  + \"110\"\n  + \"111\"\n  + \"112\"\n  + \"113\"\n  + \"114\"\n  + \"115\"\n  + \"116\"\n  + \"117\"\n  + \"118\"\n  + \"119\"\n  + \"120\"\n  + \"121\"\n  + \"122\"\n  + \"123\"\n  + \"124\"\n  + \"125\"\n  + \"126\"\n  + \"127\"\n  + \"128\"\n  + \"129\"\n  + \"130\"\n  + \"131\"\n  + \"132\"\n  + \"133\"\n  + \"134\"\n  + \"135\"\n  + \"136\"\n  + \"137\"\n  + \"138\"\n  + \"139\"\n  + \"140\"\n  + \"141\"\n  + \"142\"\n  + \"143\"\n  + \"144\"\n  + \"145\"\n  + \"146\"\n  + \"147\"\n  + \"148\"\n  + \"149\"\n  + \"150\"\n  + \"151\"\n  + \"152\"\n  + \"153\"\n  + \"154\"\n  + \"155\"\n  + \"156\"\n  + \"157\"\n  + \"158\"\n  + \"159\"\n  + \"160\"\n  + \"161\"\n  + \"162\"\n  + \"163\"\n  + \"164\"", "\t\"AB\"\n\t\"1077E\"\n\t\"ABED1A33\"\n\t\"123456789ABCDEF0\"\n\t\"2020\"\n\t\"\";", "\t(num = \"AB\" || num)\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D/g, '')\n\t.replace(/\\D", "  \"AB\"\n  + \"CD\"\n  + \"EF\"\n  + \"F0\"\n  + \"F1\"\n  + \"F2\"\n  + \"F3\"\n  + \"F4\"\n  + \"F5\"\n  + \"F6\"\n  + \"F7\"\n  + \"F8\"\n  + \"F9\"\n  + \"FA\"\n  + \"FB\"\n  + \"FC\"\n  + \"FD\"\n  + \"FE\"\n  + \"FF\"\n  + \"0\"\n  + \"1\"\n  + \"2\"\n  + \"3\"\n  + \"4\"\n  + \"5\"\n  + \"6\"\n  + \"7\"\n  + \"8\"\n  + \"9\"\n  + \"A\"\n  + \"B\"\n  + \"C\"\n  + \"D\"\n  + \"E\"\n  + \"F\"\n  + \"0\"\n  + \"1\"\n  + \"2\"\n  + \"3\"\n  + \"4\"\n  + \"5\"\n  + \"6\"\n  + \"7\"\n  + \"8\"\n  + \"9\"\n  + \"A\"\n  + \"B\"\n  + \"C\"\n  + \"D\"\n  + \"E\"\n  + \"F\"\n  + \"0\"\n  + \"1\"\n  + \"2\"\n  + \"3\"\n  + \"4\"\n  + \"5\"\n  + \"6\"\n  + \"7\"\n  + \"8\"\n  + \"9\"\n  + \"A\"\n  + \"B\"\n  + \"C\"\n  + \"D\"\n  + \"E\"\n  + \"F\"\n  + \"0\"\n  + \"1\"\n  + \"2\"\n  + \"3\"\n  + \"4\"\n  + \"5\"\n  + \"6\"\n  + \"7\"\n  + \"8\"\n  + \"9\"\n  + \"A\"\n  + \"B\"\n  + \"C\"\n  + \"D\"\n  + \"E\"\n  + \"F\"\n  + \"0\"", "    \"AB\"\n    + \"CD\"\n    + \"EF\"\n    + \"F0\"\n    + \"F1\"\n    + \"F2\"\n    + \"F3\"\n    + \"F4\"\n    + \"F5\"\n    + \"F6\"\n    + \"F7\"\n    + \"F8\"\n    + \"F9\"\n    + \"FA\"\n    + \"FB\"\n    + \"FC\"\n    + \"FD\"\n    + \"FE\"\n    + \"FF\"\n    + \"0\"\n    + \"1\"\n    + \"2\"\n    + \"3\"\n    + \"4\"\n    + \"5\"\n    + \"6\"\n    + \"7\"\n    + \"8\"\n    + \"9\"\n    + \"A\"\n    + \"B\"\n    + \"C\"\n    + \"D\"\n    + \"E\"\n    + \"F\"\n    + \"0\"\n    + \"1\"\n    + \"2\"\n    + \"3\"\n    + \"4\"\n    + \"5\"\n    + \"6\"\n    + \"7\"\n    + \"8\"\n    + \"9\"\n    + \"A\"\n    + \"B\"\n    + \"C\"\n    + \"D\"\n    + \"E\"\n    + \"F\"\n    + \"0\"\n    + \"1\"\n    + \"2\"\n    + \"3\"\n    + \"4\"\n    + \"5\"\n    + \"6\"\n    + \"7\"\n    + \"8\"\n    + \"9\"\n    + \"A\"\n    + \"B\"\n    + \"C\"\n    + \"D\"\n    + \"E\"\n    + \"F\"\n    + \"0\"\n    + \"1\"\n    + \"2\"\n    + \"3\"\n    + \"4\"\n    + \"5\"\n    + \"6\"\n    + \"7\"\n    + \"8\"\n    + \"9\"\n    + \"A\"\n    + \"B\"\n    + \"C\"\n    + \"D\"\n    + \"E\"\n    + \"F\"\n    + \"0\"", "\t\"AB\"\n\t\"1077E\"\n\t\"ABED1A33\"\n\t\"123456789ABCDEF0\"\n\t\"2020\"\n\t\"\";", "    \"AB\" + \n    \"CD\" + \n    \"EF\" + \n    \"F\" + \n    \"G\" + \n    \"H\" + \n    \"I\" + \n    \"J\" + \n    \"K\" + \n    \"L\" + \n    \"M\" + \n    \"N\" + \n    \"O\" + \n    \"P\" + \n    \"Q\" + \n    \"R\" + \n    \"S\" + \n    \"T\" + \n    \"U\" + \n    \"V\" + \n    \"W\" + \n    \"X\" + \n    \"Y\" + \n    \"Z\" + \n    \"ABCDEF\" + \n    \"123456789ABCDEF0\" + \n    \"2020\" + \n    \"\";", "\t\"AB\"\n\t\"1077E\"\n\t\"ABED1A33\"\n\t\"123456789ABCDEF0\"\n\t\"2020\";", "\t\"AB\"\n\t\"1077E\"\n\t\"ABED1A33\"\n\t\"123456789ABCDEF0\"\n\t\"2020\"\n\t\"\";", "\t(num.length === 1 ? num : num.charAt(0) === '0' ? num : num.charAt(0) === '1' ? num : num.charAt(0) === '2' ? num : num.charAt(0) === '3' ? num : num.charAt(0) === '4' ? num : num.charAt(0) === '5' ? num : num.charAt(0) === '6' ? num : num.charAt(0) === '7' ? num : num.charAt(0) === '8' ? num : num.charAt(0) === '9' ? num : num.charAt(0) === 'A' ? num : num.charAt(0) === 'B' ? num : num.charAt(0) === 'C' ? num : num.charAt(0) === 'D' ? num : num.charAt(0) === 'E' ? num : num.charAt(0) === 'F' ? num : num.charAt(0) === '0' ? num : num.charAt(0) === '1' ? num : num.charAt(0) === '2' ? num : num.charAt(0) === '3' ? num : num.charAt(0) === '4' ? num : num.charAt(0) === '5' ? num : num.charAt(0) === '6' ? num : num.charAt(0) === '7' ? num : num.charAt(0) === '8' ? num : num.charAt(0) === '9' ? num : num.charAt(0) === 'A' ? num : num.charAt(0) === 'B' ? num : num.charAt(0) === 'C' ? num : num.charAt(0) === 'D' ? num : num.charAt(0) === 'E' ? num : num.charAt(0) === 'F' ? num : num.charAt(0) === '0' ? num : num.charAt(0) === '1' ? num : num.charAt(0) === '2' ? num : num.charAt(0) === '3' ?", "\t\"AB\"\n\t\"1077E\"\n\t\"ABED1A33\"\n\t\"123456789ABCDEF0\"\n\t\"2020\"\n\t\"\";", "\t\"AB\"\n\t\"1077E\"\n\t\"ABED1A33\"\n\t\"123456789ABCDEF0\"\n\t\"2020\"\n\t\"\";", "    \"AB\"\n    + \"CD\"\n    + \"EF\"\n    + \"F\"\n    + \"G\"\n    + \"H\"\n    + \"I\"\n    + \"J\"\n    + \"K\"\n    + \"L\"\n    + \"M\"\n    + \"N\"\n    + \"O\"\n    + \"P\"\n    + \"Q\"\n    + \"R\"\n    + \"S\"\n    + \"T\"\n    + \"U\"\n    + \"V\"\n    + \"W\"\n    + \"X\"\n    + \"Y\"\n    + \"Z\"\n    + \"ABCDEF\"\n    + \"ABCDEF0\"\n    + \"123456789ABCDEF0\"\n    + \"2020\"\n    + \"123456789ABCDEF1\"\n    + \"123456789ABCDEF2\"\n    + \"123456789ABCDEF3\"\n    + \"123456789ABCDEF4\"\n    + \"123456789ABCDEF5\"\n    + \"123456789ABCDEF6\"\n    + \"123456789ABCDEF7\"\n    + \"123456789ABCDEF8\"\n    + \"123456789ABCDEF9\"\n    + \"123456789ABCDEF10\"\n    + \"123456789ABCDEF11\"\n    + \"123456789ABCDEF12\"\n    + \"123456789ABCDEF13\"\n    + \"123456789ABCDEF14\"\n    + \"123456789ABCDEF15\"\n    + \"123456789ABCDEF16\"\n    + \"123456789ABCDEF17\"\n    + \"123456789ABCDEF18\"\n    + \"123456789ABCDEF19\"\n    + \"123456789ABCDEF20\"\n    + \"123456789ABCDEF21\"\n    + \"123456789ABCDEF22\"\n    + \"123456789ABCDEF23\"\n    + \"123456789ABCDEF24\"\n    + \"123456789ABCDEF25\"\n    + \"123456789ABCDEF26\"\n    + \"123456789ABCDEF27\"\n    + \"123456789ABCDEF28\"\n", "\t\"AB\"\n\t\"1077E\"\n\t\"ABED1A33\"\n\t\"123456789ABCDEF0\"\n\t\"2020\"\n\t\"\";", "\t(num) =>\n\t\tnum.length === 1 ? num[0] :\n\t\tnum.length === 2 ? num[0] + num[1] :\n\t\tnum.length === 3 ? num[0] + num[1] + num[2] :\n\t\tnum.length === 4 ? num[0] + num[1] + num[2] + num[3] :\n\t\tnum.length === 5 ? num[0] + num[1] + num[2] + num[3] + num[4] :\n\t\tnum.length === 6 ? num[0] + num[1] + num[2] + num[3] + num[4] + num[5] :\n\t\tnum.length === 7 ? num[0] + num[1] + num[2] + num[3] + num[4] + num[5] + num[6] :\n\t\tnum.length === 8 ? num[0] + num[1] + num[2] + num[3] + num[4] + num[5] + num[6] + num[7] :\n\t\tnum.length === 9 ? num[0] + num[1] + num[2] + num[3] + num[4] + num[5] + num[6] + num[7] + num[8] :\n\t\tnum.length === 10 ? num[0] + num[1] + num[2] + num[3] + num[4] + num[5] + num[6] + num[7] + num[8] + num[9] :\n\t\tnum.length === 11 ? num[0] + num[1] + num[2] + num[3] + num[4] + num[5] + num[6] + num[7] + num[8] + num[9] + num[10] :\n\t\tnum.length === 12 ? num[0] + num[1] + num[2] + num[3] + num[4] + num[5] + num[6] + num[7] + num[8] + num[9] + num[10] + num[11] :\n\t\tnum.length === 13 ? num[0] + num[1] + num[2", "\t\"AB\"\n\t\"1077E\"\n\t\"ABED1A33\"\n\t\"123456789ABCDEF0\"\n\t\"2020\"\n\t\"\";", "  \"AB\"\n  + \"CD\"\n  + \"EF\"\n  + \"F\"\n  + \"G\"\n  + \"H\"\n  + \"I\"\n  + \"J\"\n  + \"K\"\n  + \"L\"\n  + \"M\"\n  + \"N\"\n  + \"O\"\n  + \"P\"\n  + \"Q\"\n  + \"R\"\n  + \"S\"\n  + \"T\"\n  + \"U\"\n  + \"V\"\n  + \"W\"\n  + \"X\"\n  + \"Y\"\n  + \"Z\"\n  + \"A\"\n  + \"B\"\n  + \"C\"\n  + \"D\"\n  + \"E\"\n  + \"F\"\n  + \"G\"\n  + \"H\"\n  + \"I\"\n  + \"J\"\n  + \"K\"\n  + \"L\"\n  + \"M\"\n  + \"N\"\n  + \"O\"\n  + \"P\"\n  + \"Q\"\n  + \"R\"\n  + \"S\"\n  + \"T\"\n  + \"U\"\n  + \"V\"\n  + \"W\"\n  + \"X\"\n  + \"Y\"\n  + \"Z\"\n  + \"A\"\n  + \"B\"\n  + \"C\"\n  + \"D\"\n  + \"E\"\n  + \"F\"\n  + \"G\"\n  + \"H\"\n  + \"I\"\n  + \"J\"\n  + \"K\"\n  + \"L\"\n  + \"M\"\n  + \"N\"\n  + \"O\"\n  + \"P\"\n  + \"Q\"\n  + \"R\"\n  + \"S\"\n  + \"T\"\n  + \"U\"\n  + \"V\"\n  + \"W\"\n  + \"X\"\n  + \"Y\"\n  + \"Z\"\n  + \"A\"\n  + \"B\"\n  + \"C\"\n  + \"D\"\n  + \"E\"\n  + \"F\"\n  + \"G\"\n  + \"H\"\n  + \"I\"\n  + \"", "\t\"AB\"\n\t\"1077E\"\n\t\"ABED1A33\"\n\t\"123456789ABCDEF0\"\n\t\"2020\"\n\t\"\";", "\t\"AB\"\n\t\"CD\"\n\t\"EF\"\n\t\"F\"\n\t\"G\"\n\t\"H\"\n\t\"I\"\n\t\"J\"\n\t\"K\"\n\t\"L\"\n\t\"M\"\n\t\"N\"\n\t\"O\"\n\t\"P\"\n\t\"Q\"\n\t\"R\"\n\t\"S\"\n\t\"T\"\n\t\"U\"\n\t\"V\"\n\t\"W\"\n\t\"X\"\n\t\"Y\"\n\t\"Z\"\n\t\"A\"\n\t\"B\"\n\t\"C\"\n\t\"D\"\n\t\"E\"\n\t\"F\"\n\t\"G\"\n\t\"H\"\n\t\"I\"\n\t\"J\"\n\t\"K\"\n\t\"L\"\n\t\"M\"\n\t\"N\"\n\t\"O\"\n\t\"P\"\n\t\"Q\"\n\t\"R\"\n\t\"S\"\n\t\"T\"\n\t\"U\"\n\t\"V\"\n\t\"W\"\n\t\"X\"\n\t\"Y\"\n\t\"Z\"\n\t\"A\"\n\t\"B\"\n\t\"C\"\n\t\"D\"\n\t\"E\"\n\t\"F\"\n\t\"G\"\n\t\"H\"\n\t\"I\"\n\t\"J\"\n\t\"K\"\n\t\"L\"\n\t\"M\"\n\t\"N\"\n\t\"O\"\n\t\"P\"\n\t\"Q\"\n\t\"R\"\n\t\"S\"\n\t\"T\"\n\t\"U\"\n\t\"V\"\n\t\"W\"\n\t\"X\"\n\t\"Y\"\n\t\"Z\"\n\t\"A\"\n\t\"B\"\n\t\"C\"\n\t\"D\"\n\t\"E\"\n\t\"F\"\n\t\"G\"\n\t\"H\"\n\t\"I\"\n\t\"J\"\n\t\"K\"\n\t\"L\"\n\t\"M\"\n\t\"N\"\n\t\"O\"\n\t\"P\"\n\t\"Q\"\n\t\"R\"\n\t\"S\"\n\t\"T\"\n\t\"U\"\n\t\"V\"\n\t\"W\"\n\t\"X\"\n\t\"Y\"\n\t\"Z\"\n\t\"", "\t\"AB\"\n\t+ \"CD\"\n\t+ \"EF\"\n\t+ \"F\"\n\t+ \"G\"\n\t+ \"H\"\n\t+ \"I\"\n\t+ \"J\"\n\t+ \"K\"\n\t+ \"L\"\n\t+ \"M\"\n\t+ \"N\"\n\t+ \"O\"\n\t+ \"P\"\n\t+ \"Q\"\n\t+ \"R\"\n\t+ \"S\"\n\t+ \"T\"\n\t+ \"U\"\n\t+ \"V\"\n\t+ \"W\"\n\t+ \"X\"\n\t+ \"Y\"\n\t+ \"Z\"\n\t+ \"A\"\n\t+ \"B\"\n\t+ \"C\"\n\t+ \"D\"\n\t+ \"E\"\n\t+ \"F\"\n\t+ \"G\"\n\t+ \"H\"\n\t+ \"I\"\n\t+ \"J\"\n\t+ \"K\"\n\t+ \"L\"\n\t+ \"M\"\n\t+ \"N\"\n\t+ \"O\"\n\t+ \"P\"\n\t+ \"Q\"\n\t+ \"R\"\n\t+ \"S\"\n\t+ \"T\"\n\t+ \"U\"\n\t+ \"V\"\n\t+ \"W\"\n\t+ \"X\"\n\t+ \"Y\"\n\t+ \"Z\"\n\t+ \"A\"\n\t+ \"B\"\n\t+ \"C\"\n\t+ \"D\"\n\t+ \"E\"\n\t+ \"F\"\n\t+ \"G\"\n\t+ \"H\"\n\t+ \"I\"\n\t+ \"J\"\n\t+ \"K\"\n\t+ \"L\"\n\t+ \"M\"\n\t+ \"N\"\n\t+ \"O\"\n\t+ \"P\"\n\t+ \"Q\"\n\t+ \"R\"\n\t+ \"S\"\n\t+ \"T\"\n\t+ \"U\"\n\t+ \"V\"\n\t+ \"W\"\n\t+ \"X\"\n\t+ \"Y\"\n\t+ \"Z\"\n\t+ \"A\"\n\t+ \"B\"\n\t+ \"C\"\n\t+ \"D\"\n\t+ \"E\"\n\t+ \"F\"\n\t+ \"G\"\n\t+ \"H\"\n\t+ \"I\"\n\t+ \""], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}