{"name": "HumanEval_13_greatest_common_divisor", "language": "fs", "prompt": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n", "tests": "let test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()", "completions": ["  greatest_common_divisor(3, 5);", "  greatest_common_divisor(3, 5);", "  greatest_common_divisor(3, 5);", "  greatest_common_divisor(3, 5)\n  greatest_common_divisor(25, 15)", "  greatest_common_divisor(3, 5)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  great", "  (a * b) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (b * a) % (", "greatest_common_divisor(3, 5);", "  (a * b) % (b * a)\nlet gcd = greatest_common_divisor", "  greatest_common_divisor(3, 5)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(5, 15)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  greatest_common_divisor(5, 25)\n  greatest_common_divisor(25, 25)\n  great", "  greatest_common_divisor(3, 5)\n  greatest_common_divisor(25, 15);", "  (a * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (", "  greatest_common_divisor(3, 5);", "  (a * b) % (b * a) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (", "  greatest_common_divisor(3, 5);", "  greatest_common_divisor(3, 5)\n  greatest_common_divisor(25, 15)", "  (a * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (b * b) % (", "  greatest_common_divisor(3, 5);", "  greatest_common_divisor(3, 5)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  greatest_common_divisor(25, 15)\n  great", "  greatest_common_divisor(3, 5);", "  greatest_common_divisor(3, 5)\n  greatest_common_divisor(25, 15);"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}