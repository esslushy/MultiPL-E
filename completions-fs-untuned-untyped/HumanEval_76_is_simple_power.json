{"name": "HumanEval_76_is_simple_power", "language": "fs", "prompt": "//Your task is to write a function that returns true if a number x is a simple\n// power of n and false in other cases.\n// x is a simple power of n if n**int=x\n// For example:\n// is_simple_power(1, 4) => true\n// is_simple_power(2, 2) => true\n// is_simple_power(8, 2) => true\n// is_simple_power(3, 2) => false\n// is_simple_power(3, 1) => false\n// is_simple_power(5, 3) => false\nlet is_simple_power x n = \n", "tests": "let test() = \n  let candidate = is_simple_power\n  assert (candidate 16 2 = true)\n  assert (candidate 143214 16 = false)\n  assert (candidate 4 2 = true)\n  assert (candidate 9 3 = true)\n  assert (candidate 16 4 = true)\n  assert (candidate 24 2 = false)\n  assert (candidate 128 4 = false)\n  assert (candidate 12 6 = false)\n  assert (candidate 1 1 = true)\n  assert (candidate 1 12 = true)\n  0\n\ntest()", "completions": ["  () => true\n  ", "    (n) => n % 2 === 0 && n % 3 === 0 && n % 5 === 0 && n % 7 === 0 && n % 9 === 0;", "    () => true\n    ", "    (n) => n % 2 === 0 && n % 3 === 0 && n % 5 === 0;", "    (n) => n % 2 === 0 && n % 3 === 0 && n % 5 === 0;", "  () => true\n  ", "    (n) => n**int => n**int % n == 0", "  (n) => n % 2 === 0 && n % 3 === 0 && n % 5 === 0;", "  (n) => n % 2 === 0;", "    (n) => n % 2 === 0;", "// For example:", "    () => true\n    ", "  (n) => n > 0 && n < 1;", "// For example:", "  (n) => n > 0 && n < x;", "  () => true\n  ", "  (n) => n > 0 && n % 2 == 0;", "    (n * n) % n;", "    (n) => n > 1 && n < 10 && n % 2 === 0;", "    (n) => n > 1 && n < 3;"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}