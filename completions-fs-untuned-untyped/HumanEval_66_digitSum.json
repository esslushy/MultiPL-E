{"name": "HumanEval_66_digitSum", "language": "fs", "prompt": "//Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// digitSum(\"\") => 0\n// digitSum(\"abAB\") => 131\n// digitSum(\"abcCd\") => 67\n// digitSum(\"helloE\") => 69\n// digitSum(\"woArBld\") => 131\n// digitSum(\"aAaaaXa\") => 153\nlet digitSum s = \n", "tests": "let test() = \n  let candidate = digitSum\n  assert (candidate \"\" = 0)\n  assert (candidate \"abAB\" = 131)\n  assert (candidate \"abcCd\" = 67)\n  assert (candidate \"helloE\" = 69)\n  assert (candidate \"woArBld\" = 131)\n  assert (candidate \"aAaaaXa\" = 153)\n  assert (candidate \" How are yOu?\" = 151)\n  assert (candidate \"You arE Very Smart\" = 327)\n  0\n\ntest()", "completions": ["    (str) => {\n        let sum = 0;\n        for (let i = 0; i < str.length; i++) {\n            sum += str.charCodeAt(i);\n        }\n        return sum;\n    }", "  \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  .split(\"\")\n  .map(c => c.charCodeAt(0))\n  .reduce((sum, c) => sum + c)\n  .join(\"\");", "  (str) => {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  }", "  (str) => {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  }", "  function(str) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  }", "  (str) => {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  }", "  (str) => {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  }", "  (str) => {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  }", "    \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    .split(\"\")\n    .map(c => c.charCodeAt(0))\n    .reduce((sum, c) => sum + c, 0)\n    .toString();", "  \"abAB\"\n  .split(\"\")\n  .map(c => c.charCodeAt(0))\n  .reduce((sum, c) => sum + c, 0)\n  .toString();", "    (str) => {\n        let sum = 0;\n        for (let i = 0; i < str.length; i++) {\n            sum += str.charCodeAt(i);\n        }\n        return sum;\n    }", "  (str) => {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  }", "  (str) => {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  }", "  (str) => {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  };", "    \"abAB\"\n    .replace(/[^\\d]/g, '')\n    .replace(/[\\d]/g, '')\n    .split(' ')\n    .map(digit => {\n        return digit.charCodeAt(0)\n    })\n    .reduce((sum, c) => {\n        return sum + c\n    }, 0)", "  (str) => {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  }", "  function(str) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  }", "    \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";", "  (str) => {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  }", "  function(str) {\n    let sum = 0;\n    for (let i = 0; i < str.length; i++) {\n      sum += str.charCodeAt(i);\n    }\n    return sum;\n  }"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}