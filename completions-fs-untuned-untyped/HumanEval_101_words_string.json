{"name": "HumanEval_101_words_string", "language": "fs", "prompt": "//You will be given a string of words separated by commas or spaces. Your task is\n// to split the string into words and return an array of the words.\n// For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nlet words_string s = \n", "tests": "let test() = \n  let candidate = words_string\n  assert (candidate \"Hi, my name is John\" = [\"Hi\"; \"my\"; \"name\"; \"is\"; \"John\"])\n  assert (candidate \"One, two, three, four, five, six\" = [\"One\"; \"two\"; \"three\"; \"four\"; \"five\"; \"six\"])\n  assert (candidate \"Hi, my name\" = [\"Hi\"; \"my\"; \"name\"])\n  assert (candidate \"One,, two, three, four, five, six,\" = [\"One\"; \"two\"; \"three\"; \"four\"; \"five\"; \"six\"])\n  assert (candidate \"\" = [])\n  assert (candidate \"ahmed     , gamal\" = [\"ahmed\"; \"gamal\"])\n  0\n\ntest()", "completions": ["  \"Hi, my name is \" +\n  \"John\" +\n  \"\\n\\n\" +\n  \"One, two, three, four, five, six\" +\n  \"\\n\\n\" +\n  \"\";", "  \"Hi, my name is \";", "  \"One, two, three, four, five, six\".split(\",\");", "  \"Hi, my name is \" +\n  \"John\".split(\",\").map(word => word.trim()).join(\" \")", "`[\n\"Hi\",\n\"my\",\n\"name\",\n\"is\",\n\"John\"\n]`;", "  \"Hi, my name is \";", "  \"Hi, my name is \" +\n  \"John\".split(\" \");", "`\"Hi, my name is ${name}\"`", "\t\"Hi, my name is \" +\n\t\"John\".split(\", \");", "\t\"Hi, my name is \" +\n\t\"John\" +\n\t\"\\n\\n\" +\n\t\"One, two, three, four, five, six\";", "  \"Hi, my name is \" +\n  \"John\" +\n  \"\\n\\n\" +\n  \"One, two, three, four, five, six\" +\n  \"\\n\\n\" +\n  \"You will be given a string of words separated by commas or spaces or \" +\n  \"spaces. Your task is to split the string into words and return an array of the words.\\n\\n\" +\n  \"For example:\\n\\n\" +\n  \"words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n\\n\" +\n  \"words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\\n\\n\" +\n  \"You will be given a string of words separated by commas or spaces or \" +\n  \"spaces. Your task is to split the string into words and return an array of the words.\\n\\n\" +\n  \"For example:\\n\\n\" +\n  \"words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n\\n\" +\n  \"words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\\n\\n\" +\n  \"You will be given a string of words separated by commas or spaces or \" +\n  \"spaces. Your task is to split the string into words and return an array of the words.\\n\\n\" +\n  \"For example:\\n\\n\" +\n  \"words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\\n\\n\" +\n  \"words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\\n\\n\" +\n  \"You will be given a string of words separated by commas or spaces or \" +\n  \"spaces. Your task is to split the string into words and return an array of", "  \"One, two, three, four, five, six\".split(\",\");", "`[\n    \"Hi\",\n    \"my\",\n    \"name\",\n    \"is\",\n    \"John\"\n]`;", "    \"Hi, my name is \" +\n    \"John\" +\n    \"\\n\\n\" +\n    \"One, two, three, four, five, six\";", "`\"Hi, my name is ${name}\"`;", "`\"Hi, my name is ${name}\"`;", "\t\"Hi, my name is \" +\n\t\t\"John\".split(\" \").map(word => word.toLowerCase()).join(\" \") +\n\t\t\".\";", "`\n\t//You will be given a string of words separated by commas or spaces. Your task is\n\t//to split the string into words and return an array of the words.\n\t//For example:\n\t//words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n\t//words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.\n\t//Let's say you have a string of words separated by commas or spaces.", "`\n\t\t//You will be given a string of words separated by commas or spaces. Your task is\n\t\t//to split the string into words and return an array of the words.\n\t\t//For example:\n\t\t//words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n\t\t//words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\t\t//words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\t\t//words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\t\t//words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\t\t//words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\t\t//words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\t\t//words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\t\t//words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\t\t//words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\t\t//words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\t\t//words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n\t\t//words_string(\"One, two, three, four, five, six\")", "`\n\twords_string(s)\n}"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}