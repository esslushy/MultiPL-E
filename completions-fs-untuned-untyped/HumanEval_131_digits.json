{"name": "HumanEval_131_digits", "language": "fs", "prompt": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n", "tests": "let test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()", "completions": ["  (1 << (n - 1)) - 1", "    (n == 1) ? 1 :\n    (n == 2) ? 2 :\n    (n == 3) ? 3 :\n    (n == 4) ? 4 :\n    (n == 5) ? 5 :\n    (n == 6) ? 6 :\n    (n == 7) ? 7 :\n    (n == 8) ? 8 :\n    (n == 9) ? 9 :\n    (n == 10) ? 10 :\n    (n == 11) ? 11 :\n    (n == 12) ? 12 :\n    (n == 13) ? 13 :\n    (n == 14) ? 14 :\n    (n == 15) ? 15 :\n    (n == 16) ? 16 :\n    (n == 17) ? 17 :\n    (n == 18) ? 18 :\n    (n == 19) ? 19 :\n    (n == 20) ? 20 :\n    (n == 21) ? 21 :\n    (n == 22) ? 22 :\n    (n == 23) ? 23 :\n    (n == 24) ? 24 :\n    (n == 25) ? 25 :\n    (n == 26) ? 26 :\n    (n == 27) ? 27 :\n    (n == 28) ? 28 :\n    (n == 29) ? 29 :\n    (n == 30) ? 30 :\n    (n == 31) ? 31 :\n    (n == 32) ? 32 :\n    (n == 33) ? 33 :\n    (n == 34) ? 34 :\n    (n == 35) ? 35 :\n    (n == 36) ? 36 :\n    (n == 37) ? 37 :\n    (n == 38) ? 38 :\n    (n == 39) ? 39 :\n    (n == 40) ? 40 :\n    (n == 41) ? 41 :\n    (n == 42) ? 42 :\n    (n == 43) ? 43 :\n    (n == 44) ? 44 :\n    (n == 45) ? 45 :\n    (n == 46) ? 46 :\n    (n == 47) ? 47 :\n    (n == 48) ? 48 :\n    (n == 49) ? 49 :\n    (n == 50) ? 50 :\n    (n == 51) ? 51 :\n    (", "  (1 << (n - 1)) - 1", "digits(1)\ndigits(4)\ndigits(235)\ndigits(235)", "  (1 << (n - 1)) - 1", "  (1 << (n - 1)) - 1", "  (1 << (n - 1)) - 1\nlet product = 0\nfor (let i = 0; i < n; i++) {\n  product = product * 10 + (i & 1)\n}", "{\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n  24,\n  25,\n  26,\n  27,\n  28,\n  29,\n  30,\n  31,\n  32,\n  33,\n  34,\n  35,\n  36,\n  37,\n  38,\n  39,\n  40,\n  41,\n  42,\n  43,\n  44,\n  45,\n  46,\n  47,\n  48,\n  49,\n  50,\n  51,\n  52,\n  53,\n  54,\n  55,\n  56,\n  57,\n  58,\n  59,\n  60,\n  61,\n  62,\n  63,\n  64,\n  65,\n  66,\n  67,\n  68,\n  69,\n  70,\n  71,\n  72,\n  73,\n  74,\n  75,\n  76,\n  77,\n  78,\n  79,\n  80,\n  81,\n  82,\n  83,\n  84,\n  85,\n  86,\n  87,\n  88,\n  89,\n  90,\n  91,\n  92,\n  93,\n  94,\n  95,\n  96,\n  97,\n  98,\n  99,\n  100,\n  101,\n  102,\n  103,\n  104,\n  105,\n  106,\n  107,\n  108,\n  109,\n  110,\n  111,\n  112,\n  113,\n  114,\n  115,\n  116,\n  117,\n  118,\n  119,\n  120,\n  121,\n  122,\n  123,\n  124,\n  125,\n  126,\n  127,\n  128", "  (n < 1) ? 0 :\n  (n % 2 == 0) ? 1 :\n  (n % 3 == 0) ? 2 :\n  (n % 5 == 0) ? 3 :\n  (n % 7 == 0) ? 4 :\n  (n % 11 == 0) ? 5 :\n  (n % 13 == 0) ? 6 :\n  (n % 17 == 0) ? 7 :\n  (n % 19 == 0) ? 8 :\n  (n % 23 == 0) ? 9 :\n  (n % 29 == 0) ? 10 :\n  (n % 31 == 0) ? 11 :\n  (n % 37 == 0) ? 12 :\n  (n % 41 == 0) ? 13 :\n  (n % 43 == 0) ? 14 :\n  (n % 47 == 0) ? 15 :\n  (n % 53 == 0) ? 16 :\n  (n % 59 == 0) ? 17 :\n  (n % 61 == 0) ? 18 :\n  (n % 67 == 0) ? 19 :\n  (n % 71 == 0) ? 20 :\n  (n % 73 == 0) ? 21 :\n  (n % 79 == 0) ? 22 :\n  (n % 83 == 0) ? 23 :\n  (n % 89 == 0) ? 24 :\n  (n % 97 == 0) ? 25 :\n  (n % 101 == 0) ? 26 :\n  (n % 103 == 0) ? 27 :\n  (n % 107 == 0) ? 28 :\n  (n % 111 == 0) ? 29 :\n  (n % 113 == 0) ? 30 :\n  (n % 127 == 0) ? 31 :\n  (n % 131 == 0) ? 32 :\n  (n % 137 == 0) ? 33 :\n  (n % 139 == 0) ? 34 :\n  (n % 143 == 0) ? 35 :\n  (n % 147 == 0) ? 36 :\n  (n % 151 == 0) ? 37 :\n  (n % 157 == 0) ? 38 :\n  (n % 163 == 0) ? 39 :\n  (n % 167 == 0) ? 40 :\n  (n % 169 == 0) ? 41 :\n  (n % 173 == 0) ? 42", "  (n >= 1) ? n : 0;", "{\n  1: 1,\n  2: 1,\n  3: 1,\n  4: 1,\n  5: 1,\n  6: 1,\n  7: 1,\n  8: 1,\n  9: 1,\n  10: 1,\n  11: 1,\n  12: 1,\n  13: 1,\n  14: 1,\n  15: 1,\n  16: 1,\n  17: 1,\n  18: 1,\n  19: 1,\n  20: 1,\n  21: 1,\n  22: 1,\n  23: 1,\n  24: 1,\n  25: 1,\n  26: 1,\n  27: 1,\n  28: 1,\n  29: 1,\n  30: 1,\n  31: 1,\n  32: 1,\n  33: 1,\n  34: 1,\n  35: 1,\n  36: 1,\n  37: 1,\n  38: 1,\n  39: 1,\n  40: 1,\n  41: 1,\n  42: 1,\n  43: 1,\n  44: 1,\n  45: 1,\n  46: 1,\n  47: 1,\n  48: 1,\n  49: 1,\n  50: 1,\n  51: 1,\n  52: 1,\n  53: 1,\n  54: 1,\n  55: 1,\n  56: 1,\n  57: 1,\n  58: 1,\n  59: 1,\n  60: 1,\n  61: 1,\n  62: 1,\n  63: 1,\n  64: 1,\n  65: 1,\n  66: 1,\n  67: 1,\n  68: 1,\n  69: 1,\n  70: 1,\n  71: 1,\n  72: 1,\n  73: 1,\n  74: 1,\n  75: 1,\n  76: 1,\n  77: 1,\n  78: 1,\n  79: 1,\n  80: 1,\n  81: 1,\n  82: 1,\n  83: 1,\n  84: 1,\n  85: 1,\n", "{\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n  24,\n  25,\n  26,\n  27,\n  28,\n  29,\n  30,\n  31,\n  32,\n  33,\n  34,\n  35,\n  36,\n  37,\n  38,\n  39,\n  40,\n  41,\n  42,\n  43,\n  44,\n  45,\n  46,\n  47,\n  48,\n  49,\n  50,\n  51,\n  52,\n  53,\n  54,\n  55,\n  56,\n  57,\n  58,\n  59,\n  60,\n  61,\n  62,\n  63,\n  64,\n  65,\n  66,\n  67,\n  68,\n  69,\n  70,\n  71,\n  72,\n  73,\n  74,\n  75,\n  76,\n  77,\n  78,\n  79,\n  80,\n  81,\n  82,\n  83,\n  84,\n  85,\n  86,\n  87,\n  88,\n  89,\n  90,\n  91,\n  92,\n  93,\n  94,\n  95,\n  96,\n  97,\n  98,\n  99,\n  100,\n  101,\n  102,\n  103,\n  104,\n  105,\n  106,\n  107,\n  108,\n  109,\n  110,\n  111,\n  112,\n  113,\n  114,\n  115,\n  116,\n  117,\n  118,\n  119,\n  120,\n  121,\n  122,\n  123,\n  124,\n  125,\n  126,\n  127,\n  128", "  (1 << (n - 1)) - 1\nlet product = 0\nfor (let i = 0; i < n; i++) {\n  if (i % 2 == 0) {\n    product += digits(i)\n  }\n}", "  (1 << (n - 1)) - 1", "    (1 << (n - 1)) - 1\n    ", "    (1 << (n - 1)) - 1", "  (1 << (n - 1)) - 1\nlet product = 0\nfor (let i = 1; i <= n; i++)\n  product = product * i", "    (n == 0) ? 0 :\n    (n % 2 == 0) ? 1 :\n    (n % 3 == 0) ? 2 :\n    (n % 5 == 0) ? 3 :\n    (n % 7 == 0) ? 4 :\n    (n % 11 == 0) ? 5 :\n    (n % 13 == 0) ? 6 :\n    (n % 17 == 0) ? 7 :\n    (n % 19 == 0) ? 8 :\n    (n % 23 == 0) ? 9 :\n    (n % 29 == 0) ? 10 :\n    (n % 31 == 0) ? 11 :\n    (n % 37 == 0) ? 12 :\n    (n % 41 == 0) ? 13 :\n    (n % 43 == 0) ? 14 :\n    (n % 47 == 0) ? 15 :\n    (n % 53 == 0) ? 16 :\n    (n % 59 == 0) ? 17 :\n    (n % 61 == 0) ? 18 :\n    (n % 67 == 0) ? 19 :\n    (n % 71 == 0) ? 20 :\n    (n % 73 == 0) ? 21 :\n    (n % 79 == 0) ? 22 :\n    (n % 81 == 0) ? 23 :\n    (n % 83 == 0) ? 24 :\n    (n % 89 == 0) ? 25 :\n    (n % 91 == 0) ? 26 :\n    (n % 93 == 0) ? 27 :\n    (n % 97 == 0) ? 28 :\n    (n % 101 == 0) ? 29 :\n    (n % 103 == 0) ? 30 :\n    (n % 107 == 0) ? 31 :\n    (n % 111 == 0) ? 32 :\n    (n % 113 == 0) ? 33 :\n    (n % 127 == 0) ? 34 :\n    (n % 131 == 0) ? 35 :\n    (n % 133 == 0) ? 36 :\n    (n % 137 == 0) ? 37 :\n    (n % 141 == 0) ? 38 :\n    (n % 143 == 0) ? 39 :\n    (n % 147 == 0) ? 40 :\n    (n % 151 == 0) ? 41 :\n    (n % 153 == 0) ? 42", "  (1 << (n - 1)) - 1", "  (1 << (n - 1)) - 1"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}