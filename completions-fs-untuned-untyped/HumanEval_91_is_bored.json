{"name": "HumanEval_91_is_bored", "language": "fs", "prompt": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n", "tests": "let test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()", "completions": ["  (word) => {\n    if (word.length == 0) {\n      return 0;\n    }\n    if (word.charAt(0) == '.') {\n      return 1;\n    }\n    if (word.charAt(0) == '?') {\n      return 2;\n    }\n    if (word.charAt(0) == '!') {\n      return 3;\n    }\n    return 4;\n  };", "  (word) => {\n    if (word.length < 2) {\n      return false;\n    }\n    return (word.charAt(0) === '.' && word.charAt(1) === '?') || (word.charAt(0) === '?' && word.charAt(1) === '.') || (word.charAt(0) === '!' && word.charAt(1) === '?');\n  };", "  (word) => word.startsWith(\"I\") || word.startsWith(\"The\") || word.startsWith(\"The sky\") || word.startsWith(\"The sun\") || word.startsWith(\"I love this\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue.\") || word.startsWith(\"The sun is shining.\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue.\") || word.startsWith(\"The sun is shining.\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue.\") || word.startsWith(\"The sun is shining.\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue.\") || word.startsWith(\"The sun is shining.\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue.\") || word.startsWith(\"The sun is shining.\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue.\") || word.startsWith(\"The sun is shining.\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue.\") || word.startsWith(\"The sun is shining.\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue.\") || word.startsWith(\"The sun is shining.\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue.\") || word.startsWith(\"The sun is shining.\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue.\") || word.", "  (word) => {\n    if (word.charAt(0) == '.') {\n      return word.charAt(1) == '?' || word.charAt(1) == '!'\n    } else {\n      return word.charAt(0) == '!'\n    }\n  }", "  (word) => word.startsWith(\"I\") || word.startsWith(\"The\") || word.startsWith(\"The sky is\") || word.startsWith(\"The sun is\") || word.startsWith(\"I love this\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue. The sun is shining.\") || word.startsWith(\"The sun is shining. I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue. The sun is shining.\") || word.startsWith(\"The sun is shining. I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue. The sun is shining.\") || word.startsWith(\"The sun is shining. I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue. The sun is shining.\") || word.startsWith(\"The sun is shining. I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue. The sun is shining.\") || word.startsWith(\"The sun is shining. I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue. The sun is shining.\") || word.startsWith(\"The sun is shining. I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue. The sun is shining.\") || word.startsWith(\"The sun is shining. I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"I love this weather\") || word.startsWith(\"The sky is blue. The sun is shining.\") || word.startsWith(\"The sun is shining. I love this weather\") || word.starts", "  (word) => {\n    if (word.length == 0) return 0;\n    if (word.length == 1) return 1;\n    if (word.length == 2) return 2;\n    if (word.length == 3) return 3;\n    if (word.length == 4) return 4;\n    if (word.length == 5) return 5;\n    if (word.length == 6) return 6;\n    if (word.length == 7) return 7;\n    if (word.length == 8) return 8;\n    if (word.length == 9) return 9;\n    if (word.length == 10) return 10;\n    if (word.length == 11) return 11;\n    if (word.length == 12) return 12;\n    if (word.length == 13) return 13;\n    if (word.length == 14) return 14;\n    if (word.length == 15) return 15;\n    if (word.length == 16) return 16;\n    if (word.length == 17) return 17;\n    if (word.length == 18) return 18;\n    if (word.length == 19) return 19;\n    if (word.length == 20) return 20;\n    if (word.length == 21) return 21;\n    if (word.length == 22) return 22;\n    if (word.length == 23) return 23;\n    if (word.length == 24) return 24;\n    if (word.length == 25) return 25;\n    if (word.length == 26) return 26;\n    if (word.length == 27) return 27;\n    if (word.length == 28) return 28;\n    if (word.length == 29) return 29;\n    if (word.length == 30) return 30;\n    if (word.length == 31) return 31;\n    if (word.length == 32) return 32;\n    if (word.length == 33) return 33;\n    if (word.length == 34) return 34;\n    if (word.length == 35) return 35;\n    if (word.length == 36) return 36;\n    if (word.length == 37) return 37;\n    if (word.length == 38) return 38", "  (word) => {\n    if (word.length == 0) {\n      return 0;\n    }\n    if (word[0] == '.') {\n      return 1;\n    }\n    if (word[0] == '?') {\n      return 2;\n    }\n    if (word[0] == '!') {\n      return 3;\n    }\n    return 4;\n  }", "  (s) => s.split('.').length === 1 && s.split('?').length === 1 && s.split('!').length === 1 && s.split('!').length === 0;", "  (s) => {\n    let words = s.split(\" \");\n    return words.length > 1 && words[0] === \"I\";\n  }", "  (word) => {\n    if (word.length == 0) {\n      return 0;\n    }\n    if (word.length == 1) {\n      return word[0] == '.' || word[0] == '?' || word[0] == '!' ? 1 : 0;\n    }\n    return word.indexOf('.') != -1 ? 1 : 0;\n  }", "  (s) => s.match(/^(.+?)(\\?|\\!|\\.)$/)\n  .map(word => word.replace(/\\?|\\!|\\./, ''))\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b, 0)\n  .map(word => word.length)\n  .reduce((a, b) => a + b,", "  (s) => s.split(\".\")[0] === \"Hello\" && s.split(\".\")[1] === \"world\" && s.split(\".\")[2] === \".\" && s.split(\".\")[3] === \".\" && s.split(\".\")[4] === \"!\";", "  (word) => {\n    if (word.length < 2) {\n      return false;\n    }\n    return (word.charAt(0) === '.' && word.charAt(1) === '?') || (word.charAt(0) === '?' && word.charAt(1) === '.');\n  }", "    (word) => {\n        let words = word.split('.');\n        return words.length === 1 && words[0] === 'I'\n    }", "  (word) => {\n    if (word.length === 0) {\n      return 0;\n    }\n    if (word.length === 1) {\n      return word.charAt(0) === '.';\n    }\n    if (word.length === 2) {\n      return word.charAt(0) === '?' && word.charAt(1) === '.';\n    }\n    return false;\n  };", "  (word) => {\n    let is_bored_word = word.match(/^(.+?)$/)\n    if (is_bored_word) {\n      return is_bored_word[1] === '.'\n    }\n    return false\n  }", "  (word) => {\n    if (word.length < 2) {\n      return false;\n    }\n    if (word[0] === '.') {\n      return word.slice(1) === '.';\n    }\n    if (word[0] === '?') {\n      return word.slice(1) === '?';\n    }\n    if (word[0] === '!') {\n      return word.slice(1) === '!';\n    }\n    return false;\n  }", "    (word) => word.startsWith(\"I\") || word.startsWith(\"The\") || word.startsWith(\"The sky\") || word.startsWith(\"The sun\") || word.startsWith(\"I love this\") || word.startsWith(\"I love this weather\");", "  (word) => {\n    if (word.length == 0) return 0;\n    if (word.length == 1) return 1;\n    if (word.length == 2) return 2;\n    if (word.length == 3) return 3;\n    if (word.length == 4) return 4;\n    if (word.length == 5) return 5;\n    if (word.length == 6) return 6;\n    if (word.length == 7) return 7;\n    if (word.length == 8) return 8;\n    if (word.length == 9) return 9;\n    if (word.length == 10) return 10;\n    if (word.length == 11) return 11;\n    if (word.length == 12) return 12;\n    if (word.length == 13) return 13;\n    if (word.length == 14) return 14;\n    if (word.length == 15) return 15;\n    if (word.length == 16) return 16;\n    if (word.length == 17) return 17;\n    if (word.length == 18) return 18;\n    if (word.length == 19) return 19;\n    if (word.length == 20) return 20;\n    if (word.length == 21) return 21;\n    if (word.length == 22) return 22;\n    if (word.length == 23) return 23;\n    if (word.length == 24) return 24;\n    if (word.length == 25) return 25;\n    if (word.length == 26) return 26;\n    if (word.length == 27) return 27;\n    if (word.length == 28) return 28;\n    if (word.length == 29) return 29;\n    if (word.length == 30) return 30;\n    if (word.length == 31) return 31;\n    if (word.length == 32) return 32;\n    if (word.length == 33) return 33;\n    if (word.length == 34) return 34;\n    if (word.length == 35) return 35;\n    if (word.length == 36) return 36;\n    if (word.length == 37) return 37;\n    if (word.length == 38) return 38", "  (word) => {\n    if (word.length < 2) {\n      return false;\n    }\n    if (word[0] == '.') {\n      return false;\n    }\n    if (word[0] == '?') {\n      return false;\n    }\n    if (word[0] == '!') {\n      return false;\n    }\n    if (word[0] == 'I') {\n      return false;\n    }\n    return true;\n  };"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}