{"name": "HumanEval_99_closest_integer", "language": "fs", "prompt": "//Create a function that takes a value (string) representing a number\n// and returns the closest integer to it. If the number is equidistant\n// from two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away from zero means that if the given number is equidistant\n// from two integers, the one you should return is the one that is the\n// farthest from zero. For example closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\") should return -15.\nlet closest_integer value = \n", "tests": "let test() = \n  let candidate = closest_integer\n  assert (candidate \"10\" = 10)\n  assert (candidate \"14.5\" = 15)\n  assert (candidate \"-15.5\" = -16)\n  assert (candidate \"15.3\" = 15)\n  assert (candidate \"0\" = 0)\n  0\n\ntest()", "completions": ["  (value) => {\n    let closest = 0;\n    let i = 0;\n    while (i < value.length) {\n      if (value[i] === '-') {\n        closest = value[i + 1];\n        i++;\n      } else {\n        closest = value[i];\n        i++;\n      }\n    }\n    return closest;\n  }(value);", "  (value) => {\n    let min = Number.MAX_SAFE_INTEGER;\n    let max = Number.MIN_SAFE_INTEGER;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x =", "  (value) => {\n    let min = Math.min(value, 0);\n    let max = Math.max(value, 0);\n    let result = Math.floor(min / max);\n    return result;\n  };", "  (value) => {\n    let min = Infinity;\n    let max = -Infinity;\n    let i = 0;\n    let j = 0;\n    let result = 0;\n    let value_i = value;\n    let value_j = value;\n    while (i < value.length && j < value.length) {\n      if (value[i] === value[j]) {\n        result = value[i];\n        i++;\n        j++;\n      } else {\n        if (value[i] < value[j]) {\n          result = value[i];\n          i++;\n        } else {\n          result = value[j];\n          j++;\n        }\n      }\n    }\n    if (i === value.length) {\n      result = value[i];\n    }\n    if (j === value.length) {\n      result = value[j];\n    }\n    return result;\n  };", "  (value) => {\n    let min = Infinity;\n    let max = -Infinity;\n    let i = 0;\n    let j = 0;\n    let value_i = value;\n    let value_j = value;\n    while (i < value.length && j < value.length) {\n      if (value[i] === value[j]) {\n        i++;\n        j++;\n      } else {\n        if (value[i] < value[j]) {\n          i++;\n        } else {\n          j++;\n        }\n      }\n    }\n    if (i < value.length) {\n      min = value[i];\n      i++;\n    }\n    if (j < value.length) {\n      max = value[j];\n      j++;\n    }\n    return {\n      min,\n      max\n    };\n  }", "  (value) => {\n    let min = value;\n    let max = value;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    ", "  (value) => {\n    let min = value;\n    let max = value;\n    let i = 0;\n    while (i < value.length) {\n      let num = value.charAt(i);\n      if (num < '0' || num > '9') {\n        break;\n      }\n      i++;\n    }\n    if (i == value.length) {\n      return min;\n    }\n    let num = value.charAt(i);\n    if (num < '0' || num > '9') {\n      return min;\n    }\n    i++;\n    while (i < value.length) {\n      let num = value.charAt(i);\n      if (num < '0' || num > '9') {\n        break;\n      }\n      i++;\n    }\n    if (i == value.length) {\n      return max;\n    }\n    let num = value.charAt(i);\n    if (num < '0' || num > '9') {\n      return max;\n    }\n    i++;\n    while (i < value.length) {\n      let num = value.charAt(i);\n      if (num < '0' || num > '9') {\n        break;\n      }\n      i++;\n    }\n    if (i == value.length) {\n      return min;\n    }\n    let num = value.charAt(i);\n    if (num < '0' || num > '9') {\n      return min;\n    }\n    i++;\n    while (i < value.length) {\n      let num = value.charAt(i);\n      if (num < '0' || num > '9') {\n        break;\n      }\n      i++;\n    }\n    if (i == value.length) {\n      return max;\n    }\n    let num = value.charAt(i);\n    if (num < '0' || num > '9') {\n      return max;\n    }\n    i++;\n    while (i < value.length) {\n      let num = value.charAt(i);\n      if (num < '0' || num > '9", "  (value) => {\n    let i = 0;\n    let max = Math.pow(10, value.length);\n    while (i < value.length) {\n      let num = value.charAt(i);\n      if (num === '0') {\n        i++;\n        continue;\n      }\n      if (num === '1') {\n        i++;\n        continue;\n      }\n      let num2 = value.charAt(i);\n      if (num2 === '0') {\n        i++;\n        continue;\n      }\n      if (num2 === '1') {\n        i++;\n        continue;\n      }\n      i++;\n      if (num === num2) {\n        return i;\n      }\n    }\n    return max;\n  }", "  (value) => {\n    let min = value;\n    let max = value;\n    let i = 0;\n    while (i < value.length) {\n      let num = value.charAt(i);\n      let num_i = parseInt(num, 10);\n      if (num_i < min) {\n        min = num_i;\n      }\n      if (num_i > max) {\n        max = num_i;\n      }\n      i++;\n    }\n    return min;\n  };", "  (value) => {\n    let min = Infinity;\n    let max = -Infinity;\n    let i = 0;\n    let j = 0;\n    let result = 0;\n    let value_i = value;\n    let value_j = value;\n    while (i < value.length && j < value.length) {\n      if (value[i] === value[j]) {\n        result = value[i];\n        i++;\n        j++;\n      } else {\n        if (value[i] < value[j]) {\n          result = value[i];\n          i++;\n        } else {\n          result = value[j];\n          j++;\n        }\n      }\n    }\n    if (i < value.length) {\n      result = value[i];\n    }\n    if (j < value.length) {\n      result = value[j];\n    }\n    return result;\n  };", "  (value) => {\n    let min = Math.min(value, 0);\n    let max = Math.max(value, 0);\n    return Math.floor(min / max) * max + min % max;\n  }", "  (value) => {\n    let min = Infinity;\n    let max = -Infinity;\n    let i = 0;\n    let j = 0;\n    let n = value.length;\n    for (i = 0; i < n; i++) {\n      let v = value[i];\n      if (v < min) {\n        min = v;\n      }\n      if (v > max) {\n        max = v;\n      }\n      if (i === 0) {\n        j = v;\n      }\n    }\n    return j;\n  };", "  (value) => {\n    let min = value;\n    let max = value;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    ", "  (value) => {\n    let min = value;\n    let max = value;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    ", "  (value) => {\n    let min = value;\n    let max = value;\n    let i = 0;\n    while (i < value.length) {\n      let val = value.charAt(i);\n      if (val < '0' || val > '9') {\n        break;\n      }\n      i++;\n    }\n    if (i < value.length) {\n      min = value.substr(0, i);\n    }\n    i++;\n    while (i < value.length) {\n      let val = value.charAt(i);\n      if (val < '0' || val > '9') {\n        break;\n      }\n      i++;\n    }\n    if (i < value.length) {\n      max = value.substr(0, i);\n    }\n    return min + (max - min) * Math.floor(Math.abs(val - min) / Math.abs(val - min));\n  };", "  (value) => {\n    let min = Number.MAX_SAFE_INTEGER;\n    let max = Number.MIN_SAFE_INTEGER;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x =", "  (value) => {\n    let min = Math.min(value, 0);\n    let max = Math.max(value, 0);\n    let closest = min;\n    let step = max - min;\n    let step_diff = step / 2;\n    let step_diff_abs = Math.abs(step_diff);\n    let step_diff_abs_abs = Math.abs(step_diff_abs);\n    let step_diff_abs_abs_abs = Math.abs(step_diff_abs_abs);\n    let step_diff_abs_abs_abs_abs = Math.abs(step_diff_abs_abs_abs);\n    let step_diff_abs_abs_abs_abs_abs = Math.abs(step_diff_abs_abs_abs_abs);\n    let step_diff_abs_abs_abs_abs_abs = Math.abs(step_diff_abs_abs_abs_abs);\n    let step_diff_abs_abs_abs_abs_abs_abs = Math.abs(step_diff_abs_abs_abs_abs);\n    let step_diff_abs_abs_abs_abs_abs_abs = Math.abs(step_diff_abs_abs_abs_abs);\n    let step_diff_abs_abs_abs_abs_abs_abs = Math.abs(step_diff_abs_abs_abs_abs);\n    let step_diff_abs_abs_abs_abs_abs_abs = Math.abs(step_diff_abs_abs_abs_abs);\n    let step_diff_abs_abs_abs_abs_abs_abs = Math.abs(step_diff_abs_abs_abs_abs);\n    let step_diff_abs_abs_abs_abs_abs_abs = Math.abs(step_diff_abs_abs_abs_abs);\n    let step_diff_abs_abs_abs_abs_abs_abs = Math.abs(step_diff_abs_abs_abs_abs);\n    let step_diff_abs_abs_abs_abs_abs_abs = Math.abs(step_diff_abs_abs_abs_abs);\n    let step_diff_abs_abs_abs_abs_", "  (value) => {\n    let min = Math.min(value, 0);\n    let max = Math.max(value, 0);\n    let result = min;\n    let step = max - min;\n    for (let i = 0; i < step; i++) {\n      result += 1;\n    }\n    return result;\n  };", "  (value) => {\n    let min = Math.min(value, 0);\n    let max = Math.max(value, 0);\n    let mid = (min + max) / 2;\n    return Math.floor(mid);\n  };", "  (value) =>\n    Math.floor(Math.abs(value) / Math.pow(10, Math.floor(Math.log(value) / Math.log(10)) - 1))"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}