{"name": "HumanEval_12_longest", "language": "fs", "prompt": "//Out of list of strings, return the longest one. Return the first one in case of multiple\n// strings of the same length. Return None in case the input list is empty.\n// >>> longest([])\n// >>> longest(['a', 'b', 'c'])\n// 'a'\n// >>> longest(['a', 'bb', 'ccc'])\n// 'ccc'\nlet longest strings = \n", "tests": "let test() = \n  let candidate = longest\n  assert (candidate [] = None)\n  assert (candidate [\"x\"; \"y\"; \"z\"] = \"x\")\n  assert (candidate [\"x\"; \"yyy\"; \"zzzz\"; \"www\"; \"kkkk\"; \"abc\"] = \"zzzz\")\n  0\n\ntest()", "completions": ["  [\n    'a',\n    'bb',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    ", "  [\n    'a',\n    'bb',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    ", "[\n  'a',\n  'b',\n  'c'\n].map(s => s.length);", "    [\n        'a',\n        'bb',\n        'ccc',\n    ];", "    [\n        'a',\n        'bb',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        'ccc',\n        ", "    [\n        'a',\n        'bb',\n        'ccc'\n    ];", "    [\n        'a',\n        'bb',\n        'ccc',\n    ];", "  [\n    'a',\n    'bb',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    'ccc',\n    ", "    [\n        'a',\n        'bb',\n        'ccc'\n    ]", "    [\n        'a',\n        'b',\n        'c',\n    ];", "[\n  'a',\n  'bb',\n  'ccc'\n]", "  [\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',", "    [\n        'a',\n        'b',\n        'c',\n    ];", "    [\n        'a',\n        'bb',\n        'ccc',\n    ];", "  [\n    'a',\n    'bb',\n    'ccc'\n  ];", "  [\n    'a',\n    'bb',\n    'ccc'\n  ]", "  [\n    'a', 'bb', 'ccc',\n    'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb", "  [\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',\n    'a',\n    'b',\n    'c',", "    [\n        'a',\n        'bb',\n        'ccc',\n    ];", "  [\n    'a',\n    'bb',\n    'ccc'\n  ];"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}