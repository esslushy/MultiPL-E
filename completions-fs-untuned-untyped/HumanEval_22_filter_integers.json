{"name": "HumanEval_22_filter_integers", "language": "fs", "prompt": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n", "tests": "let test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()", "completions": ["  [1, 2, 3, 'abc', {}, []]", "    [1, 2, 3, 'abc', {}, []]\nlet filter_integers_empty = filter_integers([]);", "    [1, 2, 3, 'abc', {}, []]\nlet filter_integers_2 = filter_integers(values)\nlet filter_integers_3 = filter_integers(values)\nlet filter_integers_4 = filter_integers(values)\nlet filter_integers_5 = filter_integers(values)\nlet filter_integers_6 = filter_integers(values)\nlet filter_integers_7 = filter_integers(values)\nlet filter_integers_8 = filter_integers(values)\nlet filter_integers_9 = filter_integers(values)\nlet filter_integers_10 = filter_integers(values)\nlet filter_integers_11 = filter_integers(values)\nlet filter_integers_12 = filter_integers(values)\nlet filter_integers_13 = filter_integers(values)\nlet filter_integers_14 = filter_integers(values)\nlet filter_integers_15 = filter_integers(values)\nlet filter_integers_16 = filter_integers(values)\nlet filter_integers_17 = filter_integers(values)\nlet filter_integers_18 = filter_integers(values)\nlet filter_integers_19 = filter_integers(values)\nlet filter_integers_20 = filter_integers(values)\nlet filter_integers_21 = filter_integers(values)\nlet filter_integers_22 = filter_integers(values)\nlet filter_integers_23 = filter_integers(values)\nlet filter_integers_24 = filter_integers(values)\nlet filter_integers_25 = filter_integers(values)\nlet filter_integers_26 = filter_integers(values)\nlet filter_integers_27 = filter_integers(values)\nlet filter_integers_28 = filter_integers(values)\nlet filter_integers_29 = filter_integers(values)\nlet filter_integers_30 = filter_integers(values)\nlet filter_integers_31 = filter_integers(values)\nlet filter_integers_32 = filter_integers(values)\n", "  [1, 2, 3, 'abc', {}, []]", "[\n  'a',\n  3.14,\n  5,\n  'abc',\n  {},\n  [],\n  [],\n];", "  [1, 2, 3, 'abc', {}, []]", "  [1, 2, 3, 'abc', {}, []]", "  [1, 2, 3, 'abc', {}, []]", "  [1, 2, 3, 'abc', {}, []]", "    [1, 2, 3, 'abc', {}, []]\nlet filter_integers_list = filter_integers(values)\nlet filter_integers_list_length = filter_integers_list.length\nlet filter_integers_list_length_2 = filter_integers_list.length\nlet filter_integers_list_length_3 = filter_integers_list.length\nlet filter_integers_list_length_4 = filter_integers_list.length\nlet filter_integers_list_length_5 = filter_integers_list.length\nlet filter_integers_list_length_6 = filter_integers_list.length\nlet filter_integers_list_length_7 = filter_integers_list.length\nlet filter_integers_list_length_8 = filter_integers_list.length\nlet filter_integers_list_length_9 = filter_integers_list.length\nlet filter_integers_list_length_10 = filter_integers_list.length\nlet filter_integers_list_length_11 = filter_integers_list.length\nlet filter_integers_list_length_12 = filter_integers_list.length\nlet filter_integers_list_length_13 = filter_integers_list.length\nlet filter_integers_list_length_14 = filter_integers_list.length\nlet filter_integers_list_length_15 = filter_integers_list.length\nlet filter_integers_list_length_16 = filter_integers_list.length\nlet filter_integers_list_length_17 = filter_integers_list.length\nlet filter_integers_list_length_18 = filter_integers_list.length\nlet filter_integers_list_length_19 = filter_integers_list.length\nlet filter_integers_list_length_20 = filter_integers_list.length\nlet filter_integers_list_length_21 = filter_integers_list.length\nlet filter_integers_list_length_22 = filter_integers_list.length\nlet filter_integers_list_length_23 = filter_integers_list.length", "  [1, 2, 3, 'abc', {}, []]\nlet filter_integers_empty = filter_integers([]);", "  [1, 2, 3, 'abc', {}, []]", "  [1, 2, 3, 'abc', {}, []]", "[\n  [1, 2, 3, 'abc', {}, []]\n];", "  [1, 2, 3, 'abc', {}, []]", "  [1, 2, 3, 'abc', {}, []]\nlet filter_integers_empty = filter_integers([])()\nlet filter_integers_empty_empty = filter_integers([])()\nlet filter_integers_empty_empty_empty = filter_integers([])()", "  [1, 2, 3, 'abc', {}, []]", "    [1, 2, 3, 'abc', {}, []]\nlet filter_integers_empty = filter_integers([]);", "  [1, 2, 3, 'abc', {}, []]", "[\n  'a',\n  3.14,\n  5,\n  'abc',\n  {},\n  [],\n  []\n]"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}