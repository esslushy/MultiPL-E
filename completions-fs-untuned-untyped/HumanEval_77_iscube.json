{"name": "HumanEval_77_iscube", "language": "fs", "prompt": "//Write a function that takes an integer a and returns True \n// if this ingeger is a cube of some integer number.\n// Note: you may assume the input is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==> False\n// iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n// iscube(180) ==> False\nlet iscube a = \n", "tests": "let test() = \n  let candidate = iscube\n  assert (candidate 1 = true)\n  assert (candidate 2 = false)\n  assert (candidate -1 = true)\n  assert (candidate 64 = true)\n  assert (candidate 180 = false)\n  assert (candidate 1000 = true)\n  assert (candidate 0 = true)\n  assert (candidate 1729 = false)\n  0\n\ntest()", "completions": ["    function(a) {\n        return a % 3 === 0;\n    }", "    function(a) {\n        return a % 2 === 0;\n    }", "    (i) => i % 2 == 0\nlet iscube = (i) => iscube(i)", "    function() {\n        return this.isCube(this.value);\n    }", "    function(a) {\n        return a === 1 || a === 2 || a === -1 || a === 64 || a === 0 || a === 180;\n    }", "    (i) => i % 2 == 0\nlet iscube = (i) => iscube(i)", "    function(a) {\n        return a % 2 == 0;\n    }", "    function(a) {\n        return a % 3 == 0;\n    }", "    (i) => i % 2 == 0\nlet iscube = (i) => i % 2 == 0", "    function() {\n        return this.value % 2 == 0;\n    }", "    function(a) {\n        return a % 2 === 0;\n    }", "    function() {\n        return this.isCube(this.value);\n    }", "function iscube(a) {\n    return a % 2 === 0;\n}", "    function(a) {\n        return a % 2 == 0;\n    }", "    function(a) {\n        return a % 2 === 0;\n    }", "    (i) => i % 2 == 0\nlet iscube = (i) => iscube(i)", "    function(a) {\n        return a % 2 === 0;\n    }", "    function(a) {\n        return a % 2 === 0;\n    }", "function iscube(a) {\n    return a % 2 === 0;\n}", "    function(a) {\n        return a % 2 === 0;\n    }"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}