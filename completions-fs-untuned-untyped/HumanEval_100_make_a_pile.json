{"name": "HumanEval_100_make_a_pile", "language": "fs", "prompt": "//Given a positive integer n, you have to make a pile of n levels of stones.\n// The first level has n stones.\n// The number of stones in the next level is:\n// - the next odd number if n is odd.\n// - the next even number if n is even.\n// Return the number of stones in each level in a list, where element at index\n// i represents the number of stones in the level (i+1).\n// Examples:\n// >>> make_a_pile(3)\n// [3, 5, 7]\nlet make_a_pile n = \n", "tests": "let test() = \n  let candidate = make_a_pile\n  assert (candidate 3 = [3; 5; 7])\n  assert (candidate 4 = [4; 6; 8; 10])\n  assert (candidate 5 = [5; 7; 9; 11; 13])\n  assert (candidate 6 = [6; 8; 10; 12; 14; 16])\n  assert (candidate 8 = [8; 10; 12; 14; 16; 18; 20; 22])\n  0\n\ntest()", "completions": ["  [3, 5, 7]\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .filter(i => i % 2 == 1)\n  .map(i => i)\n  .filter(i => i % 2", "  [3, 5, 7]\n  .map(i => i + 1)\n  .reduce((a, b) => a + b, 0)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a +", "  [3, 5, 7]\n  .map(n => n % 2)\n  .reduce((prev, cur) => prev + cur, 0)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((n, i) => i + 1)\n  .reduce((prev, cur) => prev + cur, 0)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((n, i) => i + 1)\n  .reduce((prev, cur) => prev + cur, 0)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((n, i) => i + 1)\n  .reduce((prev, cur) => prev + cur, 0)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((n, i) => i + 1)\n  .reduce((prev, cur) => prev + cur, 0)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((n, i) => i + 1)\n  .reduce((prev, cur) => prev + cur, 0)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((n, i) => i + 1)\n  .reduce((prev, cur) => prev + cur, 0)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((n, i) => i + 1)\n  .reduce((prev, cur) => prev + cur, 0)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((n, i) => i + 1)\n  .reduce((prev, cur) => prev + cur, 0)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((n, i) => i + 1)\n  .reduce((prev, cur) => prev + cur, 0)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map((n,", "  [3, 5, 7]\n  .map(n => n % 2)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .sort((", "  [3, 5, 7]\n  .map(i => i + 1)\n  .reduce((a, b) => a + b, 0)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b, 0)\n  .filter(i => i % 2 == 0)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i", "  [3, 5, 7]\n  .map(i => i + 1)\n  .filter(i => i % 2 === 0)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .filter(i => i % 2 === 0)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .filter(i => i % 2 === 0)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .filter(i => i % 2 === 0)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .filter(i => i % 2 === 0)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .filter(i => i % 2 === 0)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .filter(i => i % 2 === 0)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .filter(i => i % 2 === 0)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a", "  [3, 5, 7]\n  .map(n => n % 2)\n  .reduce((prev, cur) => prev + cur, 0)\n  .filter(n => n % 2)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((prev, cur) => prev + cur, 0)\n  .filter(n => n % 2)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((prev, cur) => prev + cur, 0)\n  .filter(n => n % 2)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((prev, cur) => prev + cur, 0)\n  .filter(n => n % 2)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((prev, cur) => prev + cur, 0)\n  .filter(n => n % 2)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((prev, cur) => prev + cur, 0)\n  .filter(n => n % 2)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((prev, cur) => prev + cur, 0)\n  .filter(n => n % 2)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((prev, cur) => prev + cur, 0)\n  .filter(n => n % 2)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((prev, cur) => prev + cur, 0)\n  .filter(n => n % 2)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reduce((prev, cur) => prev + cur, 0)\n  .filter(n => n % 2)\n  .sort((a", "  [3, 5, 7]\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1", "  [3, 5, 7]\n  .map(n => n % 2)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()", "  [3, 5, 7]\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1", "  [3, 5, 7]\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .sort((a, b) => a - b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i", "  [3, 5, 7]\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i +", "  [3, 5, 7]\n  .map(i => i + 1)\n  .reduce((prev, curr) => prev + curr)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((prev, curr) => prev + curr)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((prev, curr) => prev + curr)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((prev, curr) => prev + curr)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((prev, curr) => prev + curr)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((prev, curr) => prev + curr)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((prev, curr) => prev + curr)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((prev, curr) => prev + curr)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((prev, curr) => prev + curr)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((prev, curr) => prev + curr)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((prev, curr) => prev + curr)\n  .sort((a", "  [3, 5, 7]\n  .map(n => n % 2)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .sort((a, b) => a - b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()\n  .map(n => n)\n  .reduce((a, b) => a + b)\n  .map(n => n)\n  .reverse()", "  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]", "  [3, 5, 7]\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1", "  [3, 5, 7]\n  .map(i => i + 1)\n  .filter(i => i % 2 == 0)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)", "  [3, 5, 7]\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .sort((a, b) => a - b)\n  .reverse()\n  .map(i => i +", "  [3, 5, 7]\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i + 1", "  [1, 2, 3, 4, 5, 6, 7]\n  .map(i => i + 1)\n  .reduce((a, b) => a + b)\n  .map(i => i % 2)\n  .map(i => i * 2)\n  .map(i => i * 3)\n  .map(i => i * 4)\n  .map(i => i * 5)\n  .map(i => i * 6)\n  .map(i => i * 7)\n  .map(i => i * 8)\n  .map(i => i * 9)\n  .map(i => i * 10)\n  .map(i => i * 11)\n  .map(i => i * 12)\n  .map(i => i * 13)\n  .map(i => i * 14)\n  .map(i => i * 15)\n  .map(i => i * 16)\n  .map(i => i * 17)\n  .map(i => i * 18)\n  .map(i => i * 19)\n  .map(i => i * 20)\n  .map(i => i * 21)\n  .map(i => i * 22)\n  .map(i => i * 23)\n  .map(i => i * 24)\n  .map(i => i * 25)\n  .map(i => i * 26)\n  .map(i => i * 27)\n  .map(i => i * 28)\n  .map(i => i * 29)\n  .map(i => i * 30)\n  .map(i => i * 31)\n  .map(i => i * 32)\n  .map(i => i * 33)\n  .map(i => i * 34)\n  .map(i => i * 35)\n  .map(i => i * 36)\n  .map(i => i * 37)\n  .map(i => i * 38)\n  .map(i => i * 39)\n  .map(i => i * 40)\n  .map(i => i * 41)\n  .map(i => i * 42)\n  .map(i => i"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}