{"name": "HumanEval_103_rounded_avg", "language": "fs", "prompt": "//You are given two positive integers n and m, and your task is to compute the\n// average of the integers from n through m (including n and m). \n// Round the answer to the nearest integer and convert that to binary.\n// If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20, 33) => \"0b11010\"\nlet rounded_avg n m = \n", "tests": "let test() = \n  let candidate = rounded_avg\n  assert (candidate 1 5 = \"0b11\")\n  assert (candidate 7 13 = \"0b1010\")\n  assert (candidate 964 977 = \"0b1111001010\")\n  assert (candidate 996 997 = \"0b1111100100\")\n  assert (candidate 560 851 = \"0b1011000010\")\n  assert (candidate 185 546 = \"0b101101110\")\n  assert (candidate 362 496 = \"0b110101101\")\n  assert (candidate 350 902 = \"0b1001110010\")\n  assert (candidate 197 233 = \"0b11010111\")\n  assert (candidate 7 5 = -1)\n  assert (candidate 5 1 = -1)\n  assert (candidate 5 5 = \"0b101\")\n  0\n\ntest()", "completions": ["{\n\tn: function(n, m) {\n\t\tif (n < m) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (n > m) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn n % m;\n\t},\n\tm: function(n, m) {\n\t\tif (n < m) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (n > m) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn n % m;\n\t}\n}", "{\n    n: function(n, m) {\n        if (n === m) return 0;\n        if (n > m) return -1;\n        return n % 2 === 0 ? n / 2 : -1;\n    },\n    m: function(n, m) {\n        if (n === m) return 0;\n        if (n > m) return -1;\n        return n % 2 === 0 ? n / 2 : -1;\n    }\n}", "{\n\tn: function(n, m) {\n\t\tif (n < m) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn n % m;\n\t\t}\n\t},\n\tm: function(n, m) {\n\t\tif (n < m) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn n % m;\n\t\t}\n\t}\n}", "{\n    n: 1,\n    m: 5\n}", "{\n\tn: 1,\n\tm: 5\n};", "{\n    n: 1,\n    m: 5\n}", "{\n    n: 1,\n    m: 5\n}", "{\n    n: function(n, m) {\n        if (n === 0) {\n            return m;\n        }\n        if (n === 1) {\n            return m;\n        }\n        if (n === 2) {\n            return m;\n        }\n        if (n === 3) {\n            return m;\n        }\n        if (n === 4) {\n            return m;\n        }\n        if (n === 5) {\n            return m;\n        }\n        if (n === 6) {\n            return m;\n        }\n        if (n === 7) {\n            return m;\n        }\n        if (n === 8) {\n            return m;\n        }\n        if (n === 9) {\n            return m;\n        }\n        if (n === 10) {\n            return m;\n        }\n        if (n === 11) {\n            return m;\n        }\n        if (n === 12) {\n            return m;\n        }\n        if (n === 13) {\n            return m;\n        }\n        if (n === 14) {\n            return m;\n        }\n        if (n === 15) {\n            return m;\n        }\n        if (n === 16) {\n            return m;\n        }\n        if (n === 17) {\n            return m;\n        }\n        if (n === 18) {\n            return m;\n        }\n        if (n === 19) {\n            return m;\n        }\n        if (n === 20) {\n            return m;\n        }\n        if (n === 21) {\n            return m;\n        }\n        if (n === 22) {\n            return m;\n        }\n        if (n === 23) {\n            return m;\n        }\n        if (n === 24) {\n            return m;\n        }\n        if (n === 25) {\n            return m;\n        }\n        if (n === 26) {\n            return m;\n        }\n        if (n === 27) {\n            return m;\n        }\n        if (n === 28) {\n            return m;\n        }\n        if (n === 29", "{\n    n: 0,\n    m: 0\n}", "{\n    n: 1,\n    m: 5\n}", "{\n    n: 0,\n    m: 0\n};", "{\n\tn: function(n, m) {\n\t\tif (n < m) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (n > m) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn (n - m) / (n - m + 1);\n\t},\n\tm: function(n, m) {\n\t\tif (n < m) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (n > m) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn (n - m) / (n - m + 1);\n\t}\n}", "{\n    n: 1,\n    m: 5\n}", "{\n    n: 1,\n    m: 5\n}", "{\n    n: 1,\n    m: 5\n}", "{\n\tn: 1,\n\tm: 5,\n\tavg: 0\n};", "{\n    n: 1,\n    m: 5,\n    avg: 0\n};", "{\n    n: 1,\n    m: 5,\n    avg: 0\n};", "{\n\tn: 1,\n\tm: 5\n};", "{\n    n: function(n) {\n        return n % 2 === 0 ? n : -1;\n    },\n    m: function(m) {\n        return m % 2 === 0 ? m : -1;\n    }\n}"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}