{"name": "HumanEval_35_max_element", "language": "fs", "prompt": "//Return maximum element in the list.\n// >>> max_element([1, 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n// 123\nlet max_element l = \n", "tests": "let test() = \n  let candidate = max_element\n  assert (candidate [1; 2; 3] = 3)\n  assert (candidate [5; 3; -5; 2; -3; 3; 9; 0; 124; 1; -10] = 124)\n  0\n\ntest()", "completions": ["  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];", "  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];", "  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]", "  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]", "  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]", "// >>> max_element([1, 2, 3])", "  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]", "  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];", "  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];", "  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];", "  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];", "  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];", "  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]", "  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];", "  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];", "  [1, 2, 3]\n  .map(x => x)\n  .max()\n  .value;", "  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];", "  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];", "  [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]", "    [1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];"], "stop_tokens": ["\n(*", "\n//", "\ntype", "\n\n"]}