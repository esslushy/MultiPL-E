{
  "name": "HumanEval_31_is_prime",
  "language": "fs",
  "prompt": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n",
  "tests": "let test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_rec (n: int) = \n        if n = 0 then true\n        elif n % 2 = 0 then is_prime_rec (n / 2)\n        else false\n    is_prime_rec n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_n (n: int) = \n        if n = 0 then true\n        elif n = 1 then false\n        elif n = 2 then true\n        elif n = 3 then true\n        elif n = 4 then true\n        elif n = 5 then true\n        elif n = 6 then true\n        elif n = 7 then true\n        elif n = 8 then true\n        elif n = 9 then true\n        elif n = 10 then true\n        elif n = 11 then true\n        elif n = 12 then true\n        elif n = 13 then true\n        elif n = 14 then true\n        elif n = 15 then true\n        elif n = 16 then true\n        elif n = 17 then true\n        elif n = 18 then true\n        elif n = 19 then true\n        elif n = 20 then true\n        elif n = 21 then true\n        elif n = 22 then true\n        elif n = 23 then true\n        elif n = 24 then true\n        elif n = 25 then true\n        elif n = 26 then true\n        elif n = 27 then true\n        elif n = 28 then true\n        elif n = 29 then true\n        elif n = 30 then true\n        elif n = 31 then true\n        elif n = 32 then true\n        elif n = 33 then true\n        elif n = 34 then true\n        elif n = 35 then true\n        elif n = 36 then true\n        elif n = 37 then true\n        elif n = 38 then true\n        elif n = 39 then true\n        elif n = 40 then true\n        elif n = 41 then true\n        elif n = 42 then true\n        elif n = 43 then true\n        elif n = 44 then true\n        elif n = 45 then true\n        elif n = 46 then true\n        elif n = 47 then true\n        elif n = 48 then true\n        elif n = 49 then true\n        elif n = 50 then true\n        elif n = 51 then true\n        elif n = 52 then true\n        elif n = 53 then true\n        elif n = 54 then true\n        el\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477002,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp5hlu5vc0.fsx(17,5): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be the final code element in a block. Consider giving this block an explicit result.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec check_prime n = \n        if n < 2 then false\n        elif n % 2 = 0 then check_prime (n / 2)\n        else check_prime (n / 2) || check_prime (n / 3)\n    check_prime n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_rec (n: int) = \n        if n = 0 then true\n        elif n = 1 then false\n        elif n % 2 = 0 then is_prime_rec (n / 2)\n        else is_prime_rec (n / 2)\n    is_prime_rec n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_n (n: int) = \n        if n = 0 then true\n        elif n = 1 then false\n        else is_prime_n (n-1)\n    is_prime_n n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_n n = \n        if n = 0 then true\n        elif n = 1 then true\n        elif n % 2 = 0 then is_prime_n (n / 2)\n        else false\n    is_prime_n n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_n (n: int) = \n        if n = 0 then true\n        elif n % 2 = 0 then is_prime_n (n / 2)\n        else false\n    is_prime_n n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_n (n: int) = \n        if n = 0 then true\n        elif n = 1 then false\n        elif n = 2 then true\n        elif n = 3 then true\n        elif n = 4 then true\n        elif n = 5 then true\n        elif n = 6 then true\n        elif n = 7 then true\n        elif n = 8 then true\n        elif n = 9 then true\n        elif n = 10 then true\n        elif n = 11 then true\n        elif n = 12 then true\n        elif n = 13 then true\n        elif n = 14 then true\n        elif n = 15 then true\n        elif n = 16 then true\n        elif n = 17 then true\n        elif n = 18 then true\n        elif n = 19 then true\n        elif n = 20 then true\n        elif n = 21 then true\n        elif n = 22 then true\n        elif n = 23 then true\n        elif n = 24 then true\n        elif n = 25 then true\n        elif n = 26 then true\n        elif n = 27 then true\n        elif n = 28 then true\n        elif n = 29 then true\n        elif n = 30 then true\n        elif n = 31 then true\n        elif n = 32 then true\n        elif n = 33 then true\n        elif n = 34 then true\n        elif n = 35 then true\n        elif n = 36 then true\n        elif n = 37 then true\n        elif n = 38 then true\n        elif n = 39 then true\n        elif n = 40 then true\n        elif n = 41 then true\n        elif n = 42 then true\n        elif n = 43 then true\n        elif n = 44 then true\n        elif n = 45 then true\n        elif n = 46 then true\n        elif n = 47 then true\n        elif n = 48 then true\n        elif n = 49 then true\n        elif n = 50 then true\n        elif n = 51 then true\n        elif n = 52 then true\n        elif n = 53 then true\n        elif n = 54 then true\n        el\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477002,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp5hlu5vc0.fsx(17,5): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be the final code element in a block. Consider giving this block an explicit result.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_n (n: int) = \n        if n = 0 then true\n        elif n = 1 then true\n        elif n % 2 = 0 then is_prime_n (n / 2)\n        else false\n    is_prime_n n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_rec (n: int) =\n        if n = 0 then true\n        elif n = 1 then false\n        else is_prime_rec (n - 1)\n    is_prime_rec n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_n (n: int) = \n        if n < 0 then false\n        elif n = 0 then true\n        else\n            let n' = n - 1\n            if n' = 0 then false\n            else is_prime_n (n')\n    is_prime_n n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_n (n: int) = \n        if n = 0 then true\n        elif n % 2 = 0 then is_prime_n (n / 2)\n        else false\n    is_prime_n n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_n (n: int) = \n        if n = 0 then true\n        elif n % 2 = 0 then is_prime_n (n / 2)\n        else false\n    is_prime_n n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec check_prime n = \n        if n = 0 then true\n        elif n % 2 = 0 then check_prime (n / 2)\n        else check_prime (n / 2) && check_prime (n / 3)\n    check_prime n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_rec (n: int) =\n        if n = 0 then true\n        elif n = 1 then false\n        else\n            let mutable p = n\n            let mutable i = 1\n            while i <= p do\n                if n % i = 0 then\n                    p <- p - i\n                    i <- i + 1\n                else\n                    p <- p - i\n                    i <- i + 1\n            is_prime_rec p\n    is_prime_rec n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_rec (n: int) =\n        if n = 0 then true\n        elif n = 1 then false\n        elif n = 2 then false\n        elif n = 3 then false\n        elif n = 4 then false\n        elif n = 5 then false\n        elif n = 6 then false\n        elif n = 7 then false\n        elif n = 8 then false\n        elif n = 9 then false\n        elif n = 10 then false\n        elif n = 11 then false\n        elif n = 12 then false\n        elif n = 13 then false\n        elif n = 14 then false\n        elif n = 15 then false\n        elif n = 16 then false\n        elif n = 17 then false\n        elif n = 18 then false\n        elif n = 19 then false\n        elif n = 20 then false\n        elif n = 21 then false\n        elif n = 22 then false\n        elif n = 23 then false\n        elif n = 24 then false\n        elif n = 25 then false\n        elif n = 26 then false\n        elif n = 27 then false\n        elif n = 28 then false\n        elif n = 29 then false\n        elif n = 30 then false\n        elif n = 31 then false\n        elif n = 32 then false\n        elif n = 33 then false\n        elif n = 34 then false\n        elif n = 35 then false\n        elif n = 36 then false\n        elif n = 37 then false\n        elif n = 38 then false\n        elif n = 39 then false\n        elif n = 40 then false\n        elif n = 41 then false\n        elif n = 42 then false\n        elif n = 43 then false\n        elif n = 44 then false\n        elif n = 45 then false\n        elif n = 46 then false\n        elif n = 47 then false\n        elif n = 48 then false\n        elif n = 49 then false\n        elif n = 50 then false\n        elif n = 51 then false\n        elif n = 52 then false\n        elif n = 53 then false\n        elif n = 54 then false\n        elif\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477002,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpy73xk7fy.fsx(74,1): error FS0010: Incomplete structured construct at or before this point in if/then/else expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_n (n: int) = \n        if n = 0 then true\n        elif n % 2 = 0 then is_prime_n (n / 2)\n        else false\n    is_prime_n n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_rec (n: int) = \n        if n = 0 then true\n        elif n = 1 then false\n        else is_prime_rec (n - 1)\n    is_prime_rec n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_n (n: int) = \n        if n = 0 then true\n        elif n = 1 then false\n        else is_prime_n (n - 1)\n    is_prime_n n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477003,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime (n: int): bool  = \n    let rec is_prime_rec (n: int) = \n        if n = 0 then true\n        elif n = 1 then false\n        else \n            let rec is_prime_rec_n = \n                if n = 2 then true\n                elif n = 3 then false\n                else \n                    let rec is_prime_rec_n = \n                        if n = 4 then true\n                        elif n = 5 then false\n                        else \n                            let rec is_prime_rec_n = \n                                if n = 6 then true\n                                elif n = 7 then false\n                                else \n                                    let rec is_prime_rec_n = \n                                        if n = 8 then true\n                                        elif n = 9 then false\n                                        else \n                                            let rec is_prime_rec_n = \n                                                if n = 10 then true\n                                                elif n = 11 then false\n                                                else \n                                                    let rec is_prime_rec_n = \n                                                        if n = 12 then true\n                                                        elif n = 13 then false\n                                                        else \n                                                            let rec is_prime_rec_n = \n                                                                if n = 14 then true\n                                                                elif n = 15 then false\n                                                                else \n                                                                    let rec is_prime_rec_n = \n                                                                        if n = 16 then true\n                                                                        elif n = 17 then false\n                                                                        else \n                                                                            let rec is_prime_rec_n = \n                                                                                if n = 18 then true\n                                                                                elif n = 19 then false\n                                                                                else \n                                                                                    let rec is_prime_rec_n = \n                                                                                        if n = 20 then true\n                                                                                        elif n = 21 then false\n                                                                                        else \n                                                                                            let rec is_prime_rec_n = \n                                                                                               if n = 22 then true\n                                                                                               elif n = 23 then false\n                                                                                               else \n                                                                                                   let rec is_prime_rec_n = \n                                                                                                       if n = 24 then true\n                                                                                                       elif n = 25 then false\n                                                                                                       else \n                               \nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675477002,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpvj56fevh.fsx(70,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (67:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvj56fevh.fsx(70,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (67:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvj56fevh.fsx(87,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (67:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvj56fevh.fsx(87,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (67:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvj56fevh.fsx(87,6): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (67:104). Try indenting t",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}