{
  "name": "HumanEval_55_fib",
  "language": "fs",
  "prompt": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n",
  "tests": "let test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' n = \n        if n = 0 then 0 \n        else fib' (n-1) + fib' (n-2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' acc n = \n        if n = 0 then acc\n        else fib' (n-1) (n-1)\n    fib' 0 n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    if n <= 0 then 0\n    else\n        let rec fib' n =\n            if n = 0 then 0\n            else fib' (n - 1) + fib' (n - 2)\n        fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' n = \n        if n = 0 then 0\n        else fib' (n-1) + fib' (n-2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib_n (n: int) = \n        if n = 0 then 1\n        elif n = 1 then 1\n        elif n = 2 then 1\n        elif n = 3 then 1\n        elif n = 4 then 1\n        elif n = 5 then 1\n        elif n = 6 then 1\n        elif n = 7 then 1\n        elif n = 8 then 1\n        elif n = 9 then 1\n        elif n = 10 then 1\n        elif n = 11 then 1\n        elif n = 12 then 1\n        elif n = 13 then 1\n        elif n = 14 then 1\n        elif n = 15 then 1\n        else fib_n (n-1)\n    fib_n n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' acc n = \n        if n <= 0 then acc\n        else fib' (n-1) (n-1)\n    fib' 0 n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    if n = 0 then 0\n    else\n        let rec fib' (n: int) =\n            if n = 0 then 0\n            else fib' (n - 1) + fib' (n - 2)\n        fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' acc = \n        if n = 0 then acc\n        else fib' (acc + fib' (n-1))\n    fib' 0\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' (n: int) = \n        if n = 0 then 1\n        elif n = 1 then 1\n        else fib' (n - 1) + fib' (n - 2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' acc =\n        if n = 0 then acc\n        else fib' (acc + fib' (acc + 1))\n    fib' 0\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' acc = \n        if n = 0 then acc\n        else fib' (n - 1) + fib' (n - 2)\n    fib' 0\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' (n: int) = \n        if n = 0 then 1\n        else fib' (n - 1) + fib' (n - 2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' acc = \n        if n = 0 then acc\n        else fib' (acc + fib' (acc + 1))\n    fib' 0\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' acc = \n        if n = 0 then acc\n        else fib' (acc + fib' (acc + 1))\n    fib' 0\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' (n: int) = \n        if n < 0 then 0\n        elif n = 0 then 1\n        else fib' (n - 1) + fib' (n - 2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' acc = \n        if n = 0 then acc\n        else fib' (fib' (acc + 1) (n - 1))\n    fib' 1\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp49mveg9p.fsx(11,20): error FS0001: Type mismatch. Expecting a\n    ''a -> 'b'    \nbut given a\n    ''b'    \nThe types ''a' and ''b -> 'a' cannot be unified.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' n = \n        if n < 0 then 0 \n        else \n            let fib' = fib' (n-1)\n            fib' (n-1) + fib'(n-1)\n    fib' (n-1)\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpl6gvj7wz.fsx(13,13): error FS0003: This value is not a function and cannot be applied.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' (n: int) = \n        if n < 0 then failwith \"n < 0\"\n        elif n = 0 then 0\n        else fib' (n-1) + fib' (n-2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib_n n = \n        if n = 0 then 0\n        else fib_n (n-1) + fib_n (n-2)\n    fib_n n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476989,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib (n: int): int  = \n    let rec fib' acc = \n        if n = 0 then acc\n        else fib' (fib' (acc + 1))\n    fib' 1\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675476990,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}