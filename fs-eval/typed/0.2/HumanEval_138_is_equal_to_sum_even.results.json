{
  "name": "HumanEval_138_is_equal_to_sum_even",
  "language": "fs",
  "prompt": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n",
  "tests": "let test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) = \n        if n = 0 then true\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (n / 2)\n        else false\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) = \n        if n = 0 then true\n        elif n = 1 then false\n        elif n = 2 then false\n        elif n = 3 then false\n        elif n = 4 then false\n        elif n = 5 then false\n        elif n = 6 then false\n        elif n = 7 then false\n        elif n = 8 then false\n        else is_equal_to_sum_even_rec (n - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) = \n        if n = 0 then true\n        elif n % 4 = 0 then is_equal_to_sum_even_rec (n / 4)\n        else is_equal_to_sum_even_rec (n / 2)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) = \n        if n = 0 then false\n        elif n = 1 then true\n        elif n = 2 then true\n        elif n = 3 then true\n        elif n = 4 then true\n        elif n = 5 then true\n        elif n = 6 then true\n        elif n = 7 then true\n        elif n = 8 then true\n        else false\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_sum_even (n: int) = \n        if n = 0 then true\n        elif n % 2 = 0 then is_sum_even (n / 2)\n        else false\n    is_sum_even n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) =\n        if n = 0 then false\n        elif n = 1 then true\n        elif n = 2 then true\n        elif n = 3 then true\n        elif n = 4 then true\n        elif n = 5 then true\n        elif n = 6 then true\n        elif n = 7 then true\n        elif n = 8 then true\n        else is_equal_to_sum_even_rec (n - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) (acc: int) = \n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (n - 1) (acc + 1)\n    is_equal_to_sum_even_rec n 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476836,
      "stdout": "",
      "stderr": "\n\n/tmp/tmppvncripz.fsx(10,5): error FS0001: This expression was expected to have type\n    'bool'    \nbut here has type\n    'int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) =\n        if n = 0 then\n            true\n        else\n            let n' = n - 1\n            if n' = 0 then\n                false\n            else\n                is_equal_to_sum_even_rec (n' - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) =\n        if n = 0 then\n            true\n        else\n            let n' = n - 1\n            if n' = 0 then\n                false\n            else\n                is_equal_to_sum_even_rec (n' - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_n (n: int) =\n        if n = 0 then\n            true\n        elif n = 1 then\n            false\n        else\n            is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) (acc: int): bool = \n        if n = 0 then acc = 0\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (n / 2) (acc + 1)\n        else is_equal_to_sum_even_rec (n / 2) (acc + 1)\n    is_equal_to_sum_even_rec n 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) = \n        if n = 0 then \n            true\n        elif n = 1 then \n            false\n        elif n = 2 then \n            false\n        elif n = 3 then \n            false\n        elif n = 4 then \n            false\n        elif n = 5 then \n            false\n        elif n = 6 then \n            false\n        elif n = 7 then \n            false\n        elif n = 8 then \n            false\n        else \n            is_equal_to_sum_even_rec (n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) = \n        if n = 0 then false\n        elif n = 1 then true\n        elif n = 2 then true\n        elif n = 3 then true\n        elif n = 4 then true\n        elif n = 5 then true\n        elif n = 6 then true\n        elif n = 7 then true\n        elif n = 8 then true\n        else is_equal_to_sum_even_rec (n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_n (n: int) = \n        if n = 0 then false\n        elif n = 1 then true\n        elif n = 2 then true\n        elif n = 3 then true\n        elif n = 4 then true\n        elif n = 5 then true\n        elif n = 6 then true\n        elif n = 7 then true\n        elif n = 8 then true\n        else false\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_n (n: int) = \n        if n = 0 then true\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else false\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) = \n        if n = 0 then true\n        elif n = 1 then false\n        elif n = 2 then false\n        elif n = 3 then false\n        elif n = 4 then false\n        elif n = 5 then false\n        elif n = 6 then false\n        elif n = 7 then false\n        elif n = 8 then false\n        else is_equal_to_sum_even_rec (n - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_sum_even (n: int) = \n        if n = 0 then \n            true\n        elif n % 2 = 0 then \n            is_sum_even (n / 2)\n        else \n            is_sum_even (n / 2) && is_sum_even (n / 2 - 1)\n    is_sum_even n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) = \n        if n = 0 then true\n        elif n = 1 then false\n        else is_equal_to_sum_even_rec (n - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_sum_even (n: int) =\n        if n = 0 then true\n        elif n % 2 = 0 then is_sum_even (n / 2)\n        else false\n    is_sum_even n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even (n: int): bool  = \n    let rec is_equal_to_sum_even_rec (n: int) = \n        if n = 0 then true\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (n / 2)\n        else is_equal_to_sum_even_rec (n / 2)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675476837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}