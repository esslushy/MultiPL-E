{
  "name": "HumanEval_106_f",
  "language": "fs",
  "prompt": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n",
  "tests": "let test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial i =\n        if i = 0 then 1\n        else i * factorial (i - 1)\n    factorial n\nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpl9n1btdc.fsx(15,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    ''a list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial n = \n        if n = 0 then []\n        else \n            let rec factorial' n = \n                if n = 1 then []\n                else \n                    let rec factorial'' n = \n                        if n = 1 then []\n                        else \n                            let rec factorial'' n = \n                                if n = 1 then []\n                                else \n                                    let rec factorial'' n = \n                                        if n = 1 then []\n                                        else \n                                            let rec factorial'' n = \n                                                if n = 1 then []\n                                                else \n                                                    let rec factorial'' n = \n                                                        if n = 1 then []\n                                                        else \n                                                            let rec factorial'' n = \n                                                                if n = 1 then []\n                                                                else \n                                                                    let rec factorial'' n = \n                                                                        if n = 1 then []\n                                                                        else \n                                                                            let rec factorial'' n = \n                                                                                if n = 1 then []\n                                                                                else \n                                                                                    let rec factorial'' n = \n                                                                                        if n = 1 then []\n                                                                                        else \n                                                                                            let rec factorial'' n = \n                                                                                               if n = 1 then []\n                                                                                               else \n                                                                                                   let rec factorial'' n = \n                                                                                                       if n = 1 then []\n                                                                                                       else \n                                                                                                           let rec factorial'' n = \n                                                                                                               if n = 1 then []\n                                                                                                               else \n                                                                                                                   let rec factorial'' n = \n                                                                                                                       if n = 1 then []\n                                                                                                                       else \n                                                                                                                           let rec factorial'' n = \n                                                                                                                              if n = 1 then []\n                                                                                                                              else \n                                                                                                                                  let rec factorial'' n = \n                                                                                                                                      if n = 1 then []\n                                                                                                                                      else \n                                                                                                                                          let rec factorial'' n = \n                                                                                                                                              if n = 1 then []\n                                                                                                                                              else \nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpf5y001cc.fsx(63,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf5y001cc.fsx(63,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf5y001cc.fsx(71,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf5y001cc.fsx(71,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf5y001cc.fsx(71,6): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial n = \n        if n = 0 then []\n        else \n            let i = n / 2\n            let rest = factorial (i + 1)\n            if i % 2 = 0 then rest @ [1]\n            else rest @ [1] @ (factorial (i + 1))\n    factorial n\nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial i =\n        if i = 0 then []\n        else\n            let rec factorial' i =\n                if i = n then []\n                else\n                    let rec factorial'' i =\n                        if i = 0 then []\n                        else\n                            let rec factorial'' i =\n                                if i = n then []\n                                else\n                                    let rec factorial'' i =\n                                        if i = 0 then []\n                                        else\n                                            let rec factorial'' i =\n                                                if i = n then []\n                                                else\n                                                    let rec factorial'' i =\n                                                        if i = 0 then []\n                                                        else\n                                                            let rec factorial'' i =\n                                                                if i = n then []\n                                                                else\n                                                                    let rec factorial'' i =\n                                                                        if i = 0 then []\n                                                                        else\n                                                                            let rec factorial'' i =\n                                                                                if i = n then []\n                                                                                else\n                                                                                    let rec factorial'' i =\n                                                                                        if i = 0 then []\n                                                                                        else\n                                                                                            let rec factorial'' i =\n                                                                                               if i = n then []\n                                                                                               else\n                                                                                                   let rec factorial'' i =\n                                                                                                       if i = n then []\n                                                                                                       else\n                                                                                                           let rec factorial'' i =\n                                                                                                               if i = n then []\n                                                                                                               else\n                                                                                                                   let rec factorial'' i =\n                                                                                                                       if i = n then []\n                                                                                                                       else\n                                                                                                                           let rec factorial'' i =\n                                                                                                                              if i = n then []\n                                                                                                                              else\n                                                                                                                                  let rec factorial'' i =\n                                                                                                                                      if i = n then []\n                                                                                                                                      else\n                                                                                                                                          let rec factorial'' i =\n                                                                                                                                              if i = n then []\n                                                                                                                                              else\n                                                                                                                                                  let rec factorial'' i =\n                                                                                                                                                      if i = n then []\n                                                                                                                                                      else\n                                                              \nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxcrkg0u8.fsx(67,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:151). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxcrkg0u8.fsx(67,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:151). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxcrkg0u8.fsx(75,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:151). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxcrkg0u8.fsx(75,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:151). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxcrkg0u8.fsx(75,6): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:151). Try indenting t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial i = \n        if i = 0 then 1\n        else i * factorial (i - 1)\n    factorial n\nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8lv0txz8.fsx(15,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    ''a list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial n = \n        if n = 0 then []\n        else \n            let rec factorial' n = \n                if n = 1 then []\n                else \n                    let rec factorial'' n = \n                        if n = 2 then []\n                        else \n                            let rec factorial'' n = \n                                if n = 3 then []\n                                else \n                                    let rec factorial'' n = \n                                        if n = 4 then []\n                                        else \n                                            let rec factorial'' n = \n                                                if n = 5 then []\n                                                else \n                                                    let rec factorial'' n = \n                                                        if n = 6 then []\n                                                        else \n                                                            let rec factorial'' n = \n                                                                if n = 7 then []\n                                                                else \n                                                                    let rec factorial'' n = \n                                                                        if n = 8 then []\n                                                                        else \n                                                                            let rec factorial'' n = \n                                                                                if n = 9 then []\n                                                                                else \n                                                                                    let rec factorial'' n = \n                                                                                        if n = 10 then []\n                                                                                        else \n                                                                                            let rec factorial'' n = \n                                                                                               if n = 11 then []\n                                                                                               else \n                                                                                                   let rec factorial'' n = \n                                                                                                       if n = 12 then []\n                                                                                                       else \n                                                                                                           let rec factorial'' n = \n                                                                                                               if n = 13 then []\n                                                                                                               else \n                                                                                                                   let rec factorial'' n = \n                                                                                                                       if n = 14 then []\n                                                                                                                       else \n                                                                                                                           let rec factorial'' n = \n                                                                                                                              if n = 15 then []\n                                                                                                                              else \n                                                                                                                                  let rec factorial'' n = \n                                                                                                                                      if n = 16 then []\n                                                                                                                                      else \n                                                                                                                                          let rec factorial'' n = \n                                                                                                                                              if n = 17 then []\n                                                                                                                                              else \nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7w8eqn_x.fsx(63,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7w8eqn_x.fsx(63,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7w8eqn_x.fsx(71,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7w8eqn_x.fsx(71,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7w8eqn_x.fsx(71,6): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial n =\n        if n = 0 then []\n        else\n            let rec factorial' n =\n                if n = 1 then []\n                else\n                    let rec factorial' n =\n                        if n = 0 then []\n                        else\n                            let rec factorial' n =\n                                if n = 1 then []\n                                else\n                                    let rec factorial' n =\n                                        if n = 0 then []\n                                        else\n                                            let rec factorial' n =\n                                                if n = 1 then []\n                                                else\n                                                    let rec factorial' n =\n                                                        if n = 0 then []\n                                                        else\n                                                            let rec factorial' n =\n                                                                if n = 1 then []\n                                                                else\n                                                                    let rec factorial' n =\n                                                                        if n = 0 then []\n                                                                        else\n                                                                            let rec factorial' n =\n                                                                                if n = 1 then []\n                                                                                else\n                                                                                    let rec factorial' n =\n                                                                                        if n = 0 then []\n                                                                                        else\n                                                                                            let rec factorial' n =\n                                                                                               if n = 1 then []\n                                                                                               else\n                                                                                                   let rec factorial' n =\n                                                                                                       if n = 0 then []\n                                                                                                       else\n                                                                                                           let rec factorial' n =\n                                                                                                               if n = 1 then []\n                                                                                                               else\n                                                                                                                   let rec factorial' n =\n                                                                                                                       if n = 0 then []\n                                                                                                                       else\n                                                                                                                           let rec factorial' n =\n                                                                                                                              if n = 1 then []\n                                                                                                                              else\n                                                                                                                                  let rec factorial' n =\n                                                                                                                                      if n = 0 then []\n                                                                                                                                      else\n                                                                                                                                          let rec factorial' n =\n                                                                                                                                              if n = 1 then []\n                                                                                                                                              else\n                                                                                                                                                  let rec factorial' n =\n                                                                                                                                                  if n = 0 then []\n                                                                                                                                                  else\n                                                                                                                                                  let rec factorial' n =\n                                                                                                                                                  if\nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj0szqvd_.fsx(64,147): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (63:147). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpj0szqvd_.fsx(64,147): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (63:147). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpj0szqvd_.fsx(67,147): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (66:147). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpj0szqvd_.fsx(67,147): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (66:147). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpj0szqvd_.fsx(68,1): error FS0010: Incomplete structured construct at or before this point in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial i = \n        if i = 0 then 1\n        elif i % 2 = 0 then 1 + factorial (i / 2)\n        else i * factorial (i / 2)\n    factorial n\nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprv6n1afu.fsx(16,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    ''a list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial i = \n        if i = 0 then 1\n        else i * factorial (i - 1)\n    factorial n\nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8lv0txz8.fsx(15,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    ''a list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial i =\n        if i = 0 then 1\n        else\n            let rec factorial' i =\n                if i = 1 then 1\n                else\n                    let rec factorial'' i =\n                        if i = 1 then 1\n                        else\n                            let rec factorial'' i =\n                                if i = 1 then 1\n                                else\n                                    let rec factorial'' i =\n                                        if i = 1 then 1\n                                        else\n                                            let rec factorial'' i =\n                                                if i = 1 then 1\n                                                else\n                                                    let rec factorial'' i =\n                                                        if i = 1 then 1\n                                                        else\n                                                            let rec factorial'' i =\n                                                                if i = 1 then 1\n                                                                else\n                                                                    let rec factorial'' i =\n                                                                        if i = 1 then 1\n                                                                        else\n                                                                            let rec factorial'' i =\n                                                                                if i = 1 then 1\n                                                                                else\n                                                                                    let rec factorial'' i =\n                                                                                        if i = 1 then 1\n                                                                                        else\n                                                                                            let rec factorial'' i =\n                                                                                               if i = 1 then 1\n                                                                                               else\n                                                                                                   let rec factorial'' i =\n                                                                                                       if i = 1 then 1\n                                                                                                       else\n                                                                                                           let rec factorial'' i =\n                                                                                                               if i = 1 then 1\n                                                                                                               else\n                                                                                                                   let rec factorial'' i =\n                                                                                                                       if i = 1 then 1\n                                                                                                                       else\n                                                                                                                           let rec factorial'' i =\n                                                                                                                              if i = 1 then 1\n                                                                                                                              else\n                                                                                                                                  let rec factorial'' i =\n                                                                                                                                      if i = 1 then 1\n                                                                                                                                      else\n                                                                                                                                          let rec factorial'' i =\n                                                                                                                                              if i = 1 then 1\n                                                                                                                                              else\n                                                                                                                                                  let rec factorial'' i =\n                                                                                                                                                      if i = 1 then 1\n                                                                                                                                                      else\n                                                              \nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpzmr_w6_a.fsx(67,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:151). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpzmr_w6_a.fsx(67,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:151). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpzmr_w6_a.fsx(75,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:151). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpzmr_w6_a.fsx(75,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:151). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpzmr_w6_a.fsx(75,6): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:151). Try indenting t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial n =\n        if n = 0 then [1]\n        else\n            let rec factorial' n =\n                if n = 0 then [1]\n                else\n                    let rec factorial'' n =\n                        if n = 0 then [1]\n                        else\n                            let rec factorial''' n =\n                                if n = 0 then [1]\n                                else\n                                    let rec factorial'''' n =\n                                        if n = 0 then [1]\n                                        else\n                                            let rec factorial''''' n =\n                                                if n = 0 then [1]\n                                                else\n                                                    let rec factorial'''''' n =\n                                                        if n = 0 then [1]\n                                                        else\n                                                            let rec factorial''''''' n =\n                                                                if n = 0 then [1]\n                                                                else\n                                                                    let rec factorial''''''' n =\n                                                                        if n = 0 then [1]\n                                                                        else\n                                                                            let rec factorial''''''''' n =\n                                                                                if n = 0 then [1]\n                                                                                else\n                                                                                    let rec factorial''''''''' n =\n                                                                                        if n = 0 then [1]\n                                                                                        else\n                                                                                            let rec factorial''''''''''' n =\n                                                                                               if n = 0 then [1]\n                                                                                               else\n                                                                                                   let rec factorial''''''''''' n =\n                                                                                                       if n = 0 then [1]\n                                                                                                       else\n                                                                                                           let rec factorial''''''''''''' n =\n                                                                                                               if n = 0 then [1]\n                                                                                                               else\n                                                                                                                   let rec factorial''''''''''''' n =\n                                                                                                                   if n = 0 then [1]\n                                                                                                                   else\n                                                                                                                       let rec factorial''''''''''''''' n =\n                                                                                                                       if n = 0 then [1]\n                                                                                                                       else\n                                                                                                                           let rec factorial''''''''''''''''' n =\n                                                                                                                       if n = 0 then [1]\n                                                                                             \nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkk57sec2.fsx(52,116): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (51:116). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpkk57sec2.fsx(52,116): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (51:116). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpkk57sec2.fsx(55,120): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (54:120). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpkk57sec2.fsx(55,120): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (54:120). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpkk57sec2.fsx(58,120): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (57:124). Try i",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial i =\n        if i = 0 then 1\n        else\n            let x = i * (i - 1) / 2\n            factorial (x - 1)\n    factorial n\nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpg5qol78f.fsx(17,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    ''a list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial n =\n        if n = 0 then []\n        else\n            let rec factorial' n =\n                if n = 1 then []\n                else\n                    let rec factorial'' n =\n                        if n = 1 then []\n                        else\n                            let rec factorial'' n =\n                                if n = 1 then []\n                                else\n                                    let rec factorial'' n =\n                                        if n = 1 then []\n                                        else\n                                            let rec factorial'' n =\n                                                if n = 1 then []\n                                                else\n                                                    let rec factorial'' n =\n                                                        if n = 1 then []\n                                                        else\n                                                            let rec factorial'' n =\n                                                                if n = 1 then []\n                                                                else\n                                                                    let rec factorial'' n =\n                                                                        if n = 1 then []\n                                                                        else\n                                                                            let rec factorial'' n =\n                                                                                if n = 1 then []\n                                                                                else\n                                                                                    let rec factorial'' n =\n                                                                                        if n = 1 then []\n                                                                                        else\n                                                                                            let rec factorial'' n =\n                                                                                               if n = 1 then []\n                                                                                               else\n                                                                                                   let rec factorial'' n =\n                                                                                                       if n = 1 then []\n                                                                                                       else\n                                                                                                           let rec factorial'' n =\n                                                                                                               if n = 1 then []\n                                                                                                               else\n                                                                                                                   let rec factorial'' n =\n                                                                                                                       if n = 1 then []\n                                                                                                                       else\n                                                                                                                           let rec factorial'' n =\n                                                                                                                              if n = 1 then []\n                                                                                                                              else\n                                                                                                                                  let rec factorial'' n =\n                                                                                                                                      if n = 1 then []\n                                                                                                                                      else\n                                                                                                                                          let rec factorial'' n =\n                                                                                                                                              if n = 1 then []\n                                                                                                                                              else\n                                                                                                                                                  let rec factorial'' n =\n                                                                                                                                                  if n = 1 then []\n                                                                                                                                                  else\n                                                              \nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxxxh93cx.fsx(64,147): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (63:147). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxxxh93cx.fsx(64,147): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (63:147). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxxxh93cx.fsx(67,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:147). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxxxh93cx.fsx(67,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:147). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxxxh93cx.fsx(75,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:147). Try indenti",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial i =\n        if i = 0 then\n            [1]\n        else\n            let rec factorial' i =\n                if i = n then\n                    [1]\n                else\n                    let rec factorial'' i =\n                        if i = n then\n                            [1]\n                        else\n                            let rec factorial'' i =\n                                if i = n then\n                                    [1]\n                                else\n                                    let rec factorial'' i =\n                                        if i = n then\n                                            [1]\n                                        else\n                                            let rec factorial'' i =\n                                                if i = n then\n                                                    [1]\n                                                else\n                                                    let rec factorial'' i =\n                                                        if i = n then\n                                                            [1]\n                                                        else\n                                                            let rec factorial'' i =\n                                                                if i = n then\n                                                                    [1]\n                                                                else\n                                                                    let rec factorial'' i =\n                                                                        if i = n then\n                                                                            [1]\n                                                                        else\n                                                                            let rec factorial'' i =\n                                                                                if i = n then\n                                                                                    [1]\n                                                                                else\n                                                                                    let rec factorial'' i =\n                                                                                        if i = n then\n                                                                                            [1]\n                                                                                        else\n                                                                                            let rec factorial'' i =\n                                                                                               if i = n then\n                                                                                                   [1]\n                                                                                               else\n                                                                                                   let rec factorial'' i =\n                                                                                                       if i = n then\n                                                                                                           [1]\n                                                                                                       else\n                                                                                                           let rec factorial'' i =\n                                                                                                               if i = n then\n                                                                                                                   [1]\n                                                                                                               else\n                                                                                                                   let rec factorial'' i =\n                                                                                                                       if i = n then\n                                                                                                                           [1]\n                                                                                                                       else\n                                                                                                                           let rec factorial'' i =\n                                                                                                                              if i = n then\n                                                                                                                                  [1]\n                                                                                                                              else\n                                                                                                                                  let rec factorial\nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7m4as0zz.fsx(74,1): error FS0010: Incomplete structured construct at or before this point in binding. Expected '=' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial n =\n        if n = 0 then []\n        else\n            let rec factorial' n =\n                if n = 1 then []\n                else\n                    let rec factorial'' n =\n                        if n = 1 then []\n                        else\n                            let rec factorial'' n =\n                                if n = 1 then []\n                                else\n                                    let rec factorial'' n =\n                                        if n = 1 then []\n                                        else\n                                            let rec factorial'' n =\n                                                if n = 1 then []\n                                                else\n                                                    let rec factorial'' n =\n                                                        if n = 1 then []\n                                                        else\n                                                            let rec factorial'' n =\n                                                                if n = 1 then []\n                                                                else\n                                                                    let rec factorial'' n =\n                                                                        if n = 1 then []\n                                                                        else\n                                                                            let rec factorial'' n =\n                                                                                if n = 1 then []\n                                                                                else\n                                                                                    let rec factorial'' n =\n                                                                                        if n = 1 then []\n                                                                                        else\n                                                                                            let rec factorial'' n =\n                                                                                               if n = 1 then []\n                                                                                               else\n                                                                                                   let rec factorial'' n =\n                                                                                                       if n = 1 then []\n                                                                                                       else\n                                                                                                           let rec factorial'' n =\n                                                                                                               if n = 1 then []\n                                                                                                               else\n                                                                                                                   let rec factorial'' n =\n                                                                                                                       if n = 1 then []\n                                                                                                                       else\n                                                                                                                           let rec factorial'' n =\n                                                                                                                              if n = 1 then []\n                                                                                                                              else\n                                                                                                                                  let rec factorial'' n =\n                                                                                                                                      if n = 1 then []\n                                                                                                                                      else\n                                                                                                                                          let rec factorial'' n =\n                                                                                                                                              if n = 1 then []\n                                                                                                                                              else\n                                                                                                                                                  let rec factorial'' n =\n                                                                                                                                                  if n = 1 then []\n                                                                                                                                                  else\n                                                              \nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxxxh93cx.fsx(64,147): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (63:147). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxxxh93cx.fsx(64,147): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (63:147). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxxxh93cx.fsx(67,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:147). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxxxh93cx.fsx(67,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:147). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxxxh93cx.fsx(75,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (64:147). Try indenti",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial i =\n        if i = 0 then\n            1\n        else\n            i * factorial (i - 1)\n    factorial n\nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmploxueu_q.fsx(17,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    ''a list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial n =\n        if n = 0 then\n            [1]\n        else\n            let rec factorial' n =\n                if n = 1 then\n                    [1]\n                else\n                    let rec factorial'' n =\n                        if n = 2 then\n                            [1]\n                        else\n                            let rec factorial'' n =\n                                if n = 3 then\n                                    [1]\n                                else\n                                    let rec factorial'' n =\n                                        if n = 4 then\n                                            [1]\n                                        else\n                                            let rec factorial'' n =\n                                                if n = 5 then\n                                                    [1]\n                                                else\n                                                    let rec factorial'' n =\n                                                        if n = 6 then\n                                                            [1]\n                                                        else\n                                                            let rec factorial'' n =\n                                                                if n = 7 then\n                                                                    [1]\n                                                                else\n                                                                    let rec factorial'' n =\n                                                                        if n = 8 then\n                                                                            [1]\n                                                                        else\n                                                                            let rec factorial'' n =\n                                                                                if n = 9 then\n                                                                                    [1]\n                                                                                else\n                                                                                    let rec factorial'' n =\n                                                                                        if n = 10 then\n                                                                                            [1]\n                                                                                        else\n                                                                                            let rec factorial'' n =\n                                                                                               if n = 11 then\n                                                                                                   [1]\n                                                                                               else\n                                                                                                   let rec factorial'' n =\n                                                                                                       if n = 12 then\n                                                                                                           [1]\n                                                                                                       else\n                                                                                                           let rec factorial'' n =\n                                                                                                               if n = 13 then\n                                                                                                                   [1]\n                                                                                                               else\n                                                                                                                   let rec factorial'' n =\n                                                                                                                       if n = 14 then\n                                                                                                                           [1]\n                                                                                                                       else\n                                                                                                                           let rec factorial'' n =\n                                                                                                                              if n = 15 then\n                                                                                                                                  [1]\n                                                                                                                              else\n                                                                                                                                  let rec factorial\nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7_1d62s3.fsx(74,1): error FS0010: Incomplete structured construct at or before this point in binding. Expected '=' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial n =\n        if n = 0 then [1]\n        elif n % 2 = 0 then [n / 2]\n        else (n / 2) * factorial (n / 2)\n    factorial n\nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpl13coryb.fsx(12,24): error FS0001: The type 'int list' does not match the type 'int'\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial i =\n        if i = 0 then 1\n        else i * factorial (i - 1)\n    factorial n\nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpl9n1btdc.fsx(15,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    ''a list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Implement the function f that takes n as a parameter,\n// and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n// or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n// f(5) == [1, 2, 6, 24, 15]\nlet f n = \n    let rec factorial n = \n        if n = 0 then []\n        else \n            let rec factorial' n = \n                if n = 1 then []\n                else \n                    let rec factorial'' n = \n                        if n = 1 then []\n                        else \n                            let rec factorial'' n = \n                                if n = 1 then []\n                                else \n                                    let rec factorial'' n = \n                                        if n = 1 then []\n                                        else \n                                            let rec factorial'' n = \n                                                if n = 1 then []\n                                                else \n                                                    let rec factorial'' n = \n                                                        if n = 1 then []\n                                                        else \n                                                            let rec factorial'' n = \n                                                                if n = 1 then []\n                                                                else \n                                                                    let rec factorial'' n = \n                                                                        if n = 1 then []\n                                                                        else \n                                                                            let rec factorial'' n = \n                                                                                if n = 1 then []\n                                                                                else \n                                                                                    let rec factorial'' n = \n                                                                                        if n = 1 then []\n                                                                                        else \n                                                                                            let rec factorial'' n = \n                                                                                               if n = 1 then []\n                                                                                               else \n                                                                                                   let rec factorial'' n = \n                                                                                                       if n = 1 then []\n                                                                                                       else \n                                                                                                           let rec factorial'' n = \n                                                                                                               if n = 1 then []\n                                                                                                               else \n                                                                                                                   let rec factorial'' n = \n                                                                                                                       if n = 1 then []\n                                                                                                                       else \n                                                                                                                           let rec factorial'' n = \n                                                                                                                              if n = 1 then []\n                                                                                                                              else \n                                                                                                                                  let rec factorial'' n = \n                                                                                                                                      if n = 1 then []\n                                                                                                                                      else \n                                                                                                                                          let rec factorial'' n = \n                                                                                                                                              if n = 1 then []\n                                                                                                                                              else \nlet test() = \n  let candidate = f\n  assert (candidate 5 = [1; 2; 6; 24; 15])\n  assert (candidate 7 = [1; 2; 6; 24; 15; 720; 28])\n  assert (candidate 1 = [1])\n  assert (candidate 3 = [1; 2; 6])\n  0\n\ntest()",
      "timestamp": 1675481902,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpf5y001cc.fsx(63,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf5y001cc.fsx(63,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf5y001cc.fsx(71,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf5y001cc.fsx(71,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf5y001cc.fsx(71,6): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:143). Try indenting t",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}