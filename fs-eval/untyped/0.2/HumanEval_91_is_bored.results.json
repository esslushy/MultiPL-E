{
  "name": "HumanEval_91_is_bored",
  "language": "fs",
  "prompt": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n",
  "tests": "let test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    let rec is_bored_rec (s:string) =\n        match s with\n        | \".\" -> true\n        | \"?\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        \nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpv1qj4izq.fsx(10,5): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be the final code element in a block. Consider giving this block an explicit result.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    match S with\n    | \"I\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | _ -> false\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpg3r6kk6t.fsx(14,7): warning FS0026: This rule will never be matched\n\n\n\n/tmp/tmpg3r6kk6t.fsx(15,7): warning FS0026: This rule will never be matched\n\n\n\n/tmp/tmpg3r6kk6t.fsx(16,7): warning FS0026: This rule will never be matched\n\n\n\n/tmp/tmpg3r6kk6t.fsx(20,37): error FS0001: This expression was expected to have type\n    'bool'    \nbut here has type\n    'int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    match S with\n    | \"I\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    |\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7lx8x9si.fsx(84,1): error FS0010: Incomplete structured construct at or before this point in pattern matching\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    match S with\n    | \"I\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    |\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7lx8x9si.fsx(84,1): error FS0010: Incomplete structured construct at or before this point in pattern matching\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    match S with\n    | \"I\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | _ -> false\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpg3r6kk6t.fsx(14,7): warning FS0026: This rule will never be matched\n\n\n\n/tmp/tmpg3r6kk6t.fsx(15,7): warning FS0026: This rule will never be matched\n\n\n\n/tmp/tmpg3r6kk6t.fsx(16,7): warning FS0026: This rule will never be matched\n\n\n\n/tmp/tmpg3r6kk6t.fsx(20,37): error FS0001: This expression was expected to have type\n    'bool'    \nbut here has type\n    'int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    let rec is_bored_rec (S:string) = \n        match S.Length with\n        | 0 -> true\n        | _ -> \n            let mutable i = 0\n            while i < S.Length do\n                if S.[i] = '.' then\n                    i <- i + 1\n                elif S.[i] = '?' then\n                    i <- i + 1\n                elif S.[i] = '!' then\n                    i <- i + 1\n                else\n                    i <- i + 1\n            is_bored_rec S.[i..]\n    is_bored_rec S\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp1lpvl1hf.fsx(28,37): error FS0001: This expression was expected to have type\n    'bool'    \nbut here has type\n    'int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    let rec is_bored' s = \n        match s with\n        | '.' -> true\n        | '?' -> true\n        | '!' -> true\n        | _ -> false\n    is_bored' S\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkixw1vlv.fsx(19,21): error FS0001: This expression was expected to have type\n    'char'    \nbut here has type\n    'string'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    let rec loop (s:string) =\n        match s.Length with\n        | 0 -> true\n        | _ ->\n            let i = s.IndexOf('.')\n            if i > 0 then\n                let words = s.Substring(0, i)\n                let words = words.Split(' ')\n                if words.Length > 1 then\n                    let words = words.[1..]\n                    let words = words |> Seq.map (fun w -> w.Trim())\n                    words.Length = 1 && words.[0] = \"I\"\n                else\n                    words.Length = 1\n            else\n                false\n    loop S\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp0715mcnq.fsx(21,27): error FS0039: The type 'IEnumerable<_>' does not define the field, constructor or member 'Length'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    let rec is_bored' s = \n        match s with\n        | '.' -> true\n        | '?' -> true\n        | '!' -> true\n        | _ -> false\n    is_bored' S\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkixw1vlv.fsx(19,21): error FS0001: This expression was expected to have type\n    'char'    \nbut here has type\n    'string'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    let rec loop (s:string) =\n        if s.StartsWith(\".\") then\n            s.Substring(1)\n        elif s.StartsWith(\"?\") then\n            s.Substring(1)\n        elif s.StartsWith(\"!\") then\n            s.Substring(1)\n        else\n            s\n    loop S\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpivyji1ds.fsx(22,37): error FS0001: This expression was expected to have type\n    'string'    \nbut here has type\n    'int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    match S with\n    | \"I\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    |\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7lx8x9si.fsx(84,1): error FS0010: Incomplete structured construct at or before this point in pattern matching\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    match S with\n    | \"I\" -> true\n    | \"!\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | _ -> false\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpadd9c26m.fsx(14,7): warning FS0026: This rule will never be matched\n\n\n\n/tmp/tmpadd9c26m.fsx(18,37): error FS0001: This expression was expected to have type\n    'bool'    \nbut here has type\n    'int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    match S with\n    | \"I\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    |\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7lx8x9si.fsx(84,1): error FS0010: Incomplete structured construct at or before this point in pattern matching\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    match S with\n    | \"I\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    |\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7lx8x9si.fsx(84,1): error FS0010: Incomplete structured construct at or before this point in pattern matching\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    match S with\n    | \"I\" -> true\n    | \"!\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | _ -> false\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdrotfm_k.fsx(14,7): warning FS0026: This rule will never be matched\n\n\n\n/tmp/tmpdrotfm_k.fsx(15,7): warning FS0026: This rule will never be matched\n\n\n\n/tmp/tmpdrotfm_k.fsx(16,7): warning FS0026: This rule will never be matched\n\n\n\n/tmp/tmpdrotfm_k.fsx(20,37): error FS0001: This expression was expected to have type\n    'bool'    \nbut here has type\n    'int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    match S with\n    | \"I\" -> true\n    | \"!\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | \"?\" -> true\n    | _ -> false\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkndkb6nk.fsx(14,7): warning FS0026: This rule will never be matched\n\n\n\n/tmp/tmpkndkb6nk.fsx(15,7): warning FS0026: This rule will never be matched\n\n\n\n/tmp/tmpkndkb6nk.fsx(19,37): error FS0001: This expression was expected to have type\n    'bool'    \nbut here has type\n    'int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    match S with\n    | \"I\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    |\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7lx8x9si.fsx(84,1): error FS0010: Incomplete structured construct at or before this point in pattern matching\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    match S with\n    | \"I\" -> true\n    | \"?\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    | \"!\" -> true\n    |\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7lx8x9si.fsx(84,1): error FS0010: Incomplete structured construct at or before this point in pattern matching\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    let rec is_bored_s S = \n        match S with\n        | \".\" -> true\n        | \"?\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\"\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpvf8pbpv5.fsx(83,1): error FS0010: Incomplete structured construct at or before this point in pattern matching. Expected '->' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You'll be given a string of words, and your task is to count the number\n// of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n// 1\nlet is_bored S = \n    let rec loop s = \n        match s with\n        | \".\" -> true\n        | \"?\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        | \"!\" -> true\n        |\nlet test() = \n  let candidate = is_bored\n  assert (candidate \"Hello world\" = 0)\n  assert (candidate \"Is the sky blue?\" = 0)\n  assert (candidate \"I love It !\" = 1)\n  assert (candidate \"bIt\" = 0)\n  assert (candidate \"I feel good today. I will be productive. will kill It\" = 2)\n  assert (candidate \"You and I are going for a walk\" = 0)\n  0\n\ntest()",
      "timestamp": 1675520570,
      "stdout": "",
      "stderr": "\n\n/tmp/tmps_sdo1q4.fsx(84,1): error FS0010: Incomplete structured construct at or before this point in pattern matching\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}