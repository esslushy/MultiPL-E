{
  "name": "HumanEval_24_largest_divisor",
  "language": "fs",
  "prompt": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n",
  "tests": "let test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n =\n        if n = 0 then 0\n        else\n            let largest_divisor_n_larger = largest_divisor_n (n-1)\n            if n % largest_divisor_n_larger = 0 then largest_divisor_n_larger\n            else largest_divisor_n_larger\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n =\n        if n = 0 then\n            n\n        else\n            let largest_divisor_n_n = largest_divisor_n n\n            if largest_divisor_n_n = n then\n                n\n            else\n                largest_divisor_n_n\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n acc n = \n        if n = 0 then acc\n        else largest_divisor_n (acc * (n - 1)) (n - 1)\n    largest_divisor_n 0 n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_rec (n:int) = \n        if n = 0 then 0\n        else\n            let rec largest_divisor_rec_n (n:int) = \n                if n = 0 then 0\n                else\n                    let largest_divisor_n = largest_divisor_rec_n (n-1)\n                    if n % largest_divisor_n = 0 then n / largest_divisor_n\n                    else largest_divisor_n\n            largest_divisor_rec_n n\n    largest_divisor_rec n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n =\n        if n = 0 then\n            1\n        else\n            let largest_divisor_n_minus_one = largest_divisor_n (n - 1)\n            if n % largest_divisor_n_minus_one = 0 then\n                largest_divisor_n_minus_one\n            else\n                largest_divisor_n_minus_one\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n = \n        if n = 0 then 0\n        else\n            let largest_divisor_n_larger = largest_divisor_n (n-1)\n            if n%largest_divisor_n_larger = 0 then largest_divisor_n_larger\n            else largest_divisor_n_larger\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n = \n        if n = 0 then 0\n        else \n            let largest_divisor_n_n = largest_divisor_n (n-1)\n            if n % largest_divisor_n_n = 0 then n\n            else largest_divisor_n_n\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n = \n        if n = 0 then 0\n        else\n            let largest_divisor_n_larger = largest_divisor_n (n-1)\n            if n = largest_divisor_n_larger then n\n            else largest_divisor_n_larger\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n =\n        if n = 0 then 0\n        elif n % 2 = 0 then n / 2\n        else largest_divisor_n (n / 2)\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n =\n        if n = 0 then\n            0\n        else\n            let largest_divisor_n_n = largest_divisor_n (n-1)\n            if n % largest_divisor_n_n = 0 then\n                largest_divisor_n_n\n            else\n                largest_divisor_n_n\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_rec (n:int) =\n        if n = 0 then\n            n\n        else\n            let largest_divisor_n = largest_divisor_rec (n - 1)\n            if n % largest_divisor_n = 0 then\n                largest_divisor_n\n            else\n                largest_divisor_n + 1\n    largest_divisor_rec n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n =\n        if n = 0 then 0\n        else\n            let largest_divisor_n_larger = largest_divisor_n (n-1)\n            if n % largest_divisor_n_larger = 0 then n\n            else largest_divisor_n_larger\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n =\n        if n = 0 then\n            0\n        else\n            let largest_divisor_n_larger = largest_divisor_n (n-1)\n            let largest_divisor_n_smaller = largest_divisor_n (n-2)\n            if largest_divisor_n_larger > largest_divisor_n_smaller then\n                largest_divisor_n_larger\n            else\n                largest_divisor_n_smaller\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n = \n        if n = 0 then 0\n        else\n            let largest_divisor_n_n = largest_divisor_n (n-1)\n            if n % largest_divisor_n_n = 0 then n\n            else largest_divisor_n_n\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n = \n        if n = 0 then 0\n        elif n % 2 = 0 then largest_divisor_n (n / 2)\n        else n / 2\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n = \n        if n = 0 then 0\n        else \n            let largest_divisor_n_larger = largest_divisor_n (n - 1)\n            if n % largest_divisor_n_larger = 0 then n\n            else largest_divisor_n_larger\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n =\n        if n = 0 then\n            n\n        else\n            let largest_divisor_n_n = largest_divisor_n (n-1)\n            if n % largest_divisor_n_n = 0 then\n                largest_divisor_n_n\n            else\n                largest_divisor_n_n\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_rec acc n =\n        if n = 0 then acc\n        else largest_divisor_rec (n-1) (n-1)\n    largest_divisor_rec 0 n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_rec (n:int) =\n        if n = 0 then 0\n        elif n % 2 = 0 then largest_divisor_rec (n / 2)\n        else n / 2\n    largest_divisor_rec n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given number n, find the largest number that divides n evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nlet largest_divisor n = \n    let rec largest_divisor_n n = \n        if n = 0 then 0\n        elif n % 2 = 0 then largest_divisor_n (n / 2)\n        else largest_divisor_n (n / 2) + 1\n    largest_divisor_n n\nlet test() = \n  let candidate = largest_divisor\n  assert (candidate 3 = 1)\n  assert (candidate 7 = 1)\n  assert (candidate 10 = 5)\n  assert (candidate 100 = 50)\n  assert (candidate 49 = 7)\n  0\n\ntest()",
      "timestamp": 1675520668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}