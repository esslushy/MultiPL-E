{
  "name": "HumanEval_13_greatest_common_divisor",
  "language": "fs",
  "prompt": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n",
  "tests": "let test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec GreatestCommonDivisor (a, b) = \n        if a = b then a\n        else GreatestCommonDivisor (a % b, b % a)\n    GreatestCommonDivisor (a, b)\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_rec (a, b) = \n        if a = b then a\n        else greatest_common_divisor_rec (a / b, b / a)\n    greatest_common_divisor_rec (a, b)\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_rec a b = \n        match b with\n        | 0 -> a\n        | _ -> greatest_common_divisor_rec (a / b) (a % b)\n    greatest_common_divisor_rec a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_a b = \n        if b = 0 then 0\n        else greatest_common_divisor_a (b-1) (a/b)\n    greatest_common_divisor_a a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520547,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpgyw_e6p5.fsx(9,14): error FS0003: This value is not a function and cannot be applied.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_rec a b = \n        match a, b with \n        | 0, 0 -> 0\n        | 0, _ -> 0\n        | _, 0 -> 1\n        | _, _ -> greatest_common_divisor_rec (a / b) (b / a)\n    greatest_common_divisor_rec a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_rec a b = \n        match b with\n        | 0 -> a\n        | x -> greatest_common_divisor_rec (a / x) (x - 1)\n    greatest_common_divisor_rec a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_rec a b = \n        match b with\n        | 0 -> a\n        | _ -> greatest_common_divisor_rec (a / b) (b / a)\n    greatest_common_divisor_rec a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec loop acc = \n        if a = b then acc\n        else loop (a % b)\n    loop (a / b)\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec GreatestCommonDivisor (a, b) = \n        if a = b then a\n        else GreatestCommonDivisor (a / b, b % a)\n    GreatestCommonDivisor (a, b)\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_rec a b = \n        if a = b then a\n        else greatest_common_divisor_rec (a % b) (b % a)\n    greatest_common_divisor_rec a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_a b = \n        match b with\n        | 0 -> a\n        | _ -> greatest_common_divisor_a (b / 2) (b % 2)\n    greatest_common_divisor_a a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520547,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw6m8pc6q.fsx(10,16): error FS0001: Type mismatch. Expecting a\n    ''a -> 'b'    \nbut given a\n    ''b'    \nThe types ''a' and ''b -> 'a' cannot be unified.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec GreatestCommonDivisor (a, b) = \n        if a = b then a\n        else GreatestCommonDivisor (a / b, b % a)\n    GreatestCommonDivisor (a, b)\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_rec a b = \n        match b with \n        | 0 -> a\n        | _ -> greatest_common_divisor_rec (a / b) (b / a)\n    greatest_common_divisor_rec a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec loop a b = \n        if a = b then \n            a\n        else \n            let a' = a / b\n            if a' = 0 then \n                a'\n            else \n                loop a' b\n    loop a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_rec a b = \n        if a = b then a\n        else greatest_common_divisor_rec (a % b) (b % a)\n    greatest_common_divisor_rec a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec GreatestCommonDivisor a b = \n        if a = b then a\n        else GreatestCommonDivisor (a % b) (b % a)\n    GreatestCommonDivisor a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_a b =\n        if b = 0 then\n            a\n        else\n            let a' = greatest_common_divisor_a (b-1)\n            if a' = a then\n                a'\n            else\n                greatest_common_divisor_a (b-1)\n    greatest_common_divisor_a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec GreatestCommonDivisor (a, b) = \n        if a = b then a\n        else GreatestCommonDivisor (a % b, b % a)\n    GreatestCommonDivisor (a, b)\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_rec a b = \n        match b with\n        | 0 -> a\n        | _ -> greatest_common_divisor_rec (a / b) (a % b)\n    greatest_common_divisor_rec a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nlet greatest_common_divisor a b = \n    let rec greatest_common_divisor_rec a b =\n        if a = b then a\n        else greatest_common_divisor_rec (a % b) (b % a)\n    greatest_common_divisor_rec a b\nlet test() = \n  let candidate = greatest_common_divisor\n  assert (candidate 3 7 = 1)\n  assert (candidate 10 15 = 5)\n  assert (candidate 49 14 = 7)\n  assert (candidate 144 60 = 12)\n  0\n\ntest()",
      "timestamp": 1675520548,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}