{
  "name": "HumanEval_55_fib",
  "language": "fs",
  "prompt": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n",
  "tests": "let test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    let rec fib' n = \n        if n = 0 then 1\n        else fib' (n-1) + fib' (n-2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    if n = 0 then 0\n    else\n        let rec fib' n = \n            if n = 0 then 0\n            else\n                let fib' = fib' (n-1)\n                fib' (n-1) + fib' (n-1)\n        fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520644,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpigqvu3ft.fsx(15,17): error FS0003: This value is not a function and cannot be applied.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    let rec fib' acc n = \n        if n = 0 then acc\n        else fib' (n-1) (n-1)\n    fib' 0 n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    let rec fib' acc n =\n        if n = 0 then acc\n        else fib' (acc + fib' (acc + 1)) (n - 1)\n    fib' 0 n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520644,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdmmwec87.fsx(11,36): error FS0043: The type 'int -> int' does not match the type 'int'\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    let rec fib' n = \n        if n = 0 then 1\n        else fib' (n - 1) + fib' (n - 2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    if n = 0 then 0\n    elif n = 1 then 1\n    else fib (n - 1) + fib (n - 2)\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520644,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp3u64p3l6.fsx(11,10): error FS0039: The value or constructor 'fib' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    let rec fib' n = \n        if n = 0 then 0\n        else fib' (n-1) + fib' (n-2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    let rec fib' n = \n        if n = 0 then 1\n        else fib' (n-1) + fib' (n-2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    if n = 0 then 0\n    else\n        let rec fib' n = \n            if n = 0 then 0\n            else fib' (n-1)\n        fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    if n = 0 then 0\n    elif n = 1 then 1\n    else\n        let rec fib' acc =\n            if n % 2 = 0 then\n                fib' (n / 2) + fib' (n / 2 - 1)\n            else\n                acc\n        fib' (n / 2) + fib' (n / 2 - 1)\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    let rec fib' n = \n        if n < 0 then failwith \"n must be positive\"\n        elif n = 0 then 1\n        else fib' (n-1) + fib' (n-2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    let rec fib' acc = \n        if n = 0 then acc\n        else fib' (acc + fib' (acc + 1))\n    fib' 0\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    if n <= 0 then 0\n    else\n        let rec fib' n = \n            if n <= 0 then 0\n            else\n                let fib' = fib' (n-1)\n                fib' (n-1) + fib' (n-2)\n        fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520644,
      "stdout": "",
      "stderr": "\n\n/tmp/tmphknhdlws.fsx(15,17): error FS0003: This value is not a function and cannot be applied.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    if n = 0 then 0\n    else\n        let rec fib' n = \n            if n = 0 then 0\n            else fib' (n-1)\n        fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    if n = 0 then 0\n    else\n        let rec fib' n = \n            if n = 0 then 0\n            else\n                let fib' = fib' (n-1)\n                fib' (n-1) + fib' (n-1)\n        fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520644,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpigqvu3ft.fsx(15,17): error FS0003: This value is not a function and cannot be applied.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    let rec fib' acc n = \n        if n = 0 then acc\n        else fib' (acc + fib' (acc + 1)) (n - 1)\n    fib' 0 n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520644,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpc14276xi.fsx(11,36): error FS0043: The type 'int -> int' does not match the type 'int'\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    let rec fib' n = \n        if n = 0 then 0\n        else fib' (n-1) + fib' (n-2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    let rec fib' acc n = \n        if n = 0 then acc\n        else fib' (acc + fib' (acc + n)) (n - 1)\n    fib' 0 n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520644,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkw_k1k7p.fsx(11,36): error FS0043: The type 'int -> int' does not match the type 'int'\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    let rec fib' n = \n        if n = 0 then 0\n        else fib' (n-1) + fib' (n-2)\n    fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n// 1\n// >>> fib(8)\n// 21\nlet fib n = \n    if n < 0 then failwith \"n must be non-negative\"\n    if n = 0 then 0\n    else\n        let rec fib' n =\n            if n = 0 then 0\n            else fib' (n-1)\n        fib' n\nlet test() = \n  let candidate = fib\n  assert (candidate 10 = 55)\n  assert (candidate 1 = 1)\n  assert (candidate 8 = 21)\n  assert (candidate 11 = 89)\n  assert (candidate 12 = 144)\n  0\n\ntest()",
      "timestamp": 1675520645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}