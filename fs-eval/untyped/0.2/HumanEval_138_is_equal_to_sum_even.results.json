{
  "name": "HumanEval_138_is_equal_to_sum_even",
  "language": "fs",
  "prompt": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n",
  "tests": "let test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | _ -> true\n        \n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec (n:int) =\n        if n = 0 then\n            true\n        elif n = 1 then\n            false\n        elif n = 2 then\n            true\n        elif n = 3 then\n            true\n        elif n = 4 then\n            true\n        elif n = 5 then\n            true\n        elif n = 6 then\n            true\n        elif n = 7 then\n            true\n        elif n = 8 then\n            true\n        else\n            false\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        else if n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1) (n / 2)\n        else is_equal_to_sum_even_rec (acc + 1) (n / 2)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520509,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp1z23n_1c.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            false\n        else\n            let sum = n % 4 = 0\n            if sum = 0 then\n                is_equal_to_sum_even_n (n / 4)\n            else\n                is_equal_to_sum_even_n (n / 4) && is_equal_to_sum_even_n (n / 4)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520509,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpsf8pqopk.fsx(12,22): error FS0001: This expression was expected to have type\n    'bool'    \nbut here has type\n    'int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0 && is_equal_to_sum_even_n (n / 4)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let n_n = n % 4\n            if n_n = 0 then\n                is_equal_to_sum_even_n(n / 4)\n            else\n                is_equal_to_sum_even_n(n / 4) && is_equal_to_sum_even_n(n / 4)\n    is_equal_to_sum_even_n(n)\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + n) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520509,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnoc7j4ay.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n =\n        if n = 0 then\n            false\n        else\n            let rec is_equal_to_sum_even_rec_rec n =\n                if n = 0 then\n                    true\n                else\n                    let rec is_equal_to_sum_even_rec_rec_rec n =\n                        if n = 0 then\n                            false\n                        else\n                            let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                if n = 0 then\n                                    true\n                                else\n                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                        if n = 0 then\n                                            true\n                                        else\n                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                if n = 0 then\n                                                    true\n                                                else\n                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                        if n = 0 then\n                                                            true\n                                                        else\n                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                                if n = 0 then\n                                                                    true\n                                                                else\n                                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                                        if n = 0 then\n                                                                            true\n                                                                        else\n                                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                                                if n = 0 then\n                                                                                    true\n                                                                                else\n                                                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                                                        if n = 0 then\n                                                                                            true\n                                                                                        else\n                                                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                                                               if n = 0 then\n                                                                                                   true\n                                                                                               else\n                                                                                                   let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                                                                       if n = 0 then\n                               \nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520509,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpiyzzshbe.fsx(58,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (56:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpiyzzshbe.fsx(58,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (56:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpiyzzshbe.fsx(70,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (56:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpiyzzshbe.fsx(70,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (56:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpiyzzshbe.fsx(70,6): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (56:104). Try indenting t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n <= 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with \n        | 0 -> false\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | _ -> is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc =\n        if n = 0 then acc\n        else\n            if n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1)\n            else is_equal_to_sum_even_rec (acc + 2)\n    is_equal_to_sum_even_rec 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520509,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpyoamtkhc.fsx(15,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let sum = n * n\n            if sum % 4 = 0 then\n                is_equal_to_sum_even_n (sum / 4)\n            else\n                is_equal_to_sum_even_n (sum / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        match n with \n        | 0 -> false\n        | 1 -> true\n        | _ -> is_equal_to_sum_even_rec (n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            false\n        else\n            let sum_even_n = n % 4\n            let sum_even_n_n = n / 4\n            let sum_even_n_n_n = n / 4\n            let sum_even_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_n = n / 4\n            let sum_even_n_n_n_n_n_n_\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520509,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpr_snauzv.fsx(33,1): error FS0010: Incomplete structured construct at or before this point in binding. Expected '=' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            false\n        else\n            let sum = n |> List.sum\n            if sum = 4 then\n                true\n            else\n                is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520509,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7en9_vr1.fsx(11,28): error FS0001: The type 'int' does not match the type ''a list'\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec (n:int) =\n        if n = 0 then\n            true\n        elif n % 2 = 0 then\n            is_equal_to_sum_even_rec (n / 2)\n        else\n            is_equal_to_sum_even_rec (n / 2)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675520510,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}