{
  "name": "HumanEval_4_mean_absolute_deviation",
  "language": "fs",
  "prompt": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n",
  "tests": "let test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = numbers |> Array.average\n    let x_mean = numbers |> Array.map (fun x -> x - mean) |> Array.average\n    x_mean\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpowu_w0p0.fsx(14,21): error FS0001: This expression was expected to have type\n    ''a[]'    \nbut here has type\n    ''c list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = numbers |> Array.average\n    let x_mean = numbers |> Array.map (fun x -> x - mean) |> Array.average\n    x_mean\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpowu_w0p0.fsx(14,21): error FS0001: This expression was expected to have type\n    ''a[]'    \nbut here has type\n    ''c list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = Seq.average numbers\n    let mean_deviation = Seq.map (fun x -> x - mean) numbers\n    let total_deviation = Seq.sum (Seq.map (fun x -> x - mean) numbers)\n    mean_deviation / total_deviation\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmppb4bwbsq.fsx(15,22): error FS0001: The type 'float' does not match the type 'seq<float>'\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean_deviation = \n        numbers \n        |> Seq.map (fun x -> x - x_mean)\n        |> Seq.average\n    mean_deviation\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp74fnye7l.fsx(11,34): error FS0039: The value or constructor 'x_mean' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = Seq.average numbers\n    let mean_deviation = Seq.map (fun x -> x - mean) numbers\n    Seq.sum mean_deviation\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = numbers |> Array.map (fun x -> x / float (numbers.Length)) |> Array.average\n    let x_mean = mean |> Array.map (fun x -> x * (float numbers.Length)) |> Array.average\n    let x_mean_sq = x_mean * x_mean\n    let x_mean_sq_sq = x_mean_sq * x_mean_sq\n    let x_mean_sq_sq_sq = x_mean_sq_sq * x_mean_sq_sq\n    let x_mean_sq_sq_sq_sq = x_mean_sq_sq_sq * x_mean_sq_sq_sq\n    let x_mean_sq_sq_sq_sq = x_mean_sq_sq_sq_sq * x_mean_sq_sq_sq\n    let x_mean_sq_sq_sq_sq = x_mean_sq_sq_sq_sq * x_mean_sq_sq_sq\n    let x_mean_sq_sq_sq_sq = x_mean_sq_sq_sq_sq * x_mean_sq_sq_sq\n    let x_mean_sq_sq_sq_sq = x_mean_sq_sq_sq_sq * x_mean_sq_sq_sq\n    let x_mean_sq_sq_sq_sq = x_mean_sq_sq_sq_sq * x_mean_sq_sq_sq\n    let x_mean_sq_sq_sq_sq = x_mean_sq_sq_sq_sq * x_mean_sq_sq_sq\n    let x_mean_sq_sq_sq_sq = x_mean_sq_sq_sq_sq * x_mean_sq_sq_sq\n    let x_mean_sq_sq_sq_sq = x_mean_sq_sq_sq_sq * x_mean_sq_sq_sq\n    let x_mean_sq_sq_sq_sq = x_mean_sq_sq_sq_sq * x_mean_sq_sq_sq\n    let x_mean_sq_sq_sq_sq = x_mean_sq_sq_sq_sq * x_mean\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpaq6dgvgs.fsx(24,5): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be the final code element in a block. Consider giving this block an explicit result.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = numbers |> Array.sumBy (fun x -> x / float (numbers.Length))\n    let x_mean = mean / float (numbers.Length)\n    x_mean\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdf7fqr7o.fsx(14,21): error FS0001: This expression was expected to have type\n    'float[]'    \nbut here has type\n    ''a list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = numbers |> Array.average\n    let mean_deviation = numbers |> Array.sumBy (fun x -> abs(x - mean))\n    mean_deviation\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8a16udxz.fsx(14,21): error FS0001: This expression was expected to have type\n    ''a[]'    \nbut here has type\n    ''c list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = Array.average numbers\n    let mean_deviation = Array.sum (Array.map (fun x -> abs (x - mean)) numbers)\n    mean_deviation\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpenpb0vxr.fsx(14,21): error FS0001: This expression was expected to have type\n    ''a[]'    \nbut here has type\n    ''c list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = numbers |> Array.average\n    let mean_deviation = numbers |> Array.map (fun x -> x - mean) |> Array.average\n    mean_deviation\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmppgvtypwg.fsx(14,21): error FS0001: This expression was expected to have type\n    ''a[]'    \nbut here has type\n    ''c list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = numbers |> Array.average\n    let mean_deviation = numbers |> Array.sumBy (fun x -> abs (x - mean))\n    mean_deviation\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmptppiwhna.fsx(14,21): error FS0001: This expression was expected to have type\n    ''a[]'    \nbut here has type\n    ''c list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = numbers |> Array.average\n    let x_mean = numbers |> Array.map (fun x -> x - mean) |> Array.average\n    x_mean\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpowu_w0p0.fsx(14,21): error FS0001: This expression was expected to have type\n    ''a[]'    \nbut here has type\n    ''c list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean_deviation = \n        numbers\n        |> Seq.map (fun x -> x - x_mean)\n        |> Seq.sum\n    mean_deviation / (float numbers.Length)\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp25a8w_xu.fsx(11,34): error FS0039: The value or constructor 'x_mean' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = numbers |> Array.average\n    let mean_deviation = numbers |> Array.map (fun x -> x - mean) |> Array.average\n    mean_deviation\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmppgvtypwg.fsx(14,21): error FS0001: This expression was expected to have type\n    ''a[]'    \nbut here has type\n    ''c list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean_absolute_deviation_list = numbers |> List.map (fun x -> x - x_mean)\n    let mean_absolute_deviation_list = mean_absolute_deviation_list |> List.map (fun x -> x / x_mean)\n    mean_absolute_deviation_list\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpa91voxxx.fsx(9,74): error FS0039: The value or constructor 'x_mean' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = numbers |> Array.average\n    let mean_dev = numbers |> Array.map (fun x -> x - mean) |> Array.average\n    mean_dev\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpel7ny_mf.fsx(14,21): error FS0001: This expression was expected to have type\n    ''a[]'    \nbut here has type\n    ''c list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean_absolute_deviation_list = numbers |> List.map (fun x -> x - x_mean)\n    let mean_absolute_deviation_list = mean_absolute_deviation_list |> List.map (fun x -> x / x_mean)\n    mean_absolute_deviation_list\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpa91voxxx.fsx(9,74): error FS0039: The value or constructor 'x_mean' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean_deviation = \n        numbers \n        |> Array.map (fun x -> x - x_mean)\n        |> Array.average\n    mean_deviation\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpksehatab.fsx(11,36): error FS0039: The value or constructor 'x_mean' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean = numbers |> Array.average\n    let mean_deviation = numbers |> Array.map (fun x -> x - mean) |> Array.average\n    mean_deviation\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmppgvtypwg.fsx(14,21): error FS0001: This expression was expected to have type\n    ''a[]'    \nbut here has type\n    ''c list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//For a given list of input numbers, calculate Mean Absolute Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute difference between each\n// element and a centerpoint (mean in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n// 1.0\nlet mean_absolute_deviation numbers = \n    let mean_abs_dev = \n        numbers\n        |> Array.map (fun x -> x - x_mean)\n        |> Array.average\n    mean_abs_dev\nlet test() = \n  let candidate = mean_absolute_deviation\n  assert (candidate [1.0; 2.0] = 0.5)\n  assert (candidate [1.0; 2.0; 3.0; 4.0] = 1.0)\n  assert (candidate [1.0; 2.0; 3.0; 4.0; 5.0] = 1.2)\n  0\n\ntest()",
      "timestamp": 1675520619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprymyuisc.fsx(11,36): error FS0039: The value or constructor 'x_mean' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}