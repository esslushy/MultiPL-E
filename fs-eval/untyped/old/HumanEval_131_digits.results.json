{
  "name": "HumanEval_131_digits",
  "language": "fs",
  "prompt": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n",
  "tests": "let test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        match n with\n        | 0 -> 0\n        | _ -> digits' (n-1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2)\n        else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpg33tz6wm.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    let even = n % 2 = 0\n    if even then n / 2\n    else n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop i acc =\n        if i = 0 then acc\n        else loop (i-1) (acc * i)\n    loop n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n >= 0 then\n        n\n    else\n        let even = (n % 2) = 0\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop i =\n        if i < n then\n            loop (i + 1)\n        else\n            0\n    loop n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2)\n        else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpg33tz6wm.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        elif n % 2 = 0 then digits' (n / 2)\n        else digits' (n / 2) + digits' (n / 2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n =\n        if n = 0 then 0\n        else\n            let even = (n % 2 = 0)\n            if even then digits' (n / 2)\n            else digits' (n / 2) + 1\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        let odd = n % 3 = 0\n        if even then digits(n / 2)\n        else if odd then digits(n / 3)\n        else digits(n / 4)\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpsa5t2k7t.fsx(12,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n =\n        match n with\n        | 0 -> 0\n        | _ -> digits' (n - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        if n = 0 then\n            acc\n        else\n            let digit = int n\n            if digit % 2 = 0 then digits' (digit / 2 :: acc)\n            else digits' (acc @ [digit / 2])\n    digits' []\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp9oyauo3r.fsx(18,25): error FS0001: This expression was expected to have type\n    'int list'    \nbut here has type\n    'int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        if n = 0 then acc\n        else digits' (acc + 1)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n >= 0 then\n        n\n    else\n        let even = n % 2\n        if even = 0 then\n            n\n        else\n            n / 2\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        if n % 2 = 0 then acc\n        else digits' (acc + 1)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        let odd = n % 3 = 0\n        if odd then even + 1\n        else odd + even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp1s104mf7.fsx(12,28): error FS0001: The type 'int' does not match the type 'bool'\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then digits(n / 2)\n        else digits(n / 2) + digits(n % 2)\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpi7ankzm_.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n acc =\n        if n = 0 then acc\n        else digits' (n-1) (acc * 10)\n    digits' n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let evens = [0..n-1]\n        let odds = [n-1..0]\n        let result = \n            evens \n            |> List.fold (fun acc elem -> acc + elem) 0\n        odds \n        |> List.fold (fun acc elem -> acc + elem) 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop acc n = \n        if n % 2 = 0 then loop (acc + 1) (n / 2)\n        else acc\n    loop 0 n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n / 2 - 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n >= 0 then\n        n\n    else\n        let even = (n % 2) = 0\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n acc =\n        if n = 0 then acc\n        else digits' (n - 1) (acc * 10)\n    digits' n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let evens = [0..n-1]\n        let odds = [0..n-1]\n        let evens' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'''''' = evens |> List.filter (fun x ->\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449614,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp3cd8jnzs.fsx(31,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (30:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3cd8jnzs.fsx(31,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (30:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3cd8jnzs.fsx(42,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (30:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3cd8jnzs.fsx(42,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (30:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3cd8jnzs.fsx(42,6): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (30:9). Try indenting this token ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"negative number\"\n    let evens = \n        [0..n]\n        |> List.filter (fun x -> x % 2 = 0)\n        |> List.map (fun x -> x * 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x / 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x * 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x / 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x * 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x / 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x * 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x / 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x * 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x / 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x * 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x / 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x * 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x / 2)\n        |> List.filter (fun x -> x <> 0)\n        |> List.map (fun x -> x * 2)\n        |> List.filter (fun x -> x <> 0)\n        |>\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449614,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpe_wm4pvc.fsx(43,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpe_wm4pvc.fsx(43,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpe_wm4pvc.fsx(54,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpe_wm4pvc.fsx(54,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpe_wm4pvc.fsx(9,5): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n >= 0 then\n        let even = n % 2\n        if even = 0 then\n            n\n        else\n            n / 2\n    else\n        0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 - even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0 \n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let evens = [1..n]\n        let odds = [0..n-1]\n        let result = evens |> List.sum\n        let result2 = odds |> List.sum\n        result + result2\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2 = 0)\n        if even then\n            n / 2\n        else\n            n / 2 + 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n / 2 - 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    if n = 0 then 0\n    else\n        let evens = [0..n-1]\n        let odds = [0..n-1]\n        let evens' = evens |> List.map (fun x -> x % 2)\n        let odds' = odds |> List.map (fun x -> x % 2)\n        let evens'' = evens |> List.map (fun x -> x + 1)\n        let odds'' = odds |> List.map (fun x -> x + 1)\n        let evens''' = evens |> List.map (fun x -> x + 1)\n        let odds''' = odds |> List.map (fun x -> x + 1)\n        let evens'''' = evens |> List.map (fun x -> x + 1)\n        let odds'''' = odds |> List.map (fun x -> x + 1)\n        let evens''''' = evens |> List.map (fun x -> x + 1)\n        let odds'''''' = odds |> List.map (fun x -> x + 1)\n        let evens'''''' = evens |> List.map (fun x -> x + 1)\n        let evens''''''' = evens |> List.map (fun x -> x + 1)\n        let evens'''''''' = evens |> List.map (fun x -> x + 1)\n        let evens'''''''' = evens |> List.map (fun x -> x + 1)\n        let evens''''''''' = evens |> List.map (fun x -> x + 1)\n        let evens''''''''''' = evens |> List.map (fun x -> x + 1)\n        let evens''''''''''' = evens |> List.map (fun x -> x + 1)\n        let evens''''''''''''' = evens |> List.map (fun x -> x + 1)\n        let evens''''''''''''' = evens |> List.map (fun x -> x +\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449616,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnn6fsxkq.fsx(32,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (31:62). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpnn6fsxkq.fsx(32,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (31:62). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpnn6fsxkq.fsx(43,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (31:62). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpnn6fsxkq.fsx(43,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (31:62). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpnn6fsxkq.fsx(43,6): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (31:9). Try indenting this to",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    let even = n % 2 = 0\n    let odd = n % 3 = 0\n    if even then digits(n / 2)\n    else digits(n / 3)\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449616,
      "stdout": "",
      "stderr": "\n\n/tmp/tmppbp8sa2z.fsx(11,18): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        if n = 0 then\n            acc\n        else\n            let digit = int (n % 10)\n            if digit = 0 then\n                digits' (acc + 1)\n            else\n                digits' (acc + digit)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n - 1) + digits' (n - 2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n acc =\n        if n = 0 then acc\n        else digits' (n-1) (acc * 10)\n    digits' n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n =\n        if n = 0 then 0\n        else\n            let even = n % 2 = 0\n            if even then digits' (n / 2)\n            else digits' (n / 2) + digits' (n / 2 - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n / 2 - 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then\n            let evenDigits = digits (n / 2)\n            if evenDigits = 0 then 0\n            else evenDigits\n        else\n            let oddDigits = digits (n / 2)\n            if oddDigits = 0 then 0\n            else oddDigits\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449616,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp47k6s32n.fsx(12,30): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        let odd = n % 3 = 0\n        if even then digits(n / 2)\n        else digits(n / 3)\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449616,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpsd3ntfsn.fsx(12,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        elif n % 2 = 0 then digits' (n / 2)\n        else digits' (n / 2) + digits' (n / 2 - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"negative number\"\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 + even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop acc = \n        if n % 2 = 0 then loop (acc + 1)\n        else acc\n    loop 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then digits(n / 2)\n        else digits(n / 2) + digits(n / 2)\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "\n\n/tmp/tmppa7m4_9n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop i =\n        if i < n then\n            loop (i + 1)\n        else\n            0\n    loop n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 - even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n >= 0 then \n        let evens = [0..n-1]\n        let odds = [0..n-1]\n        let evens = evens |> List.map (fun x -> x % 2)\n        let odds = odds |> List.map (fun x -> x % 2)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let odds = odds |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x -> x + 1)\n        let evens = evens |> List.map (fun x ->\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449616,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpwupvef17.fsx(34,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (33:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwupvef17.fsx(34,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (33:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwupvef17.fsx(45,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (33:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwupvef17.fsx(45,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (33:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwupvef17.fsx(45,6): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (33:9). Try indenting this token ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n acc = \n        if n = 0 then acc\n        else digits' (n-1) (acc + (n % 2))\n    digits' n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop acc =\n        if n = 0 then acc\n        else loop (n / 2)\n    loop 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let evens = [1..n]\n        let odds = [0..n-1]\n        let result = Array.fold (fun acc elem -> if elem % 2 = 0 then acc + elem else acc) 0 evens\n        let result = Array.fold (fun acc elem -> if elem % 2 = 0 then acc + elem else acc) 0 odds\n        result\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpbsjtg1fq.fsx(12,94): error FS0001: This expression was expected to have type\n    ''a[]'    \nbut here has type\n    'int list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 - even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        if n % 2 = 0 then\n            acc\n        else\n            digits' (acc + 1)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        if n % 2 = 0 then\n            acc\n        else\n            digits' (acc + 1)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        if n = 0 then acc\n        else digits' (acc * 10)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"negative number\"\n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then digits(n / 2)\n        else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpcebc5sex.fsx(12,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"negative number\"\n    let even = n % 2 = 0\n    let odd = n % 3 = 0\n    if odd then even + 1\n    else odd + 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp57zco6bm.fsx(11,24): error FS0001: The type 'int' does not match the type 'bool'\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then\n            let odd = (n % 3) = 0\n            if odd then\n                let even = (n % 5) = 0\n                if even then\n                    let even = (n % 7) = 0\n                    if even then\n                        let even = (n % 11) = 0\n                        if even then\n                            let even = (n % 13) = 0\n                            if even then\n                                let even = (n % 17) = 0\n                                if even then\n                                    let even = (n % 19) = 0\n                                    if even then\n                                        let even = (n % 23) = 0\n                                        if even then\n                                            let even = (n % 29) = 0\n                                            if even then\n                                                let even = (n % 31) = 0\n                                                if even then\n                                                    let even = (n % 37) = 0\n                                                    if even then\n                                                        let even = (n % 41) = 0\n                                                        if even then\n                                                            let even = (n % 43) = 0\n                                                            if even then\n                                                                let even = (n % 47) = 0\n                                                                if even then\n                                                                    let even = (n % 59) = 0\n                                                                    if even then\n                                                                        let even = (n % 61) = 0\n                                                                        if even then\n                                                                            let even = (n % 67) = 0\n                                                                            if even then\n                                                                                let even = (n % 71) = 0\n                                                                                if even then\n                                                                                    let even = (n % 73) = 0\n                                                                                    if even then\n                                                                                        let even = (n % 79) = 0\n                                                                                        if even then\n                                                                                            let even = (n % 83) = 0\n                                                                                            if even then\n                                                                                               let even = (n % 89) = 0\n                                                                                               if even then\n                                                                                                   let even = (n % 91) = 0\n                                                                                                   if even then\n                                                                                                       let even = (n % 97) = 0\n                                                                                                       if even then\n                                                                                                           let even = (n % 101)\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp43316fm3.fsx(60,108): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be the final code element in a block. Consider giving this block an explicit result.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let evens = [1..n]\n        let odds = [0..n-1]\n        let evens' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds''''''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''''''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds''''''''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''''''''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds''''''''''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''''\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpb4slw1h7.fsx(31,1): error FS0010: Incomplete structured construct at or before this point in binding. Expected '=' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then digits(n / 2)\n        else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "\n\n/tmp/tmphpwfm36m.fsx(12,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n / 2 - 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n - 1) + digits' (n - 2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else\n            let odd = n % 3\n            if odd = 0 then n / 3\n            else\n                let even = n % 5\n                if odd = 0 then n / 5\n                else\n                    let odd = n % 7\n                    if odd = 0 then n / 7\n                    else\n                        let even = n % 11\n                        if even = 0 then n / 11\n                        else\n                            let odd = n % 13\n                            if odd = 0 then n / 13\n                            else\n                                let even = n % 17\n                                if even = 0 then n / 17\n                                else\n                                    let odd = n % 19\n                                    if odd = 0 then n / 19\n                                    else\n                                        let even = n % 23\n                                        if even = 0 then n / 23\n                                        else\n                                            let odd = n % 29\n                                            if odd = 0 then n / 29\n                                            else\n                                                let even = n % 31\n                                                if even = 0 then n / 31\n                                                else\n                                                    let odd = n % 37\n                                                    if odd = 0 then n / 37\n                                                    else\n                                                        let even = n % 41\n                                                        if even = 0 then n / 41\n                                                        else\n                                                            let odd = n % 43\n                                                            if odd = 0 then n / 43\n                                                            else\n                                                                let even = n % 47\n                                                                if even = 0 then n / 47\n                                                                else\n                                                                    let odd = n % 53\n                                                                    if odd = 0 then n / 53\n                                                                    else\n                                                                        let even = n % 59\n                                                                        if even = 0 then n / 59\n                                                                        else\n                                                                            let odd = n % 61\n                                                                            if odd = 0 then n / 61\n                                                                            else\n                                                                                let even = n % 67\n                                                                                if even = 0 then n / 67\n                                                                                else\n                                                                                    let odd = n % 71\n                                                                                    if odd = 0 then n / 71\n                                                                                    else\n                                                                                        let even = n % 73\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp714zc_ec.fsx(71,89): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be the final code element in a block. Consider giving this block an explicit result.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be non-negative\"\n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 - even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        let odd = n % 3 = 0\n        if odd then even * 2\n        else odd * 3\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "\n\n/tmp/tmppdf2wg6l.fsx(12,28): error FS0001: The type 'int' does not match the type 'bool'\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        if n = 0 then acc\n        else digits' (n - 1) + digits' (n - 2)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop i = \n        if i < n then \n            loop (i + 1)\n        else \n            0\n    loop n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc = \n        if n = 0 then acc\n        else digits' (acc * 10)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then\n            n / 2\n        else\n            n / 2 - 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n acc = \n        if n = 0 then acc\n        else digits' (n-1) (acc * 10)\n    digits' n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpcsnfbsh8.fsx(12,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then\n        0\n    else\n        let even = n % 2\n        if even = 0 then\n            n\n        else\n            n / 2\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 - even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        if n = 0 then acc\n        else digits' (acc + 1)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then\n            n / 2\n        else\n            n / 2\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"negative number\"\n    else if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else\n            let odd = n % 4\n            if odd = 0 then n / 4\n            else\n                let even = n % 8\n                if even = 0 then n / 8\n                else\n                    let odd = n % 16\n                    if odd = 0 then n / 16\n                    else\n                        let even = n % 32\n                        if even = 0 then n / 32\n                        else\n                            let odd = n % 64\n                            if odd = 0 then n / 64\n                            else\n                                let even = n % 128\n                                if even = 0 then n / 128\n                                else\n                                    let odd = n % 256\n                                    if odd = 0 then n / 256\n                                    else\n                                        let even = n % 512\n                                        if even = 0 then n / 512\n                                        else\n                                            let odd = n % 1024\n                                            if odd = 0 then n / 1024\n                                            else\n                                                let even = n % 2048\n                                                if even = 0 then n / 2048\n                                                else\n                                                    let odd = n % 4096\n                                                    if odd = 0 then n / 4096\n                                                    else\n                                                        let even = n % 8192\n                                                        if even = 0 then n / 8192\n                                                        else\n                                                            let odd = n % 16384\n                                                            if odd = 0 then n / 16384\n                                                            else\n                                                                let even = n % 262144\n                                                                if even = 0 then n / 262144\n                                                                else\n                                                                    let odd = n % 524288\n                                                                    if odd = 0 then n / 524288\n                                                                    else\n                                                                        let even = n % 1048576\n                                                                        if even = 0 then n / 1048576\n                                                                        else\n                                                                            let odd = n % 2097152\n                                                                            if odd = 0 then n / 2097152\n                                                                            else\n                                                                                let even = n % 536870912\n                                                                                if even = 0 then n / 536870912\n                                                                                else\n                                                                                    let odd = n % 536870912\n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkghqk41_.fsx(68,85): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be the final code element in a block. Consider giving this block an explicit result.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n =\n        match n with\n        | 0 -> 0\n        | _ -> digits' (n - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        match n with\n        | 0 -> 0\n        | _ -> digits' (n - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0 \n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    let even = n % 2\n    if even = 0 then n\n    else\n        let odd = n / 2\n        if odd = 0 then n\n        else\n            let even = n % 2\n            if odd = 0 then n\n            else\n                let odd = n / 2\n                if odd = 0 then n\n                else\n                    let even = n % 2\n                    if even = 0 then n\n                    else\n                        let even = n / 2\n                        if even = 0 then n\n                        else\n                            let even = n % 2\n                            if even = 0 then n\n                            else\n                                let odd = n / 2\n                                if odd = 0 then n\n                                else\n                                    let even = n % 2\n                                    if even = 0 then n\n                                    else\n                                        let even = n / 2\n                                        if even = 0 then n\n                                        else\n                                            let odd = n / 2\n                                            if odd = 0 then n\n                                            else\n                                                let even = n % 2\n                                                if even = 0 then n\n                                                else\n                                                    let odd = n / 2\n                                                    if odd = 0 then n\n                                                    else\n                                                        let even = n % 2\n                                                        if even = 0 then n\n                                                        else\n                                                            let odd = n / 2\n                                                            if odd = 0 then n\n                                                            else\n                                                                let even = n % 2\n                                                                if even = 0 then n\n                                                                else\n                                                                    let odd = n / 2\n                                                                    if odd = 0 then n\n                                                                    else\n                                                                        let even = n % 2\n                                                                        if even = 0 then n\n                                                                        else\n                                                                            let odd = n / 2\n                                                                            if odd = 0 then n\n                                                                            else\n                                                                                let even = n % 2\n                                                                                if even = 0 then n\n                                                                                else\n                                                                                    let odd = n / 2\n                                                                                    if odd = 0 then n\n                                                                                    else\n                                                                                        let even = n % 2\n                                                                                        if even = 0 then n\n                                                                                        else\n                                                                                            let odd = n / 2\n                                                                                            if odd =\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpb3azt56c.fsx(76,100): error FS3156: Unexpected token '=' or incomplete expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n - 1) + digits' (n - 2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        match n with\n        | 0 -> 0\n        | _ -> digits' (n-1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc n = \n        if n = 0 then acc\n        else digits' (n - 1) (n / 2)\n    digits' 0 n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"negative number\"\n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_ub5w77r.fsx(12,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc n = \n        if n = 0 then acc\n        else digits' (n - 1) (n - 1)\n    digits' 0 n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        elif n % 2 = 0 then digits' (n / 2)\n        else digits' (n / 2) + digits' (n / 2 - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0 \n        else digits' (n - 1) + digits' (n - 2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then\n        failwith \"negative number\"\n    elif n = 0 then\n        0\n    else\n        let even = (n % 2) = 0\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        match n with\n        | 0 -> 0\n        | _ -> digits' (n - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n / 2\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop i = \n        if i < n then \n            loop (i + 1)\n        else \n            0\n    loop n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 - even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop i = \n        if i < n then \n            loop (i + 1)\n        else \n            0\n    loop n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then\n            n / 2\n        else\n            n / 2 + 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n / 2 - 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n / 2 - 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"negative number\"\n    let even = n % 2 = 0\n    if even then n / 2\n    else n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2)\n        else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpg33tz6wm.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n >= 0 then\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n / 2\n    else\n        0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop i acc = \n        if i = 0 then acc\n        else loop (i-1) (acc * i)\n    loop n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2)\n        else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpg33tz6wm.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then 0\n    else\n        let evens = \n            [0..n-1]\n            |> List.map (fun i -> i % 2 = 0)\n            |> List.filter (fun _ -> evens |> List.exists (fun x -> x = true))\n            |> List.length\n        if evens = 0 then 0\n        else evens\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp3umf7sqj.fsx(13,38): error FS0039: The value or constructor 'evens' is not defined. Maybe you want one of the following:\n   Event\n   IEvent\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then\n            n / 2\n        else\n            n / 2 - 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2 = 0)\n        if even then\n            n / 2\n        else\n            n / 2 + 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n =\n        match n with\n        | 0 -> 0\n        | _ -> digits' (n - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then n / 2\n        else n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop acc = \n        if n % 2 = 0 then loop (acc + 1)\n        else acc\n    loop 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n >= 0 then\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n / 2 - 1\n    else\n        0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        if n = 0 then\n            acc\n        else\n            let acc' = acc + 1\n            digits' acc'\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        elif n % 2 = 0 then digits' (n / 2)\n        else digits' (n / 2) + digits' (n / 2 - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then\n        failwith \"negative number\"\n    elif n = 0 then\n        0\n    else\n        let even = n % 2\n        if even = 0 then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0 \n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop i = \n        if i < n then loop (i + 1)\n        else 0\n    loop n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"negative number\"\n    else if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else\n            let odd = n / 2\n            if odd = 0 then even\n            else\n                let even = even - 1\n                if odd = 0 then even\n                else\n                    let odd = odd - 1\n                    if odd = 0 then odd\n                    else\n                        let even = even - 1\n                        if even = 0 then even\n                        else\n                            let odd = odd - 1\n                            if odd = 0 then odd\n                            else\n                                let even = even - 1\n                                if even = 0 then even\n                                else\n                                    let odd = odd - 1\n                                    if odd = 0 then odd\n                                    else\n                                        let even = even - 1\n                                        if even = 0 then even\n                                        else\n                                            let odd = odd - 1\n                                            if odd = 0 then odd\n                                            else\n                                                let even = even - 1\n                                                if even = 0 then even\n                                                else\n                                                    let odd = odd - 1\n                                                    if odd = 0 then odd\n                                                    else\n                                                        let even = even - 1\n                                                        if even = 0 then even\n                                                        else\n                                                            let odd = odd - 1\n                                                            if odd = 0 then odd\n                                                            else\n                                                                let even = even - 1\n                                                                if even = 0 then even\n                                                                else\n                                                                    let odd = odd - 1\n                                                                    if odd = 0 then odd\n                                                                    else\n                                                                        let even = even - 1\n                                                                        if even = 0 then even\n                                                                        else\n                                                                            let odd = odd - 1\n                                                                            if odd = 0 then odd\n                                                                            else\n                                                                                let even = even - 1\n                                                                                if even = 0 then even\n                                                                                else\n                                                                                    let odd = odd - 1\n                                                                                    if odd = 0 then odd\n                                                                                    else\n                                                                                        let even = even - 1\n                                                                                        if even = 0 then even\n                                                                                        else\n                                                                                            let odd = odd - 1\n                                                                                            if odd = 0 then odd\n                                                                                            \nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprifkog4z.fsx(75,93): error FS0001: This expression was expected to have type\n    'unit'    \nbut here has type\n    'int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then digits(n / 2)\n        else digits(n / 2) + 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpf4r_uj76.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2 = 0)\n        if even then\n            n / 2\n        else\n            n / 2 - 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        elif n % 2 = 0 then digits' (n / 2)\n        else digits' (n / 2) + digits' (n / 2 - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop i =\n        if i < n then\n            loop (i + 1)\n        else\n            0\n    loop n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"negative number\"\n    else if n = 0 then 0\n    else\n        let evens = [1 .. n]\n        let odds = [0 .. n - 1]\n        let result = List.fold (fun acc elem -> acc * elem) 0 evens\n        List.fold (fun acc elem -> acc * elem) 0 odds\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n acc = \n        if n = 0 then acc\n        else digits' (n - 1) (acc * 10)\n    digits' n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then\n        failwith \"negative number\"\n    elif n = 0 then\n        0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"negative number\"\n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 + even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2 = 0)\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let evens = [1 .. n]\n        let odds = [0 .. n - 1]\n        let evens' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens'''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds'''''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''''''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds''''''''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''''''''''' = evens |> List.filter (fun x -> x % 2 = 0)\n        let odds''''''''''''' = odds |> List.filter (fun x -> x % 2 = 0)\n        let evens''''''\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpjb8cslo6.fsx(31,1): error FS0010: Incomplete structured construct at or before this point in binding. Expected '=' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n =\n        if n = 0 then 0\n        elif n % 2 = 0 then digits' (n / 2)\n        else digits' (n / 2) + digits' (n / 2 - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then digits(n / 2)\n        else digits(n / 2) + digits(n % 2)\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpi7ankzm_.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 - even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0 \n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        elif n % 2 = 0 then digits' (n / 2)\n        else digits' (n / 2) + digits' (n / 2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n - 1) + digits' (n - 2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        let odd = n % 3 = 0\n        if even then digits(n / 2)\n        else if odd then digits(n / 3)\n        else digits(n / 4)\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpsa5t2k7t.fsx(12,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        match n with\n        | 0 -> 0\n        | _ -> digits' (n - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop i acc =\n        if i = 0 then acc\n        else loop (i-1) (acc * (n % 10))\n    loop n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop acc =\n        if n % 2 = 0 then loop (acc + 1)\n        else acc\n    loop 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        if n % 2 = 0 then\n            acc\n        else\n            digits' (acc + 1)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        match n with\n        | 0 -> 0\n        | _ -> digits' (n - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    let evens = [1..n]\n    let odds = [0..n-1]\n    let result = \n        evens \n        |> List.map (fun x -> x * x)\n        |> List.reduce (*)\n    odds\n    |> List.map (fun x -> x * x)\n    |> List.reduce (*)\n    |> int\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        let odd = n % 3 = 0\n        if even then digits(n / 2) + digits(n / 3)\n        elif odd then digits(n / 3) + digits(n / 2)\n        else digits(n / 2) + digits(n / 3)\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpzdkpsbw6.fsx(12,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then\n        failwith \"negative number\"\n    elif n = 0 then\n        0\n    else\n        let even = n % 2\n        if even = 0 then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n acc =\n        if n = 0 then\n            acc\n        else\n            digits' (n-1) (acc + (n % 2))\n    digits' n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n >= 0 then\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n / 2\n    else\n        0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        let odd = n % 3 = 0\n        if even then digits(n / 2)\n        elif odd then digits(n / 3)\n        else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpgyujyijv.fsx(12,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        match n with\n        | 0 -> acc\n        | _ -> digits' (acc * 10)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2 = 0)\n        if even then digits(n / 2)\n        else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp4igr7k64.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let evens = [0..n-1]\n        let odds = [0..n-1]\n        let evens2 = evens |> List.map (fun x -> x % 2)\n        let odds2 = odds |> List.map (fun x -> x % 2)\n        let evens3 = evens |> List.map (fun x -> x % 3)\n        let odds3 = odds |> List.map (fun x -> x % 3)\n        let evens4 = evens |> List.map (fun x -> x % 5)\n        let odds4 = odds |> List.map (fun x -> x % 5)\n        let evens5 = evens |> List.map (fun x -> x % 7)\n        let odds5 = odds |> List.map (fun x -> x % 7)\n        let evens6 = evens |> List.map (fun x -> x % 11)\n        let odds6 = odds |> List.map (fun x -> x % 11)\n        let evens7 = evens |> List.map (fun x -> x % 13)\n        let odds7 = odds |> List.map (fun x -> x % 13)\n        let evens8 = evens |> List.map (fun x -> x % 17)\n        let odds8 = odds |> List.map (fun x -> x % 17)\n        let evens9 = evens |> List.map (fun x -> x % 17)\n        let odds9 = odds |> List.map (fun x -> x % 17)\n        let evens10 = evens |> List.map (fun x -> x % 19)\n        let odds10 = odds |> List.map (fun x -> x % 19)\n        let evens11 = evens |> List.map (fun x -> x % 19)\n        let odds11 = odds |> List.map (fun x -> x % 19)\n        let evens12 = evens |> List.map (fun x -> x % 19)\n        let odds12 = odds |> List.map\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw6bm2it7.fsx(33,9): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be the final code element in a block. Consider giving this block an explicit result.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let evens = [1 .. n]\n        let odds = [0 .. n - 1]\n        let evens' = evens |> List.map (fun x -> x % 2)\n        let odds' = odds |> List.map (fun x -> x % 2)\n        let evens'' = evens |> List.map (fun x -> x + 1)\n        let odds'' = odds |> List.map (fun x -> x + 1)\n        let evens''' = evens |> List.map (fun x -> x + 1)\n        let odds''' = odds |> List.map (fun x -> x + 1)\n        let evens'''' = evens |> List.map (fun x -> x + 1)\n        let evens''''' = evens |> List.map (fun x -> x + 1)\n        let evens'''''' = evens |> List.map (fun x -> x + 1)\n        let evens'''''' = evens |> List.map (fun x -> x + 1)\n        let evens''''''' = evens |> List.map (fun x -> x + 1)\n        let evens'''''''' = evens |> List.map (fun x -> x + 1)\n        let evens'''''''' = evens |> List.map (fun x -> x + 1)\n        let evens''''''''' = evens |> List.map (fun x -> x + 1)\n        let evens'''''''''' = evens |> List.map (fun x -> x + 1)\n        let evens''''''''''' = evens |> List.map (fun x -> x + 1)\n        let evens'''''''''''' = evens |> List.map (fun x -> x + 1)\n        let evens''''''''''''' = evens |> List.map (fun x -> x + 1)\n        let evens''''''''''''''' = evens |> List.map (fun x -> x + 1)\n        let evens''''''''''''\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpylpu0eif.fsx(32,1): error FS0010: Incomplete structured construct at or before this point in binding. Expected '=' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n - 1) + digits' (n - 2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    if n = 0 then 0\n    else\n        let evens = [1..n]\n        let odds = [0..n-1]\n        let result = Array.fold (fun acc elem -> if elem % 2 = 0 then acc + elem else acc) 0 evens\n        let result = Array.fold (fun acc elem -> if elem % 2 = 0 then acc + elem else acc) 0 odds\n        result\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp69hlgdkd.fsx(13,94): error FS0001: This expression was expected to have type\n    ''a[]'    \nbut here has type\n    'int list'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n =\n        if n = 0 then 0\n        else\n            let even = (n % 2) = 0\n            if even then digits' (n / 2)\n            else digits' (n / 2) + digits' (n / 2 - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2 = 0)\n        if even then digits(n / 2)\n        else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp4igr7k64.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        let odd = n % 3 = 0\n        if even then digits(n / 2)\n        else digits(n / 3)\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449616,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpsd3ntfsn.fsx(12,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n acc =\n        if n = 0 then acc\n        else digits' (n-1) (acc * 10)\n    digits' n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then digits(n / 2)\n        else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp0192181u.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n acc =\n        if n = 0 then acc\n        else digits' (n - 1) (acc * 10)\n    digits' n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2)\n        else digits(n / 2) + 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp07_b56r7.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n =\n        if n = 0 then 0\n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc n =\n        if n = 0 then\n            acc\n        else\n            digits' (n - 1) (n - 1)\n    digits' 0 n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = (n % 2) = 0\n        if even then\n            n / 2\n        else\n            n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"negative number\"\n    else if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 - even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n >= 0 then\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n\n    else\n        0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then\n            n / 2\n        else\n            n / 2 - 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits (n / 2)\n        else digits (n / 2) + 1\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpbssxkouw.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n < 0 then failwith \"n must be positive\"\n    let evens = [0..n-1]\n    let odds = [1..n-1]\n    let result = List.fold (fun acc elem -> acc * elem) 0 evens\n    if odds |> List.exists (fun elem -> elem = 0) then result\n    else result\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2)\n        else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpg33tz6wm.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 - even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc = \n        if n = 0 then acc\n        else digits' (acc * 10)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 - even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        elif n % 2 = 0 then digits' (n / 2)\n        else digits' (n / 2) + digits' (n / 2 - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' acc =\n        if n % 2 = 0 then acc\n        else digits' (acc + 1)\n    digits' 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n acc =\n        if n = 0 then\n            acc\n        else\n            digits' (n-1) (acc * 10)\n    digits' n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        match n with\n        | 0 -> 0\n        | _ -> digits' (n - 1)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2 = 0\n        if even then digits(n / 2) else 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj16xpp1n.fsx(11,22): error FS0039: The value or constructor 'digits' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n acc = \n        if n = 0 then acc\n        else digits' (n - 1) (acc * 10)\n    digits' n 0\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    if n = 0 then 0\n    else\n        let even = n % 2\n        if even = 0 then n / 2\n        else n / 2 - even\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec digits' n = \n        if n = 0 then 0\n        else digits' (n-1) + digits' (n-2)\n    digits' n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Given a positive integer n, return the product of the odd digits.\n// Return 0 if all digits are even.\n// For example:\n// digits(1)  == 1\n// digits(4)  == 0\n// digits(235) == 15\nlet digits n = \n    let rec loop i = \n        if i = 0 then 0\n        else loop (i - 1)\n    loop n\nlet test() = \n  let candidate = digits\n  assert (candidate 5 = 5)\n  assert (candidate 54 = 5)\n  assert (candidate 120 = 1)\n  assert (candidate 5014 = 5)\n  assert (candidate 98765 = 315)\n  assert (candidate 5576543 = 2625)\n  assert (candidate 2468 = 0)\n  0\n\ntest()",
      "timestamp": 1675449621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}