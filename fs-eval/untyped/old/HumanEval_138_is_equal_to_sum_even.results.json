{
  "name": "HumanEval_138_is_equal_to_sum_even",
  "language": "fs",
  "prompt": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n",
  "tests": "let test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1) (n / 2)\n        else is_equal_to_sum_even_rec (acc + 1) (n / 2)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp5p9ivo51.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let sum = n % 4\n            if sum = 0 then \n                is_equal_to_sum_even_n (n / 4)\n            else\n                is_equal_to_sum_even_n (n / 4) && is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then true\n        elif n = 1 then false\n        elif n = 2 then false\n        elif n = 3 then false\n        elif n = 4 then false\n        elif n = 5 then false\n        elif n = 6 then false\n        elif n = 7 then false\n        elif n = 8 then false\n        else is_equal_to_sum_even_rec (n - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            false\n        else\n            let n = n - 1\n            if n = 0 then \n                true\n            else\n                is_equal_to_sum_even_rec (n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n <= 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then true\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (n / 2)\n        else is_equal_to_sum_even_rec (n / 2) && is_equal_to_sum_even_rec (n / 2 + 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let sum = n * n\n            if sum = 4 then \n                is_equal_to_sum_even_n (n - 1)\n            else\n                is_equal_to_sum_even_n (n - 1) && is_equal_to_sum_even_n (n - 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let n = n - 1\n            if n = 0 then\n                false\n            else\n                is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then true\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else false\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        else\n            let n' = n - 1\n            if n' = 0 then acc\n            else is_equal_to_sum_even_rec (n' - 1) (n' - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp40z8nbm2.fsx(16,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            false\n        elif n % 2 = 0 then\n            is_equal_to_sum_even_n (n / 2)\n        else\n            is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            false\n        else\n            let rec is_equal_to_sum_even_n_n = \n                if n = 4 then \n                    true\n                else\n                    is_equal_to_sum_even_n_n(n-1)\n            is_equal_to_sum_even_n_n(n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp9xiqp8dl.fsx(15,21): error FS0003: This value is not a function and cannot be applied.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + 1) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdc5cit2e.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            false\n        elif n = 1 then\n            true\n        elif n = 2 then\n            true\n        elif n = 3 then\n            true\n        elif n = 4 then\n            true\n        elif n = 5 then\n            true\n        elif n = 6 then\n            true\n        elif n = 7 then\n            true\n        elif n = 8 then\n            true\n        else\n            false\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1) (n / 2)\n        else is_equal_to_sum_even_rec (acc + 1) (n / 2)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpk4sf7m_e.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            false\n        else\n            let n = n - 1\n            if n = 0 then \n                true\n            else\n                is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec (n:int) = \n        if n = 0 then \n            false\n        elif n = 1 then \n            true\n        else\n            is_equal_to_sum_even_rec (n - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec (n:int) =\n        if n = 0 then\n            false\n        else\n            let n' = n - 1\n            if n' = 0 then\n                true\n            else\n                is_equal_to_sum_even_rec (n' - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            true\n        else\n            let n' = n - 1\n            if n' = 0 then \n                false\n            else\n                is_equal_to_sum_even_rec (n' - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            true\n        else\n            let n' = n - 1\n            if n' = 0 then \n                false\n            else\n                is_equal_to_sum_even_rec n'\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            false\n        else\n            let n_pow = n % 4\n            let n_pow_n = n / 4\n            let n_pow_n_pow = n_pow * n_pow\n            let n_pow_n_pow_n = n_pow * n_pow\n            let n_pow_n_pow_n_pow = n_pow * n_pow\n            let n_pow_n_pow_n_pow_n = n_pow * n_pow\n            let n_pow_n_pow_n_pow_n_pow = n_pow * n_pow\n            let n_pow_n_pow_n_pow_n_pow_n = n_pow * n_pow\n            let n_pow_n_pow_n_pow_n_pow = n_pow * n_pow\n            let n_pow_n_pow_n_pow_n_pow_n = n_pow * n_pow\n            let n_pow_n_pow_n_pow_n_pow = n_pow * n_pow\n            let n_pow_n_pow_n_pow_n_pow_n = n_pow * n_pow\n            let n_pow_n_pow_n_pow_n_pow = n_pow * n_pow\n            let n_pow_n_pow_n_pow_n_pow_n = n_pow * n_pow\n            let n_pow_n_pow_n_pow_n_pow = n_pow * n_pow\n            let n_pow_n_pow_n_pow_n_pow_n = n_pow * n_pow\n            let n_pow_n_pow_n_pow_n_pow = n_\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449460,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_w9fwfz4.fsx(27,13): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be the final code element in a block. Consider giving this block an explicit result.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            false\n        else\n            is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        match n with\n        | 0 -> false\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            true\n        else\n            let n = n - 1\n            if n = 0 then \n                false\n            else\n                is_equal_to_sum_even_rec (n - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        else\n            if n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1) (n / 2)\n            else is_equal_to_sum_even_rec (acc + 1) (n / 2)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmps516xddx.fsx(15,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let n = n - 1\n            if n = 0 then\n                false\n            else\n                is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        elif n % 4 = 0 then is_equal_to_sum_even_rec (acc + n) (n / 4)\n        else acc\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpwkuiryxz.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n <= 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        match n with\n        | 0 -> false\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + 1) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpb4pfva24.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then true\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | _ -> true\n        \n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let sum = n - 1\n            let even = sum % 4 = 0\n            if even then\n                is_equal_to_sum_even_n (n - 1)\n            else\n                is_equal_to_sum_even_n (n + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            false\n        else\n            let sum = n * (n - 1)\n            if sum = 4 then \n                true\n            else\n                is_equal_to_sum_even_rec (n - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n < 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let n = n - 1\n            if n = 0 then\n                false\n            else\n                is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with\n        | 0 -> false\n        | 1 -> false\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        elif n % 2 = 0 then\n            is_equal_to_sum_even_n (n / 2)\n        else\n            is_equal_to_sum_even_n (n / 2) || is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1) (n / 2)\n        else is_equal_to_sum_even_rec acc (n / 2)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpfk91lt0p.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | _ -> true\n        \n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            false\n        else\n            let n = n - 1\n            if n = 0 then \n                true\n            else\n                is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc = \n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + 1)\n    is_equal_to_sum_even_rec 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpq07s54cs.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        match n with \n        | 0 -> false\n        | 1 -> true\n        | _ -> is_equal_to_sum_even_rec (n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec (n:int) =\n        if n = 0 then\n            false\n        else\n            let n = n - 1\n            if n = 0 then\n                true\n            else\n                let n = n - 1\n                if n = 0 then\n                    true\n                else\n                    is_equal_to_sum_even_rec (n - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then true\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let sum = n + 1\n            if sum % 4 = 0 then \n                is_equal_to_sum_even_n sum\n            else\n                is_equal_to_sum_even_n (sum / 4)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let sum = n + 1\n            is_equal_to_sum_even_n sum\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let n' = n - 1 in\n            if n' = 0 then \n                false\n            else\n                is_equal_to_sum_even_n n'\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then false\n        elif n = 1 then true\n        elif n = 2 then true\n        elif n = 3 then true\n        elif n = 4 then true\n        elif n = 5 then true\n        elif n = 6 then true\n        elif n = 7 then true\n        elif n = 8 then true\n        elif n = 9 then true\n        elif n = 10 then true\n        elif n = 11 then true\n        elif n = 12 then true\n        elif n = 13 then true\n        elif n = 14 then true\n        elif n = 15 then true\n        elif n = 16 then true\n        elif n = 17 then true\n        elif n = 18 then true\n        elif n = 19 then true\n        elif n = 20 then true\n        elif n = 21 then true\n        elif n = 22 then true\n        elif n = 23 then true\n        elif n = 24 then true\n        elif n = 25 then true\n        elif n = 26 then true\n        elif n = 27 then true\n        elif n = 28 then true\n        elif n = 29 then true\n        elif n = 30 then true\n        elif n = 31 then true\n        elif n = 32 then true\n        elif n = 33 then true\n        elif n = 34 then true\n        elif n = 35 then true\n        elif n = 36 then true\n        elif n = 37 then true\n        elif n = 38 then true\n        elif n = 39 then true\n        elif n = 40 then true\n        elif n = 41 then true\n        elif n = 42 then true\n        elif n = 43 then true\n        elif n = 44 then true\n        elif n = 45 then true\n        elif n = 46 then true\n        elif n = 47 then true\n        elif n = 48 then true\n        elif n = 49 then true\n        elif n = 50 then true\n        elif n = 51 then true\n        elif n = 52 then true\n        elif n = 53 then true\n        elif n = 54 then true\n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449462,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdyylnjge.fsx(7,5): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be the final code element in a block. Consider giving this block an explicit result.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            false\n        else\n            let sum = n % 4\n            if sum = 0 then \n                is_equal_to_sum_even_n (n / 4)\n            else\n                is_equal_to_sum_even_n (n / 4) && is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let sum = n * n\n            if sum > 4 then \n                is_equal_to_sum_even_n sum\n            else\n                is_equal_to_sum_even_n (sum - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + 1) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdc5cit2e.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc = \n        match n with\n        | 0 -> acc\n        | _ -> is_equal_to_sum_even_rec (acc + 1)\n    is_equal_to_sum_even_rec 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpu9jhce15.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let n1 = n - 1\n            let n2 = n1 - 1\n            let n3 = n2 - 1\n            let n4 = n3 - 1\n            let n5 = n4 - 1\n            let n6 = n5 - 1\n            let n7 = n6 - 1\n            let n8 = n7 - 1\n            let n9 = n8 - 1\n            let n10 = n9 - 1\n            let n11 = n10 - 1\n            let n12 = n11 - 1\n            let n13 = n12 - 1\n            let n14 = n13 - 1\n            let n15 = n14 - 1\n            let n16 = n15 - 1\n            let n17 = n16 - 1\n            let n18 = n17 - 1\n            let n19 = n18 - 1\n            let n20 = n19 - 1\n            let n21 = n20 - 1\n            let n22 = n21 - 1\n            let n23 = n22 - 1\n            let n24 = n23 - 1\n            let n25 = n24 - 1\n            let n26 = n25 - 1\n            let n27 = n26 - 1\n            let n28 = n27 - 1\n            let n29 = n28 - 1\n            let n30 = n29 - 1\n            let n31 = n30 - 1\n            let n32 = n31 - 1\n            let n33 = n32 - 1\n            let n34 = n33 - 1\n            let n35 = n34 - 1\n            let n36 = n35 - 1\n            let n37 = n36 - 1\n            let n38 = n37 - 1\n            let n39 = n38 - 1\n            let n40 = n39 - 1\n            let n41 = n40 - 1\n            let n42 = n41 - 1\n            let n43 = n42 - 1\n            let n44 = n43 - 1\n            let n45 = n44 - 1\n            let n46 = n45 - 1\n            let n47 = n46 - 1\n            let n48 = n47 - 1\n            \nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449462,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_ibw7rhi.fsx(58,13): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be the final code element in a block. Consider giving this block an explicit result.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n = 4 || n = 6 || n = 8\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec (n:int) =\n        if n = 0 then\n            false\n        else\n            let n' = n - 1\n            if n' = 0 then\n                true\n            else\n                is_equal_to_sum_even_rec (n' - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc = \n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + 1)\n    is_equal_to_sum_even_rec 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpq07s54cs.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with \n        | 0 -> false\n        | 1 -> true\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n < 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n <= 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc =\n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + 1)\n    is_equal_to_sum_even_rec 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpypzgwwi4.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        match n with\n        | 0 -> true\n        | _ ->\n            let sum = n / 2\n            let even = sum % 4 = 0\n            is_equal_to_sum_even_n sum && is_equal_to_sum_even_n even\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpyyl776dx.fsx(13,66): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc =\n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + 1)\n    is_equal_to_sum_even_rec 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpypzgwwi4.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec (n:int) =\n        if n = 0 then\n            true\n        else\n            let rec is_equal_to_sum_even_rec_rec (n:int) =\n                if n = 0 then\n                    true\n                else\n                    if n % 2 = 0 then\n                        is_equal_to_sum_even_rec_rec (n / 2)\n                    else\n                        is_equal_to_sum_even_rec_rec (n / 2)\n            is_equal_to_sum_even_rec_rec n\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n <= 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1) (n / 2)\n        else is_equal_to_sum_even_rec (acc + 1) (n / 2)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp5p9ivo51.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let sum = n % 4\n            if sum = 0 then\n                is_equal_to_sum_even_n (n / 4)\n            else\n                is_equal_to_sum_even_n (n / 4) && is_equal_to_sum_even_n (n / 4)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let sum_even = n % 4\n            if sum_even = 0 then\n                is_equal_to_sum_even_n (n / 4)\n            else\n                is_equal_to_sum_even_n (n / 4) && is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let n' = n - 1 in\n            if n' = 0 then\n                false\n            else\n                is_equal_to_sum_even_n n'\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let rec is_equal_to_sum_even_n_n = \n                if n = 4 then \n                    true\n                else\n                    is_equal_to_sum_even_n_n(n-1)\n            is_equal_to_sum_even_n_n(n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpv8z0ktrt.fsx(15,21): error FS0003: This value is not a function and cannot be applied.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec (n:int) = \n        if n = 0 then \n            false\n        else\n            let rec is_equal_to_sum_even_rec_rec (n:int) = \n                if n = 0 then \n                    false\n                else\n                    let rec is_equal_to_sum_even_rec_rec_rec (n:int) = \n                        if n = 0 then \n                            false\n                        else\n                            let rec is_equal_to_sum_even_rec_rec_rec_rec (n:int) = \n                                if n = 0 then \n                                    false\n                                else\n                                    let rec is_equal_to_sum_even_rec_rec_rec_rec (n:int) = \n                                        if n = 0 then \n                                            false\n                                        else\n                                            let rec is_equal_to_sum_even_rec_rec_rec_rec (n:int) = \n                                                if n = 0 then \n                                                    false\n                                                else\n                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec (n:int) = \n                                                        if n = 0 then \n                                                            false\n                                                        else\n                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec (n:int) = \n                                                                if n = 0 then \n                                                                    false\n                                                                else\n                                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec (n:int) = \n                                                                        if n = 0 then \n                                                                            false\n                                                                        else\n                                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec (n:int) = \n                                                                                if n = 0 then \n                                                                                    false\n                                                                                else\n                                                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec (n:int) = \n                                                                                        if n = 0 then \n                                                                                            false\n                                                                                        else\n                                                                                            let rec is_equal_to_sum_even_rec_rec\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449462,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpeqiyrjcf.fsx(52,1): error FS0010: Incomplete structured construct at or before this point in binding. Expected '=' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n =\n        if n = 0 then\n            false\n        elif n = 1 then\n            true\n        else\n            is_equal_to_sum_even_rec (n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0 && is_equal_to_sum_even_n (n / 4)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449464,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n <= 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then\n            true\n        else\n            let n_minus_1 = n - 1\n            if n_minus_1 = 0 then\n                false\n            else\n                is_equal_to_sum_even_rec (n_minus_1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let n = n - 1\n            if n = 0 then\n                false\n            else\n                is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            true\n        else\n            let rec is_equal_to_sum_even_rec_n = \n                if n = 4 then \n                    true\n                else\n                    is_equal_to_sum_even_rec_n(n - 1)\n            is_equal_to_sum_even_rec_n(n - 1)\n    is_equal_to_sum_even_rec(n)\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449464,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpmbglgd7e.fsx(15,21): error FS0003: This value is not a function and cannot be applied.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | _ -> true\n        \n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n < 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let n' = n - 1\n            if n' = 0 then\n                false\n            else\n                is_equal_to_sum_even_n n'\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let n = n - 1\n            if n = 0 then\n                false\n            else\n                is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc =\n        if n = 0 then acc\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1)\n        else is_equal_to_sum_even_rec (acc + 2)\n    is_equal_to_sum_even_rec 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449464,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_xsnm5dk.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + n) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449464,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpteqhka77.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            false\n        elif n % 2 = 0 then\n            is_equal_to_sum_even_n (n / 2)\n        else\n            is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            false\n        else\n            let n = n - 1\n            if n = 0 then\n                true\n            else\n                is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with\n        | 0 -> false\n        | 1 -> true\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n =\n        if n = 0 then\n            false\n        else\n            let sum = n * (n - 1) / 2\n            is_equal_to_sum_even_rec (sum + 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let sum = n * n\n            let is_sum_even = sum % 4 = 0\n            if is_sum_even then\n                is_equal_to_sum_even_n (n - 1)\n            else\n                is_equal_to_sum_even_n (n + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n =\n        if n = 0 then\n            true\n        else\n            let n = n - 1\n            if n = 0 then\n                false\n            else\n                is_equal_to_sum_even_rec (n - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let sum = n + 1\n            is_equal_to_sum_even_n sum\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc = \n        if n = 0 then acc\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1)\n        else is_equal_to_sum_even_rec (acc + 2)\n    is_equal_to_sum_even_rec 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_9bm5l7j.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with\n        | 0 -> true\n        | 1 -> false\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then true\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with \n        | 0 -> false\n        | 1 -> true\n        | _ -> is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        elif n % 4 = 0 then is_equal_to_sum_even_rec (acc + 1) (n / 4)\n        else is_equal_to_sum_even_rec acc (n / 4)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp5ajf39wj.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        match n with\n        | 0 -> false\n        | 1 -> false\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            false\n        else\n            let sum = n * n\n            if sum = 4 then\n                true\n            else\n                is_equal_to_sum_even_n (sum - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        match n with \n        | 0 -> false\n        | 1 -> true\n        | _ -> is_equal_to_sum_even_rec (n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n = 1 then true\n        elif n = 2 then true\n        elif n = 3 then true\n        elif n = 4 then true\n        elif n = 5 then true\n        elif n = 6 then true\n        elif n = 7 then true\n        elif n = 8 then true\n        else false\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with \n        | 0 -> false\n        | 1 -> true\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) || is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with \n        | 0 -> false\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + n) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449464,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpteqhka77.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let sum = n - 1\n            let is_sum_even = sum % 2 = 0\n            if is_sum_even then\n                is_equal_to_sum_even_n (n - 1)\n            else\n                is_equal_to_sum_even_n (n + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            false\n        else\n            let sum = n % 4\n            if sum = 0 then \n                is_equal_to_sum_even_n (n / 4)\n            else\n                is_equal_to_sum_even_n (n / 4) || is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n <= 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            true\n        else\n            let rec is_equal_to_sum_even_rec_rec n = \n                if n = 0 then \n                    true\n                else\n                    let rec is_equal_to_sum_even_rec_rec_rec n = \n                        if n = 0 then \n                            true\n                        else\n                            let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                if n = 0 then \n                                    true\n                                else\n                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                        if n = 0 then \n                                            true\n                                        else\n                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                if n = 0 then \n                                                    true\n                                                else\n                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                        if n = 0 then \n                                                            true\n                                                        else\n                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                                if n = 0 then \n                                                                    true\n                                                                else\n                                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                                        if n = 0 then \n                                                                            true\n                                                                        else\n                                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                                                if n = 0 then \n                                                                                    true\n                                                                                else\n                                                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                                                        if n = 0 then \n                                                                                            true\n                                                                                        else\n                                                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                                                               if n = 0 then \n                                                                                                   true\n                                                                                               else\n                                                                                                   let rec is_equal_to_sum\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449464,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8q_io94x.fsx(56,1): error FS0010: Incomplete structured construct at or before this point in binding. Expected '=' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with \n        | 0 -> false\n        | 1 -> true\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n <= 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc = \n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + 1)\n    is_equal_to_sum_even_rec 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpq07s54cs.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with \n        | 0 -> false\n        | 1 -> false\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n = 4 || n = 6 || n = 8\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n =\n        if n = 0 then\n            true\n        else\n            let rec is_equal_to_sum_even_rec_rec n =\n                if n = 4 then\n                    true\n                else\n                    let rec is_equal_to_sum_even_rec_rec_rec n =\n                        if n = 6 then\n                            true\n                        else\n                            let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                if n = 8 then\n                                    true\n                                else\n                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                        if n = 16 then\n                                            true\n                                        else\n                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                if n = 32 then\n                                                    true\n                                                else\n                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                        if n = 64 then\n                                                            true\n                                                        else\n                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                                if n = 128 then\n                                                                    true\n                                                                else\n                                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                                        if n = 256 then\n                                                                            true\n                                                                        else\n                                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                                                if n = 512 then\n                                                                                    true\n                                                                                else\n                                                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                                                        if n = 1024 then\n                                                                                            true\n                                                                                        else\n                                                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                                                               if n = 2048 then\n                                                                                                   true\n                                                                                               else\n                                                                                                   let rec is_equal_to_sum_even_rec_rec_rec_rec n =\n                                                                                                       if n = 4096 then\n                               \nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpvr4z86v6.fsx(58,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (56:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvr4z86v6.fsx(58,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (56:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvr4z86v6.fsx(70,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (56:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvr4z86v6.fsx(70,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (56:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvr4z86v6.fsx(70,6): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (56:104). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvr4z86v6.fsx(55,100): error FS0588: The block following this 'let' is unfinished. Every code block is an expression and must have a result. 'let' cannot be the final code element in a block. Consider giving this block an explicit result.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let n = n - 1\n            if n = 0 then\n                false\n            else\n                is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            true\n        else\n            let n = n - 1\n            if n = 0 then \n                false\n            else\n                is_equal_to_sum_even_rec (n - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then true\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            true\n        else\n            let rec is_equal_to_sum_even_rec_rec n = \n                if n = 0 then \n                    true\n                else\n                    let rec is_equal_to_sum_even_rec_rec_rec n = \n                        if n = 0 then \n                            true\n                        else\n                            let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                if n = 0 then \n                                    true\n                                else\n                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                        if n = 0 then \n                                            true\n                                        else\n                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                if n = 0 then \n                                                    true\n                                                else\n                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                        if n = 0 then \n                                                            true\n                                                        else\n                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                                if n = 0 then \n                                                                    true\n                                                                else\n                                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                                        if n = 0 then \n                                                                            true\n                                                                        else\n                                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                                                if n = 0 then \n                                                                                    true\n                                                                                else\n                                                                                    let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                                                        if n = 0 then \n                                                                                            true\n                                                                                        else\n                                                                                            let rec is_equal_to_sum_even_rec_rec_rec_rec n = \n                                                                                               if n = 0 then \n                                                                                                   true\n                                                                                               else\n                                                                                                   let rec is_equal_to_sum\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449464,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8q_io94x.fsx(56,1): error FS0010: Incomplete structured construct at or before this point in binding. Expected '=' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with\n        | 0 -> false\n        | _ -> \n            let sum_even = \n                match n with\n                | 1 -> true\n                | _ -> is_equal_to_sum_even_n (n - 1)\n            is_equal_to_sum_even_n (n - 1) && sum_even\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            false\n        else\n            let is_equal_to_sum_even_n_n = is_equal_to_sum_even n\n            if is_equal_to_sum_even_n_n then\n                true\n            else\n                is_equal_to_sum_even_n_n\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpa175n_kq.fsx(11,44): error FS0039: The value or constructor 'is_equal_to_sum_even' is not defined. Maybe you want one of the following:\n   is_equal_to_sum_even_n\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with \n        | 0 -> true\n        | _ -> \n            let sum = n * 2\n            let even = sum % 4 = 0\n            is_equal_to_sum_even_n even\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprle1e4hn.fsx(13,36): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let sum = n * n\n            let is_sum_even_n = is_equal_to_sum_even_n sum\n            if is_sum_even_n then \n                is_equal_to_sum_even_n (n - 1)\n            else\n                is_equal_to_sum_even_n sum\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1) (n / 2)\n        else is_equal_to_sum_even_rec acc (n / 2)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkblope1x.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        match n with \n        | 0 -> false\n        | 1 -> false\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            false\n        else\n            let n = n - 1\n            let rec is_equal_to_sum_even_rec_n = \n                if n = 0 then \n                    true\n                else\n                    let n = n - 1\n                    let rec is_equal_to_sum_even_rec_n = \n                        if n = 0 then \n                            true\n                        else\n                            let n = n - 1\n                            let rec is_equal_to_sum_even_rec_n = \n                                if n = 0 then \n                                    true\n                                else\n                                    let n = n - 1\n                                    let rec is_equal_to_sum_even_rec_n = \n                                        if n = 0 then \n                                            true\n                                        else\n                                            let n = n - 1\n                                            let rec is_equal_to_sum_even_rec_n = \n                                                if n = 0 then \n                                                    true\n                                                else\n                                                    let n = n - 1\n                                                    let rec is_equal_to_sum_even_rec_n = \n                                                        if n = 0 then \n                                                            true\n                                                        else\n                                                            let n = n - 1\n                                                            let rec is_equal_to_sum_even_rec_n = \n                                                                if n = 0 then \n                                                                    true\n                                                                else\n                                                                    let n = n - 1\n                                                                    let rec is_equal_to_sum_even_rec_n = \n                                                                        if n = 0 then \n                                                                            true\n                                                                        else\n                                                                            let n = n - 1\n                                                                            let rec is_equal_to_sum_even_rec_n = \n                                                                                if n = 0 then \n                                                                                    true\n                                                                                else\n                                                                                    let n = n - 1\n                                                                                    let rec is_equal_to_sum_even_rec_n = \n                                                                                        if n = 0 then \n                                                                                            true\n                                                                                        else\n                                                                                            let n = n - 1\n                                                                                            let rec is\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8kroe3k1.fsx(63,1): error FS0010: Incomplete structured construct at or before this point in binding. Expected '=' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let rec is_equal_to_sum_even_n_n =\n                if n = 4 then\n                    true\n                else\n                    is_equal_to_sum_even_n_n(n - 1)\n            is_equal_to_sum_even_n_n(n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449466,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp5_u9g_y3.fsx(15,21): error FS0003: This value is not a function and cannot be applied.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        elif n % 2 = 0 then\n            is_equal_to_sum_even_n (n / 2)\n        else\n            is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc =\n        match n with\n        | 0 -> acc\n        | _ -> is_equal_to_sum_even_rec (acc + 1)\n    is_equal_to_sum_even_rec 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449466,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpiwaf57jx.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n <= 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            true\n        else\n            let n_minus_1 = n - 1\n            if n_minus_1 = 0 then \n                false\n            else\n                is_equal_to_sum_even_rec (n_minus_1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + n) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449464,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpteqhka77.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then true\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (n-1) (n-1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449466,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpgs3acv5m.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let n_n = n % 4\n            if n_n = 0 then \n                is_equal_to_sum_even_n (n / 4)\n            else\n                is_equal_to_sum_even_n (n / 4) || is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1) (n / 2)\n        else is_equal_to_sum_even_rec (acc + 1) (n / 2)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp5p9ivo51.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0 && is_equal_to_sum_even_n (n / 4)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449464,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let sum = n % 4\n            if sum = 0 then \n                is_equal_to_sum_even_n (n / 4)\n            else\n                is_equal_to_sum_even_n (n / 4) && is_equal_to_sum_even_n (n / 4)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n < 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let n = n - 1\n            if n = 0 then\n                false\n            else\n                is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let rec is_equal_to_sum_even_n_n =\n                if n = 4 then\n                    true\n                else\n                    is_equal_to_sum_even_n_n(n-1)\n            is_equal_to_sum_even_n_n(n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449466,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpqbk_34t_.fsx(15,21): error FS0003: This value is not a function and cannot be applied.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | _ -> is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + 1) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdc5cit2e.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            false\n        else\n            is_equal_to_sum_even_rec (n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        else if n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1) (n / 2)\n        else is_equal_to_sum_even_rec acc (n / 2)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449466,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkhsmksk_.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + 1) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdc5cit2e.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        match n with\n        | 0 -> false\n        | 1 -> true\n        | _ -> is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            false\n        else\n            is_equal_to_sum_even_n (n-1) && is_equal_to_sum_even_n (n-2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        elif n = 1 then acc\n        else is_equal_to_sum_even_rec (acc + n) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpq_k2flan.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1) (n / 2)\n        else is_equal_to_sum_even_rec (acc + 1) (n / 2)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp5p9ivo51.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n <= 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let rec is_equal_to_sum_even_n_n = \n                if n = 4 then \n                    true\n                else\n                    let rec is_equal_to_sum_even_n_n_n = \n                        if n = 6 then \n                            true\n                        else\n                            let rec is_equal_to_sum_even_n_n_n_n = \n                                if n = 8 then \n                                    true\n                                else\n                                    let rec is_equal_to_sum_even_n_n_n_n_n = \n                                        if n = 16 then \n                                            true\n                                        else\n                                            let rec is_equal_to_sum_even_n_n_n_n_n_n_n_n_n_n_n = \n                                                if n = 32 then \n                                                    true\n                                                else\n                                                    let rec is_equal_to_sum_even_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449466,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp5a0ieau4.fsx(32,1): error FS0010: Incomplete structured construct at or before this point in binding. Expected '=' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            false\n        else\n            let sum = n * 2\n            is_equal_to_sum_even_n (sum - 1) && is_equal_to_sum_even_n (sum + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            false\n        elif n = 1 then \n            true\n        else\n            is_equal_to_sum_even_rec (n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let n = n - 1\n            if n = 0 then\n                false\n            else\n                is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let sum_even = n % 4\n            if sum_even = 0 then\n                is_equal_to_sum_even_n (n / 4)\n            else\n                is_equal_to_sum_even_n (n / 4) || is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n < 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n = 1 then true\n        else is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let rec is_equal_to_sum_even_n_n =\n                if n = 4 then\n                    true\n                else\n                    is_equal_to_sum_even_n_n(n-1)\n            is_equal_to_sum_even_n_n(n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449466,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpqbk_34t_.fsx(15,21): error FS0003: This value is not a function and cannot be applied.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let sum = n * n\n            if sum % 4 = 0 then \n                is_equal_to_sum_even_n (n - 1)\n            else\n                is_equal_to_sum_even_n (n - 1) && is_equal_to_sum_even_n (n - 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            true\n        else\n            let n = n - 1\n            if n = 0 then \n                false\n            else\n                is_equal_to_sum_even_rec (n - 1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            false\n        elif n % 2 = 0 then \n            is_equal_to_sum_even_rec (n / 2)\n        else\n            true\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + n) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449464,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpteqhka77.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            false\n        else\n            let sum = n + 1\n            let is_sum_even = sum % 4 = 0\n            is_equal_to_sum_even_rec (sum / 4)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + n) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpmmxqe71g.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            true\n        else\n            let rec is_equal_to_sum_even_rec_n = \n                if n = 4 then \n                    true\n                else\n                    is_equal_to_sum_even_rec_n(n-1)\n            is_equal_to_sum_even_rec_n(n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkbpdfa7k.fsx(15,21): error FS0003: This value is not a function and cannot be applied.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            false\n        elif n = 1 then\n            true\n        else\n            is_equal_to_sum_even_n (n-1) && is_equal_to_sum_even_n (n-2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc = \n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + 1)\n    is_equal_to_sum_even_rec 0\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpq07s54cs.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            false\n        else\n            let sum = n - 1\n            let even = sum % 2 = 0\n            is_equal_to_sum_even_n (sum / 2) || even\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        elif n = 1 then\n            false\n        else\n            is_equal_to_sum_even_n (n-1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let n' = n - 1\n            if n' = 0 then\n                false\n            else\n                is_equal_to_sum_even_n n'\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449465,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n >= 0 && n <= 4\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    n = 4 || n = 6 || n = 8\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let n_sum = n % 4\n            if n_sum = 0 then \n                is_equal_to_sum_even_n (n / 4)\n            else\n                is_equal_to_sum_even_n (n / 4) && is_equal_to_sum_even_n (n / 4 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        elif n % 2 = 0 then\n            is_equal_to_sum_even_n (n / 2)\n        else\n            is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n = \n        if n = 0 then acc\n        else is_equal_to_sum_even_rec (acc + n) (n - 1)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449464,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpteqhka77.fsx(13,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            false\n        elif n = 1 then \n            true\n        else\n            is_equal_to_sum_even_rec (n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            false\n        elif n % 2 = 0 then \n            is_equal_to_sum_even_n (n / 2)\n        else \n            is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec (n:int) = \n        if n = 0 then \n            true\n        elif n = 1 then \n            false\n        else \n            is_equal_to_sum_even_rec (n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec acc n =\n        if n = 0 then acc\n        elif n % 2 = 0 then is_equal_to_sum_even_rec (acc + 1) (n / 2)\n        else is_equal_to_sum_even_rec acc (n / 2)\n    is_equal_to_sum_even_rec 0 n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449463,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpfk91lt0p.fsx(14,25): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'bool'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n = \n        if n = 0 then \n            false\n        elif n = 1 then \n            true\n        else\n            is_equal_to_sum_even_rec (n-1)\n    is_equal_to_sum_even_rec n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then false\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | n -> n % 4 = 0 && is_equal_to_sum_even_n (n / 4)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449464,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then true\n        elif n % 2 = 0 then is_equal_to_sum_even_n (n / 2)\n        else is_equal_to_sum_even_n (n / 2) && is_equal_to_sum_even_n (n / 2 + 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_rec n =\n        if n = 0 then\n            true\n        else\n            let rec is_equal_to_sum_even_rec_n =\n                if n = 4 then\n                    true\n                else\n                    let rec is_equal_to_sum_even_rec_n =\n                        if n = 6 then\n                            true\n                        else\n                            let rec is_equal_to_sum_even_rec_n =\n                                if n = 8 then\n                                    true\n                                else\n                                    let rec is_equal_to_sum_even_rec_n =\n                                        if n = 4 then\n                                            true\n                                        else\n                                            let rec is_equal_to_sum_even_rec_n =\n                                                if n = 6 then\n                                                    true\n                                                else\n                                                    let rec is_equal_to_sum_even_rec_n =\n                                                        if n = 8 then\n                                                            true\n                                                        else\n                                                            let rec is_equal_to_sum_even_rec_n =\n                                                                if n = 4 then\n                                                                    true\n                                                                else\n                                                                    let rec is_equal_to_sum_even_rec_n =\n                                                                        if n = 6 then\n                                                                            true\n                                                                        else\n                                                                            let rec is_equal_to_sum_even_rec_n =\n                                                                                if n = 8 then\n                                                                                    true\n                                                                                else\n                                                                                    let rec is_equal_to_sum_even_rec_n =\n                                                                                        if n = 4 then\n                                                                                            true\n                                                                                        else\n                                                                                            let rec is_equal_to_sum_even_rec_n =\n                                                                                               if n = 6 then\n                                                                                                   true\n                                                                                               else\n                                                                                                   let rec is_equal_to_sum_even_rec_n =\n                                                                                                       if n = 8 then\n                                                                                                           true\n                                                                                                       else\n                                                                                                           let rec is_equal_to_sum_even_rec_n =\n                                                                                                               if n = 4 then\n                                                                                                                   true\n                                                                                                               else\n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449467,
      "stdout": "",
      "stderr": "\n\n/tmp/tmps9sjagt2.fsx(64,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (60:112). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmps9sjagt2.fsx(64,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (60:112). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmps9sjagt2.fsx(76,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (60:112). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmps9sjagt2.fsx(76,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (60:112). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmps9sjagt2.fsx(76,6): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (60:112). Try indenting t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            false\n        else\n            let n' = n - 1\n            if n' = 0 then \n                true\n            else\n                is_equal_to_sum_even_n n'\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n = \n        if n = 0 then \n            true\n        else\n            let n = n - 1\n            if n = 0 then \n                false\n            else\n                is_equal_to_sum_even_n (n - 1)\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n = function\n        | 0 -> false\n        | _ -> true\n        \n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449461,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n// Example\n// is_equal_to_sum_even(4) == False\n// is_equal_to_sum_even(6) == False\n// is_equal_to_sum_even(8) == True\nlet is_equal_to_sum_even n = \n    let rec is_equal_to_sum_even_n n =\n        if n = 0 then\n            true\n        else\n            let sum = n * n\n            if sum > 4 then\n                is_equal_to_sum_even_n (sum - 1)\n            else\n                is_equal_to_sum_even_n sum\n    is_equal_to_sum_even_n n\nlet test() = \n  let candidate = is_equal_to_sum_even\n  assert (candidate 4 = false)\n  assert (candidate 6 = false)\n  assert (candidate 8 = true)\n  assert (candidate 10 = true)\n  assert (candidate 11 = false)\n  assert (candidate 12 = true)\n  assert (candidate 13 = false)\n  assert (candidate 16 = true)\n  0\n\ntest()",
      "timestamp": 1675449468,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}