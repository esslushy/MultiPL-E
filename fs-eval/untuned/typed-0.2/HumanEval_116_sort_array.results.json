{
  "name": "HumanEval_116_sort_array",
  "language": "fs",
  "prompt": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n",
  "tests": "let test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp0pm_8niq.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  [1, 0, 2, 3, 4]\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpgfbajq6a.fsx(9,4): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'int * int * int * int * int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n    arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmppp5gzjc8.fsx(9,9): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr.sort(cmp = (a, b) => a - b)\n  arr\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpfnjjf1e4.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp0pm_8niq.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp32xl8een.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpok8kxl2m.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpok8kxl2m.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpok8kxl2m.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\n  arr.sort()\n  arr.sort()\n  arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp32xl8een.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpok8kxl2m.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpok8kxl2m.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpok8kxl2m.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n    arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmppp5gzjc8.fsx(9,9): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  [1, 2, 3, 4, 5]\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxv11pqqu.fsx(9,4): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'int * int * int * int * int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  [1, 0, 2, 3, 4]\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpgfbajq6a.fsx(9,4): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'int * int * int * int * int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpok8kxl2m.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpok8kxl2m.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpok8kxl2m.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//In this Kata, you have to sort an array of non-negative integers according to\n// number of ones in their binary representation in ascending order.\n// For similar number of ones, sort based on decimal value.\n// It must be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nlet sort_array (arr: int list): int list  = \n  arr.sort()\nlet test() = \n  let candidate = sort_array\n  assert (candidate [1; 5; 2; 3; 4] = [1; 2; 4; 3; 5])\n  assert (candidate [-2; -3; -4; -5; -6] = [-4; -2; -6; -5; -3])\n  assert (candidate [1; 0; 2; 3; 4] = [0; 1; 2; 4; 3])\n  assert (candidate [] = [])\n  assert (candidate [2; 5; 77; 4; 5; 3; 5; 7; 2; 3; 4] = [2; 2; 4; 4; 3; 3; 5; 5; 5; 7; 77])\n  assert (candidate [3; 6; 44; 12; 32; 5] = [32; 3; 5; 6; 12; 44])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  assert (candidate [2; 4; 8; 16; 32] = [2; 4; 8; 16; 32])\n  0\n\ntest()",
      "timestamp": 1675790506,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpok8kxl2m.fsx(9,7): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}