{
  "name": "HumanEval_36_fizz_buzz",
  "language": "fs",
  "prompt": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n",
  "tests": "let test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n < 10) ? n : (n < 100) ? n : (n < 1000) ? n : (n < 10000) ? n : (n < 100000) ? n : (n < 1000000) ? n : (n < 10000000) ? n : (n < 100000000) ? n : (n < 1000000000) ? n : (n < 10000000000) ? n : (n < 100000000000) ? n : (n < 1000000000000) ? n : (n < 10000000000000) ? n : (n < 100000000000000) ? n : (n < 1000000000000000) ? n : (n < 100000000000000000) ? n : (n < 10000000000000000) ? n : (n < 100000000000000000) ? n : (n < 1000000000000000000) ? n : (n < 1000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 100000000000000000000000) ? n : (n < 100000000000000000000000) ? n : (n < 100000000000000000000000) ? n : (n < 1000000000000000000000000) ? n : (n < 1000000000000000000000000000) ? n : (n < 100000000000000000000000000) ? n : (n < 10000000000000000000000000000) ? n : (n < 100000000000000000000000000000) ? n : (n < 10000000000000000000000000000000) ? n : (n < 100000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000) ? n : (n < 100000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n : (n < 1000000000000000000000000000000000000) ? n :\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpd0mpwgq0.fsx(9,26): error FS1241: Expected type argument or static argument\n\n\n\n/tmp/tmpd0mpwgq0.fsx(9,179): error FS1147: This number is outside the allowable range for 32-bit signed integers\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n < 10) ? n : (n < 100) ? n : (n < 1000) ? n : (n < 10000) ? n : (n < 100000) ? n : (n < 1000000) ? n : (n < 10000000) ? n : (n < 100000000) ? n : (n < 1000000000) ? n : (n < 10000000000) ? n : (n < 100000000000) ? n : (n < 1000000000000) ? n : (n < 10000000000000) ? n : (n < 100000000000000) ? n : (n < 1000000000000000) ? n : (n < 100000000000000000) ? n : (n < 10000000000000000) ? n : (n < 100000000000000000) ? n : (n < 10000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp9z9hgrc0.fsx(9,26): error FS1241: Expected type argument or static argument\n\n\n\n/tmp/tmp9z9hgrc0.fsx(9,179): error FS1147: This number is outside the allowable range for 32-bit signed integers\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n % 11) * (n % 13) + (n % 7) * (n % 11) + (n % 13) * (n % 7) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7eb5vd9c.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7eb5vd9c.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7eb5vd9c.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7eb5vd9c.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7eb5vd9c.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token furth",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n < 10) ? n : (n < 100) ? n : (n < 1000) ? n : (n < 10000) ? n : (n < 100000) ? n : (n < 1000000) ? n : (n < 10000000) ? n : (n < 100000000) ? n : (n < 1000000000) ? n : (n < 10000000000) ? n : (n < 100000000000) ? n : (n < 1000000000000) ? n : (n < 10000000000000) ? n : (n < 100000000000000) ? n : (n < 1000000000000000) ? n : (n < 100000000000000000) ? n : (n < 10000000000000000) ? n : (n < 100000000000000000) ? n : (n < 1000000000000000000) ? n : (n < 1000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000) ? n : (n < 1000000000000000000000)\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpekb4dtsm.fsx(9,26): error FS1241: Expected type argument or static argument\n\n\n\n/tmp/tmpekb4dtsm.fsx(9,179): error FS1147: This number is outside the allowable range for 32-bit signed integers\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n % 11) + (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_yzoe0jm.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_yzoe0jm.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_yzoe0jm.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_yzoe0jm.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_yzoe0jm.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token furth",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n % 11) + (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_yzoe0jm.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_yzoe0jm.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_yzoe0jm.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_yzoe0jm.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_yzoe0jm.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token furth",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  fizz_buzz(n)\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp74yifa0j.fsx(9,3): error FS0039: The value or constructor 'fizz_buzz' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n % 11) + (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (n % 13) * (n % 11) * (\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_yzoe0jm.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_yzoe0jm.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_yzoe0jm.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_yzoe0jm.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_yzoe0jm.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token furth",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n < 10) ? n : (n < 100) ? n : (n < 1000) ? n : (n < 10000) ? n : (n < 100000) ? n : (n < 1000000) ? n : (n < 10000000) ? n : (n < 100000000) ? n : (n < 1000000000) ? n : (n < 10000000000) ? n : (n < 100000000000) ? n : (n < 1000000000000) ? n : (n < 10000000000000) ? n : (n < 100000000000000) ? n : (n < 100000000000000000) ? n : (n < 10000000000000000) ? n : (n < 100000000000000000) ? n : (n < 10000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n < 100000000000000000000) ? n : (n <\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp284w1ovb.fsx(9,26): error FS1241: Expected type argument or static argument\n\n\n\n/tmp/tmp284w1ovb.fsx(9,179): error FS1147: This number is outside the allowable range for 32-bit signed integers\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp4vrhwwpw.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(9,910): error FS0583: Unmatched '('\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n % 11) * (n % 13) + (n % 7);\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795269,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp4vrhwwpw.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(9,910): error FS0583: Unmatched '('\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n < 10) ? n : (n < 100) ? (n * 10) : (n * 100);\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp1b9fpo2t.fsx(9,26): error FS1241: Expected type argument or static argument\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  fizz_buzz(n)\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp74yifa0j.fsx(9,3): error FS0039: The value or constructor 'fizz_buzz' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n % 11) + (n % 13) * 7;\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795269,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13) * (n % 7) +\n  (n % 11) * (n % 13)\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795269,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (n % 13) * (n % 7) + (n % 11) * (\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp4vrhwwpw.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4vrhwwpw.fsx(9,910): error FS0583: Unmatched '('\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n % 11) * (n % 13) + (n % 7) * (n % 11) + (n % 13) * (n % 7) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (n % 13) + (n % 7) * (n % 11) + (n % 7) * (\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7eb5vd9c.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7eb5vd9c.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7eb5vd9c.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7eb5vd9c.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7eb5vd9c.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token furth",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n  (n == 0) ? 0 :\n  (n == 1) ? 1 :\n  (n == 2) ? 2 :\n  (n == 3) ? 3 :\n  (n == 4) ? 4 :\n  (n == 5) ? 5 :\n  (n == 6) ? 6 :\n  (n == 7) ? 7 :\n  (n == 8) ? 8 :\n  (n == 9) ? 9 :\n  (n == 10) ? 10 :\n  (n == 11) ? 11 :\n  (n == 12) ? 12 :\n  (n == 13) ? 13 :\n  (n == 14) ? 14 :\n  (n == 15) ? 15 :\n  (n == 16) ? 16 :\n  (n == 17) ? 17 :\n  (n == 18) ? 18 :\n  (n == 19) ? 19 :\n  (n == 20) ? 20 :\n  (n == 21) ? 21 :\n  (n == 22) ? 22 :\n  (n == 23) ? 23 :\n  (n == 24) ? 24 :\n  (n == 25) ? 25 :\n  (n == 26) ? 26 :\n  (n == 27) ? 27 :\n  (n == 28) ? 28 :\n  (n == 29) ? 29 :\n  (n == 30) ? 30 :\n  (n == 31) ? 31 :\n  (n == 32) ? 32 :\n  (n == 33) ? 33 :\n  (n == 34) ? 34 :\n  (n == 35) ? 35 :\n  (n == 36) ? 36 :\n  (n == 37) ? 37 :\n  (n == 38) ? 38 :\n  (n == 39) ? 39 :\n  (n == 40) ? 40 :\n  (n == 41) ? 41 :\n  (n == 42) ? 42 :\n  (n == 43) ? 43 :\n  (n == 44) ? 44 :\n  (n == 45) ? 45 :\n  (n == 46) ? 46 :\n  (n == 47) ? 47 :\n  (n == 48) ? 48 :\n  (n == 49) ? 49 :\n  (n == 50) ? 50 :\n  (\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpgb2sufbz.fsx(9,14): error FS0010: Unexpected integer literal in expression. Expected identifier, '(' or other token.\n\n\n\n/tmp/tmpgb2sufbz.fsx(61,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpgb2sufbz.fsx(61,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpgb2sufbz.fsx(61,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpgb2sufbz.fsx(73,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpgb2sufbz.fsx(73,1): warning FS0",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n// 2\n// >>> fizz_buzz(79)\n// 3\nlet fizz_buzz (n: int): int  = \n    fizz_buzz(n)\nlet test() = \n  let candidate = fizz_buzz\n  assert (candidate 50 = 0)\n  assert (candidate 78 = 2)\n  assert (candidate 79 = 3)\n  assert (candidate 100 = 3)\n  assert (candidate 200 = 6)\n  assert (candidate 4000 = 192)\n  assert (candidate 10000 = 639)\n  assert (candidate 100000 = 8026)\n  0\n\ntest()",
      "timestamp": 1675795268,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7_ugi_hh.fsx(9,5): error FS0039: The value or constructor 'fizz_buzz' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}