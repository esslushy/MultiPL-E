{
  "name": "HumanEval_93_encode",
  "language": "fs",
  "prompt": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n",
  "tests": "let test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n(message: string) => message.replace(/[A-Z]/g, function (letter) {\n  return letter.toUpperCase();\n});\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj88g2cc_.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpj88g2cc_.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpj88g2cc_.fsx(12,39): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpj88g2cc_.fsx(13,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:57). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpj88g2cc_.fsx(13,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:57). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpj88g2cc_.fsx(13,28): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:57). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpj88g2cc_.fsx(13,29): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:57). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpj88g2cc_.fsx(15,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpj88g2cc_.fsx(15,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpj88g2cc_.fsx(24,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventio",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  function (message: string) {\n    let result = '';\n    for (let i = 0; i < message.length; i++) {\n      let letter = message.charAt(i);\n      let newLetter = letter.toUpperCase();\n      if (newLetter === 'T') {\n        result += 'T';\n      } else if (newLetter === 'S') {\n        result += 'S';\n      } else if (newLetter === 'K') {\n        result += 'K';\n      } else if (newLetter === 'M') {\n        result += 'M';\n      } else if (newLetter === 'G') {\n        result += 'G';\n      } else if (newLetter === 'S') {\n        result += 'S';\n      } else if (newLetter === 'C') {\n        result += 'C';\n      } else if (newLetter === 'G') {\n        result += 'G';\n      } else if (newLetter === 'S') {\n        result += 'S';\n      } else if (newLetter === 'C') {\n        result += 'C';\n      } else if (newLetter === 'G') {\n        result += 'G';\n      } else if (newLetter === 'S') {\n        result += 'S';\n      } else if (newLetter === 'C') {\n        result += 'C';\n      } else if (newLetter === 'G') {\n        result += 'G';\n      } else if (newLetter === 'S') {\n        result += 'S';\n      } else if (newLetter === 'C') {\n        result += 'C';\n      } else if (newLetter === 'G') {\n        result += 'G';\n      } else if (newLetter === 'S') {\n        result += 'S';\n      } else if (newLetter === 'C') {\n        result += 'C';\n      } else if (newLetter === 'G') {\n        result += 'G';\n      } else if (newLetter === 'S') {\n        result += 'S';\n      } else if (newLetter === 'C') {\n        result += 'C';\n      } else if (newLetter === 'G') {\n        result\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpmhleltzf.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmhleltzf.fsx(12,30): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpmhleltzf.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmhleltzf.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmhleltzf.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmhleltzf.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmhleltzf.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmhleltzf.fsx(20,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (19:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmhleltzf.fsx(20,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (19:9). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmhleltzf.fsx(22,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (21:9). Try indenting this token further or using standard formatting co",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z]/g, '').replace(/[^a-z\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpzyzzw_jr.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpzyzzw_jr.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[^a-z]/g, ' ');\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpuez0vdqt.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpcjlygp36.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpcjlygp36.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[aeiou]/g, function (letter) {\n    return letter.toUpperCase();\n  });\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpre7y8t_q.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpre7y8t_q.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:75). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpre7y8t_q.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:75). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpre7y8t_q.fsx(13,30): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:75). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpre7y8t_q.fsx(13,31): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:75). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n  });\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpknref9ov.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpknref9ov.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpknref9ov.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpknref9ov.fsx(13,30): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpknref9ov.fsx(13,31): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n  });\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp5o6s3e3i.fsx(12,41): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmp5o6s3e3i.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:59). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp5o6s3e3i.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:59). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp5o6s3e3i.fsx(13,30): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:59). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp5o6s3e3i.fsx(13,31): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:59). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[a-z]/g, function (c) {\n    return 'a' + c.toUpperCase();\n  });\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprdz24rp7.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmprdz24rp7.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprdz24rp7.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprdz24rp7.fsx(13,31): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprdz24rp7.fsx(13,32): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n  });\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpknref9ov.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpknref9ov.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpknref9ov.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpknref9ov.fsx(13,30): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpknref9ov.fsx(13,31): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpcjlygp36.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n(message: string) => message.toLowerCase().replace(/[a-z]/g, function (letter) {\n  return letter.toUpperCase();\n});\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpeguhynak.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeguhynak.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeguhynak.fsx(12,53): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpeguhynak.fsx(13,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:71). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeguhynak.fsx(13,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:71). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeguhynak.fsx(13,28): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:71). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeguhynak.fsx(13,29): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:71). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeguhynak.fsx(15,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeguhynak.fsx(15,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeguhynak.fsx(24,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventio",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpcjlygp36.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n(message: string) => message.replace(/[^a-zA-Z]/g, function (letter) {\n  return letter.toUpperCase();\n});\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpn7nft0cp.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpn7nft0cp.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpn7nft0cp.fsx(12,39): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpn7nft0cp.fsx(13,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:61). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpn7nft0cp.fsx(13,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:61). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpn7nft0cp.fsx(13,28): warning FS0058: Pos",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[a-z]/g, function (c) {\n    return 'a' + c.toUpperCase();\n  });\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprdz24rp7.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmprdz24rp7.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprdz24rp7.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprdz24rp7.fsx(13,31): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprdz24rp7.fsx(13,32): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:73). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[a-z]/g, function(letter) {\n    return letter.toUpperCase();\n  });\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp12d3q28u.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmp12d3q28u.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:72). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp12d3q28u.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:72). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp12d3q28u.fsx(13,30): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:72). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp12d3q28u.fsx(13,31): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:72). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.replace(/[^a-zA-Z]/g, 'A').replace(/[^a-zA-Z]/g, 'A').replace(/[^a-zA-Z]/g, 'A').replace(/[^a-zA-Z]/g, 'A').replace(/[^a-zA-Z]/g, 'A').replace(/[^a-zA-Z]/g, 'A');\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpy1hf7mb8.fsx(12,41): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[^a-z]/g, '-').replace(/[\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnmjseq3l.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpnmjseq3l.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpnmjseq3l.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpnmjseq3l.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpnmjseq3l.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpnmjseq3l.fsx(22,1): warning FS0058: Possib",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function that takes a message, and encodes in such a \n// way that it swaps case of all letters, replaces all vowels in \n// the message with the letter that appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n// 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nlet encode (message: string): string  = \n  (message: string) => message.toLowerCase().replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[^a-z]/g, ' ').replace(/[\nlet test() = \n  let candidate = encode\n  assert (candidate \"TEST\" = \"tgst\")\n  assert (candidate \"Mudasir\" = \"mWDCSKR\")\n  assert (candidate \"YES\" = \"ygs\")\n  assert (candidate \"This is a message\" = \"tHKS KS C MGSSCGG\")\n  assert (candidate \"I DoNt KnOw WhAt tO WrItE\" = \"k dQnT kNqW wHcT Tq wRkTg\")\n  0\n\ntest()",
      "timestamp": 1675795210,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpcjlygp36.fsx(12,55): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpcjlygp36.fsx(22,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}