{
  "name": "HumanEval_26_remove_duplicates",
  "language": "fs",
  "prompt": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n",
  "tests": "let test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(x => x - 1)\n  .filter(x => x > 1)\n  .filter(x => x > 2)\n  .filter(x => x > 3)\n  .filter(x => x > 4)\n  .filter(x => x > 5)\n  .filter(x => x > 6)\n  .filter(x => x > 7)\n  .filter(x => x > 8)\n  .filter(x => x > 9)\n  .filter(x => x > 10)\n  .filter(x => x > 11)\n  .filter(x => x > 12)\n  .filter(x => x > 13)\n  .filter(x => x > 14)\n  .filter(x => x > 15)\n  .filter(x => x > 16)\n  .filter(x => x > 17)\n  .filter(x => x > 18)\n  .filter(x => x > 19)\n  .filter(x => x > 20)\n  .filter(x => x > 21)\n  .filter(x => x > 22)\n  .filter(x => x > 23)\n  .filter(x => x > 24)\n  .filter(x => x > 25)\n  .filter(x => x > 26)\n  .filter(x => x > 27)\n  .filter(x => x > 28)\n  .filter(x => x > 29)\n  .filter(x => x > 30)\n  .filter(x => x > 31)\n  .filter(x => x > 32)\n  .filter(x => x > 33)\n  .filter(x => x > 34)\n  .filter(x => x > 35)\n  .filter(x => x > 36)\n  .filter(x => x > 37)\n  .filter(x => x > 38)\n  .filter(x => x > 39)\n  .filter(x => x > 40)\n  .filter(x => x > 41)\n  .filter(x => x > 42)\n  .filter(x => x > 43)\n  .filter(x => x > 44)\n  .filter(x => x > 45)\n  .filter(\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp984a7abq.fsx(7,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmp984a7abq.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp984a7abq.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp984a7abq.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp984a7abq.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tm",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n    numbers.map((n: number) => n - 1)\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp3y4xqbti.fsx(6,13): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(n => n - 1)\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxb0g4b57.fsx(6,11): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map((n: number) => n - 1)\n  .filter((n: number) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: number) => n)\n  .filter((n: number) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: number) => n)\n  .filter((n: number) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: number) => n)\n  .filter((n: number) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: number) => n)\n  .filter((n: number) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: number) => n)\n  .filter((n: number) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: number) => n)\n  .filter((n: number) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: number) => n)\n  .filter((n: number) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: number) => n)\n  .filter((n: number) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: number) => n)\n  .filter((n: number) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: number) => n)\n  .filter((n: number) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: number) => n)\n  .filter((n: number) => n > 1\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpwc_63j_c.fsx(7,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpwc_63j_c.fsx(41,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(x => x - 1)\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkop5sstt.fsx(6,11): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(n => n - 1)\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxb0g4b57.fsx(6,11): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(x => x - 1)\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkop5sstt.fsx(6,11): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(n => n - 1)\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxb0g4b57.fsx(6,11): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(n => n - 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpzpjib74n.fsx(7,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpzpjib74n.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpzpjib74n.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpzpjib74n.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpzpjib74n.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tm",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map((n: number) => n - 1)\n  .filter((n: number) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: number) => n)\n  .reduce((n1, n2) => n1 - n2)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map((n: number) => n)\n  .reverse()\n  .map\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnkmo9fs4.fsx(7,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n    numbers.map(x => x - 1)\n    .filter(x => x > 1)\n    .filter(x => x > 2)\n    .filter(x => x > 3)\n    .filter(x => x > 4)\n    .filter(x => x > 5)\n    .filter(x => x > 6)\n    .filter(x => x > 7)\n    .filter(x => x > 8)\n    .filter(x => x > 9)\n    .filter(x => x > 10)\n    .filter(x => x > 11)\n    .filter(x => x > 12)\n    .filter(x => x > 13)\n    .filter(x => x > 14)\n    .filter(x => x > 15)\n    .filter(x => x > 16)\n    .filter(x => x > 17)\n    .filter(x => x > 18)\n    .filter(x => x > 19)\n    .filter(x => x > 20)\n    .filter(x => x > 21)\n    .filter(x => x > 22)\n    .filter(x => x > 23)\n    .filter(x => x > 24)\n    .filter(x => x > 25)\n    .filter(x => x > 26)\n    .filter(x => x > 27)\n    .filter(x => x > 28)\n    .filter(x => x > 29)\n    .filter(x => x > 30)\n    .filter(x => x > 31)\n    .filter(x => x > 32)\n    .filter(x => x > 33)\n    .filter(x => x > 34)\n    .filter(x => x > 35)\n    .filter(x => x > 36)\n    .filter(x => x > 37)\n    .filter(x => x > 38)\n    .filter(x => x > 39)\n    .filter(x => x > 40)\n    .filter(x => x > 41)\n    .filter(x => x > 42)\n    .filter(x => x > 43)\n    .filter(x => x > 44)\n    .filter(x => x > 45)\n    .filter(\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpddh9pj3h.fsx(7,5): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpddh9pj3h.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpddh9pj3h.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpddh9pj3h.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpddh9pj3h.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tm",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(x => x - 1)\n  .filter(x => x > 1)\n  .filter(x => x > 2)\n  .filter(x => x > 3)\n  .filter(x => x > 4)\n  .filter(x => x > 5)\n  .filter(x => x > 6)\n  .filter(x => x > 7)\n  .filter(x => x > 8)\n  .filter(x => x > 9)\n  .filter(x => x > 10)\n  .filter(x => x > 11)\n  .filter(x => x > 12)\n  .filter(x => x > 13)\n  .filter(x => x > 14)\n  .filter(x => x > 15)\n  .filter(x => x > 16)\n  .filter(x => x > 17)\n  .filter(x => x > 18)\n  .filter(x => x > 19)\n  .filter(x => x > 20)\n  .filter(x => x > 21)\n  .filter(x => x > 22)\n  .filter(x => x > 23)\n  .filter(x => x > 24)\n  .filter(x => x > 25)\n  .filter(x => x > 26)\n  .filter(x => x > 27)\n  .filter(x => x > 28)\n  .filter(x => x > 29)\n  .filter(x => x > 30)\n  .filter(x => x > 31)\n  .filter(x => x > 32)\n  .filter(x => x > 33)\n  .filter(x => x > 34)\n  .filter(x => x > 35)\n  .filter(x => x > 36)\n  .filter(x => x > 37)\n  .filter(x => x > 38)\n  .filter(x => x > 39)\n  .filter(x => x > 40)\n  .filter(x => x > 41)\n  .filter(x => x > 42)\n  .filter(x => x > 43)\n  .filter(x => x > 44)\n  .filter(x => x > 45)\n  .filter(\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp984a7abq.fsx(7,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmp984a7abq.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp984a7abq.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp984a7abq.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp984a7abq.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tm",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(n => n - 1)\n  .filter(n => n % 2 == 0)\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .filter(n => n > 1)\n  .sort()\n  .map(n => n)\n  .\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpfzim1mna.fsx(7,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(n => n - 1)\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxb0g4b57.fsx(6,11): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map((n: int) => n - 1)\n  .filter((n: int) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: int) => n)\n  .filter((n: int) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: int) => n)\n  .filter((n: int) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: int) => n)\n  .filter((n: int) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: int) => n)\n  .filter((n: int) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: int) => n)\n  .filter((n: int) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: int) => n)\n  .filter((n: int) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: int) => n)\n  .filter((n: int) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: int) => n)\n  .filter((n: int) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: int) => n)\n  .filter((n: int) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: int) => n)\n  .filter((n: int) => n > 1)\n  .sort((n1, n2) => n1 - n2)\n  .map((n: int) => n)\n  .filter((n: int) => n > 1\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkz_34u1_.fsx(7,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpkz_34u1_.fsx(41,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(n => n + 1)\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795236,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp0ly39jmt.fsx(6,11): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n    numbers.map(x => x - 1)\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpbb40s21u.fsx(6,13): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(n => n + 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(n => n > 1)\n  .filter(\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpid6h5a_f.fsx(7,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpid6h5a_f.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpid6h5a_f.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpid6h5a_f.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpid6h5a_f.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpid6h5a_f.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map((n: int) => n - 1)\n  .filter((n: int) => n > 1)\n  .filter((n: int) => n > 2)\n  .filter((n: int) => n > 3)\n  .filter((n: int) => n > 4)\n  .filter((n: int) => n > 5)\n  .filter((n: int) => n > 6)\n  .filter((n: int) => n > 7)\n  .filter((n: int) => n > 8)\n  .filter((n: int) => n > 9)\n  .filter((n: int) => n > 10)\n  .filter((n: int) => n > 11)\n  .filter((n: int) => n > 12)\n  .filter((n: int) => n > 13)\n  .filter((n: int) => n > 14)\n  .filter((n: int) => n > 15)\n  .filter((n: int) => n > 16)\n  .filter((n: int) => n > 17)\n  .filter((n: int) => n > 18)\n  .filter((n: int) => n > 19)\n  .filter((n: int) => n > 20)\n  .filter((n: int) => n > 21)\n  .filter((n: int) => n > 22)\n  .filter((n: int) => n > 23)\n  .filter((n: int) => n > 24)\n  .filter((n: int) => n > 25)\n  .filter((n: int) => n > 26)\n  .filter((n: int) => n > 27)\n  .filter((n: int) => n > 28)\n  .filter((n: int) => n > 29)\n  .filter((n: int) => n > 30)\n  .filter((n: int) => n > 31)\n  .filter((n: int) => n > 32)\n  .filter((n: int) => n > 33)\n  .filter((n: int) => n > 34)\n  .filter((n: int) => n > 35)\n  .filter((n:\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795235,
      "stdout": "",
      "stderr": "\n\n/tmp/tmptuq2w8pb.fsx(7,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmptuq2w8pb.fsx(43,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (5:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//From a list of integers, remove all elements that occur more than once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nlet remove_duplicates (numbers: int list): int list  = \n  numbers.map(n => n + 1)\nlet test() = \n  let candidate = remove_duplicates\n  assert (candidate [] = [])\n  assert (candidate [1; 2; 3; 4] = [1; 2; 3; 4])\n  assert (candidate [1; 2; 3; 2; 4; 3; 5] = [1; 4; 5])\n  0\n\ntest()",
      "timestamp": 1675795236,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp0ly39jmt.fsx(6,11): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}