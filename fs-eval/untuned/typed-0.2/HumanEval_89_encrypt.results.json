{
  "name": "HumanEval_89_encrypt",
  "language": "fs",
  "prompt": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n",
  "tests": "let test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n  function (s: string) {\n    let result = s;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = '';\n    let t = '';\n    let u = '';\n    let v = '';\n    let w = '';\n    let x = '';\n    let y = '';\n    let z = '';\n    let a = '';\n    let b = '';\n    let c = '';\n    let d = '';\n    let e = '';\n    let f = '';\n    let g = '';\n    let h = '';\n    let i = '';\n    let j = '';\n    let k = '';\n    let l = '';\n    let m = '';\n    let n = '';\n    let o = '';\n    let p = '';\n    let q = '';\n    let r = '';\n    let s = '';\n    let t = '';\n    let u = '';\n    let v = '';\n    let w = '';\n    let x = '';\n    let y = '';\n    let z = '';\n    let a = '';\n    let b = '';\n    let c = '';\n    let d = '';\n    let e = '';\n    let f = '';\n    let g = '';\n    let h = '';\n    let i = '';\n    let j = '';\n    let k = '';\n    let l = '';\n    let m = '';\n    let n = '';\n    let o = '';\n    let p = '';\n    let q = '';\n    let r = '';\n    let s = '';\n    let t = '';\n    let u = '';\n    let v = '';\n    let w = '';\n    let x = '';\n    let y = '';\n    let z = '';\n    let a = '';\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpvd0rd3_y.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvd0rd3_y.fsx(11,24): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpvd0rd3_y.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvd0rd3_y.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvd0rd3_y.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvd0rd3_y.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvd0rd3_y.fsx(13,5): warning FS00",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n(s: string) => s.charAt(0) + s.charAt(1) + s.charAt(2) + s.charAt(3) + s.charAt(4) + s.charAt(5) + s.charAt(6) + s.charAt(7) + s.charAt(8) + s.charAt(9) + s.charAt(10) + s.charAt(11) + s.charAt(12) + s.charAt(13) + s.charAt(14) + s.charAt(15) + s.charAt(16) + s.charAt(17) + s.charAt(18) + s.charAt(19) + s.charAt(20) + s.charAt(21) + s.charAt(22) + s.charAt(23) + s.charAt(24) + s.charAt(25) + s.charAt(26) + s.charAt(27) + s.charAt(28) + s.charAt(29) + s.charAt(30) + s.charAt(31) + s.charAt(32) + s.charAt(33) + s.charAt(34) + s.charAt(35) + s.charAt(36) + s.charAt(37) + s.charAt(38) + s.charAt(39) + s.charAt(40) + s.charAt(41) + s.charAt(42) + s.charAt(43) + s.charAt(44) + s.charAt(45) + s.charAt(46) + s.charAt(47) + s.charAt(48) + s.charAt(49) + s.charAt(50) + s.charAt(51) + s.charAt(52) + s.charAt(53) + s.charAt(54) + s.charAt(55) + s.charAt(56) + s.charAt(57) + s.charAt(58) + s.charAt(59) + s.charAt(60) + s.charAt(61) + s.charAt(62) + s.\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp6w3qr8ze.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp6w3qr8ze.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp6w3qr8ze.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp6w3qr8ze.fsx(11,952): error FS0599: Missing qualification after '.'\n\n\n\n/tmp/tmp6w3qr8ze.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp6w3qr8ze.fsx(24,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp6w3qr8ze.fsx(24,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n  function (s: string) {\n    let result = '';\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = '';\n    let t = '';\n    let u = '';\n    let v = '';\n    let w = '';\n    let x = '';\n    let y = '';\n    let z = '';\n    let a = '';\n    let b = '';\n    let c = '';\n    let d = '';\n    let e = '';\n    let f = '';\n    let g = '';\n    let h = '';\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = '';\n    let t = '';\n    let u = '';\n    let v = '';\n    let w = '';\n    let x = '';\n    let y = '';\n    let z = '';\n    let a = '';\n    let b = '';\n    let c = '';\n    let d = '';\n    let e = '';\n    let f = '';\n    let g = '';\n    let h = '';\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = '';\n    let t = '';\n    let u = '';\n    let v = '';\n    let w = '';\n    let x = '';\n    let y = '';\n    let z = '';\n    let a = '';\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpbtq1x4py.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpbtq1x4py.fsx(11,24): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpbtq1x4py.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpbtq1x4py.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpbtq1x4py.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpbtq1x4py.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpbtq1x4py.fsx(13,5): warning FS0",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \nfunction encrypt (s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1) + s.slice(0, 1) + s.slice(1, 2) + s.slice(2, 3) + s.slice(3, 4) + s.slice(4, 5) + s.slice(5, 6) + s.slice(6, 7) + s.slice(7, 8) + s.slice(8, 9) + s.slice(9, 10) + s.slice(10, 11) + s.slice(11, 12) + s.slice(12, 13) + s.slice(13, 14) + s.slice(14, 15) + s.slice(15, 16) + s.slice(16, 17) + s.slice(17, 18) + s.slice(18, 19) + s.slice(19, 20) + s.slice(20, 21) + s.slice(21, 22) + s.slice(22, 23) + s.slice(23, 24) + s.slice(24, 25) + s.slice(25, 26) + s.slice(26, 27) + s.slice(27, 28) + s.slice(28, 29) + s.slice(29, 30) + s.slice(30, 31) + s.slice(31, 32) + s.slice(32, 33) + s.slice(33, 34) + s.slice(34, 35) + s.slice(35, 36) + s.slice(36, 37) + s.slice(37, 38) + s.slice(38, 39) + s.slice(39, 40) + s.slice(40, 41) + s.slice(41, 42) + s.slice(42, 43) + s.slice(43, 44) + s.slice(44, 45) + s.slice(45, 46) + s.slice(46, 47) + s.slice(47, 48) + s.slice(48, 49) + s.slice(49, 50) + s.slice(50, 51) + s.slice(51, 52) + s.slice(52, 53) + s.slice(\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmph2_23_2_.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmph2_23_2_.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmph2_23_2_.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmph2_23_2_.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmph2_23_2_.fsx(12,5): error FS0010: Unexpected yield in pattern. Expected identifier, 'global' or other token.\n\n\n\n/tmp/tmph2_23_2_.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmph2_23_2_.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmph2_23_2_.fsx(13,1): warning FS",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n(s: string) => s.charAt(0) + s.charAt(1) + s.charAt(2) + s.charAt(3) + s.charAt(4) + s.charAt(5) + s.charAt(6) + s.charAt(7) + s.charAt(8) + s.charAt(9) + s.charAt(10) + s.charAt(11) + s.charAt(12) + s.charAt(13) + s.charAt(14) + s.charAt(15) + s.charAt(16) + s.charAt(17) + s.charAt(18) + s.charAt(19) + s.charAt(20) + s.charAt(21) + s.charAt(22) + s.charAt(23) + s.charAt(24) + s.charAt(25) + s.charAt(26) + s.charAt(27) + s.charAt(28) + s.charAt(29) + s.charAt(30) + s.charAt(31) + s.charAt(32) + s.charAt(33) + s.charAt(34) + s.charAt(35) + s.charAt(36) + s.charAt(37) + s.charAt(38) + s.charAt(39) + s.charAt(40) + s.charAt(41) + s.charAt(42) + s.charAt(43) + s.charAt(44) + s.charAt(45) + s.charAt(46) + s.charAt(47) + s.charAt(48) + s.charAt(49) + s.charAt(50) + s.charAt(51) + s.charAt(52) + s.charAt(53) + s.charAt(54) + s.charAt(55) + s.charAt(56) + s.charAt(57) + s.charAt(58) + s.charAt(59) + s.charAt(60) + s.charAt(61) + s.charAt(62) + s.\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp6w3qr8ze.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp6w3qr8ze.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp6w3qr8ze.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp6w3qr8ze.fsx(11,952): error FS0599: Missing qualification after '.'\n\n\n\n/tmp/tmp6w3qr8ze.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp6w3qr8ze.fsx(24,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp6w3qr8ze.fsx(24,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n  (s: string) => s.charAt(0) + s.charAt(1) + s.charAt(2) + s.charAt(3) + s.charAt(4) + s.charAt(5) + s.charAt(6) + s.charAt(7) + s.charAt(8) + s.charAt(9) + s.charAt(10) + s.charAt(11) + s.charAt(12) + s.charAt(13) + s.charAt(14) + s.charAt(15) + s.charAt(16) + s.charAt(17) + s.charAt(18) + s.charAt(19) + s.charAt(20) + s.charAt(21) + s.charAt(22) + s.charAt(23) + s.charAt(24) + s.charAt(25) + s.charAt(26) + s.charAt(27) + s.charAt(28) + s.charAt(29) + s.charAt(30) + s.charAt(31) + s.charAt(32) + s.charAt(33) + s.charAt(34) + s.charAt(35) + s.charAt(36) + s.charAt(37) + s.charAt(38) + s.charAt(39) + s.charAt(40) + s.charAt(41) + s.charAt(42) + s.charAt(43) + s.charAt(44) + s.charAt(45) + s.charAt(46) + s.charAt(47) + s.charAt(48) + s.charAt(49) + s.charAt(50) + s.charAt(51) + s.charAt(52) + s.charAt(53) + s.charAt(54) + s.charAt(55) + s.charAt(56) + s.charAt(57) + s.charAt(58) + s.charAt(59) + s.charAt(60) + s.charAt(61) + s.charAt(62) + s\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp9d8l0agk.fsx(11,20): error FS0039: The type 'String' does not define the field, constructor or member 'charAt'. Maybe you want one of the following:\n   Chars\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \nfunction encrypt (s: string) {\n  let result = s;\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  let l = 0;\n  let m = 0;\n  let n = 0;\n  let o = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = '';\n  let t = '';\n  let u = '';\n  let v = '';\n  let w = '';\n  let x = '';\n  let y = '';\n  let z = '';\n  let a = '';\n  let b = '';\n  let c = '';\n  let d = '';\n  let e = '';\n  let f = '';\n  let g = '';\n  let h = '';\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  let l = 0;\n  let m = 0;\n  let n = 0;\n  let o = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = '';\n  let t = '';\n  let u = '';\n  let v = '';\n  let w = '';\n  let x = '';\n  let y = '';\n  let z = '';\n  let a = '';\n  let b = '';\n  let c = '';\n  let d = '';\n  let e = '';\n  let f = '';\n  let g = '';\n  let h = '';\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  let l = 0;\n  let m = 0;\n  let n = 0;\n  let o = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = '';\n  let t = '';\n  let u = '';\n  let v = '';\n  let w = '';\n  let x = '';\n  let y = '';\n  let z = '';\n  let a = '';\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7pet_lfc.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7pet_lfc.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7pet_lfc.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7pet_lfc.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7pet_lfc.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this toke",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n  function (s: string) {\n    let result = '';\n    let i = 0;\n    for (let j = 0; j < s.length; j++) {\n      let c = s.charAt(j);\n      result += c;\n      if (i < s.length - 1) {\n        result += c;\n      }\n      i++;\n    }\n    return result;\n  }\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpx1b3yujo.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpx1b3yujo.fsx(11,24): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpx1b3yujo.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpx1b3yujo.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpx1b3yujo.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpx1b3yujo.fsx(13,5): warning FS00",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n  (s: string) =>\n    (s.charAt(0) + s.charAt(1) + s.charAt(2) + s.charAt(3) + s.charAt(4) + s.charAt(5) + s.charAt(6) + s.charAt(7) + s.charAt(8) + s.charAt(9) + s.charAt(10) + s.charAt(11) + s.charAt(12) + s.charAt(13) + s.charAt(14) + s.charAt(15) + s.charAt(16) + s.charAt(17) + s.charAt(18) + s.charAt(19) + s.charAt(20) + s.charAt(21) + s.charAt(22) + s.charAt(23) + s.charAt(24) + s.charAt(25) + s.charAt(26) + s.charAt(27) + s.charAt(28) + s.charAt(29) + s.charAt(30) + s.charAt(31) + s.charAt(32) + s.charAt(33) + s.charAt(34) + s.charAt(35) + s.charAt(36) + s.charAt(37) + s.charAt(38) + s.charAt(39) + s.charAt(40) + s.charAt(41) + s.charAt(42) + s.charAt(43) + s.charAt(44) + s.charAt(45) + s.charAt(46) + s.charAt(47) + s.charAt(48) + s.charAt(49) + s.charAt(50) + s.charAt(51) + s.charAt(52) + s.charAt(53) + s.charAt(54) + s.charAt(55) + s.charAt(56) + s.charAt(57) + s.charAt(58) + s.charAt(59) + s.charAt(60) + s.charAt(61) + s.charAt(62\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp0_ha11jn.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp0_ha11jn.fsx(13,1): error FS0010: Unexpected keyword 'let' or 'use' in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \nfunction encrypt (s: string) {\n  return s.charAt(0).toUpperCase() + s.slice(1) + s.slice(0, 1) + s.slice(1, 2) + s.slice(2, 3) + s.slice(3, 4) + s.slice(4, 5) + s.slice(5, 6) + s.slice(6, 7) + s.slice(7, 8) + s.slice(8, 9) + s.slice(9, 10) + s.slice(10, 11) + s.slice(11, 12) + s.slice(12, 13) + s.slice(13, 14) + s.slice(14, 15) + s.slice(15, 16) + s.slice(16, 17) + s.slice(17, 18) + s.slice(18, 19) + s.slice(19, 20) + s.slice(20, 21) + s.slice(21, 22) + s.slice(22, 23) + s.slice(23, 24) + s.slice(24, 25) + s.slice(25, 26) + s.slice(26, 27) + s.slice(27, 28) + s.slice(28, 29) + s.slice(29, 30) + s.slice(30, 31) + s.slice(31, 32) + s.slice(32, 33) + s.slice(33, 34) + s.slice(34, 35) + s.slice(35, 36) + s.slice(36, 37) + s.slice(37, 38) + s.slice(38, 39) + s.slice(39, 40) + s.slice(40, 41) + s.slice(41, 42) + s.slice(42, 43) + s.slice(43, 44) + s.slice(44, 45) + s.slice(45, 46) + s.slice(46, 47) + s.slice(47, 48) + s.slice(48, 49) + s.slice(49, 50) + s.slice(50, 51) + s.slice(51, 52) + s.slice(52, 53) + s.slice(\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp2paa_az5.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp2paa_az5.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp2paa_az5.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp2paa_az5.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp2paa_az5.fsx(12,3): error FS0010: Unexpected yield in pattern. Expected identifier, 'global' or other token.\n\n\n\n/tmp/tmp2paa_az5.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp2paa_az5.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp2paa_az5.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp2paa_az5.fsx(25,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp2paa_az5.fsx(25,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n  (s: string) => s.toUpperCase().map(x => x.charAt(0).toUpperCase()).join('');\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp4g_pifbh.fsx(11,75): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \nfunction encrypt (s: string) {\n  let r = s.charAt(0)\n  let c = s.charAt(1)\n  let m = s.charAt(2)\n  let i = s.charAt(3)\n  let j = s.charAt(4)\n  let k = s.charAt(5)\n  let l = s.charAt(6)\n  let m = s.charAt(7)\n  let i = s.charAt(8)\n  let j = s.charAt(9)\n  let k = s.charAt(10)\n  let l = s.charAt(11)\n  let m = s.charAt(12)\n  let i = s.charAt(13)\n  let j = s.charAt(14)\n  let k = s.charAt(15)\n  let l = s.charAt(16)\n  let m = s.charAt(17)\n  let i = s.charAt(18)\n  let j = s.charAt(19)\n  let k = s.charAt(20)\n  let l = s.charAt(21)\n  let m = s.charAt(22)\n  let i = s.charAt(23)\n  let j = s.charAt(24)\n  let k = s.charAt(25)\n  let l = s.charAt(26)\n  let m = s.charAt(27)\n  let i = s.charAt(28)\n  let j = s.charAt(29)\n  let k = s.charAt(30)\n  let l = s.charAt(31)\n  let m = s.charAt(32)\n  let i = s.charAt(33)\n  let j = s.charAt(34)\n  let k = s.charAt(35)\n  let l = s.charAt(36)\n  let m = s.charAt(37)\n  let i = s.charAt(38)\n  let j = s.charAt(39)\n  let k = s.charAt(40)\n  let l = s.charAt(41)\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpm57zlwqm.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpm57zlwqm.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpm57zlwqm.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpm57zlwqm.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpm57zlwqm.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpm57zlwqm.fsx(12,3): error FS0010: Unexpected keyword 'let' or 'use' in pattern. Expected identifier, 'global' or other token.\n\n\n\n/tmp/tmpm57zlwqm.fsx(13,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpm57zlwqm.fsx(13,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpm57zlwqm.fsx(13,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpm57zlwqm.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using sta",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n  function (s: string) {\n    let i = s.length;\n    let j = s.charCodeAt(i - 1);\n    let k = s.charCodeAt(i - 2);\n    let l = s.charCodeAt(i - 3);\n    let m = s.charCodeAt(i - 4);\n    let n = s.charCodeAt(i - 5);\n    let o = s.charCodeAt(i - 6);\n    let p = s.charCodeAt(i - 7);\n    let q = s.charCodeAt(i - 8);\n    let r = s.charCodeAt(i - 9);\n    let s = s.charCodeAt(i - 10);\n    let t = s.charCodeAt(i - 11);\n    let u = s.charCodeAt(i - 12);\n    let v = s.charCodeAt(i - 13);\n    let w = s.charCodeAt(i - 14);\n    let x = s.charCodeAt(i - 15);\n    let y = s.charCodeAt(i - 16);\n    let z = s.charCodeAt(i - 17);\n    let a = s.charCodeAt(i - 18);\n    let b = s.charCodeAt(i - 19);\n    let c = s.charCodeAt(i - 20);\n    let d = s.charCodeAt(i - 21);\n    let e = s.charCodeAt(i - 22);\n    let f = s.charCodeAt(i - 23);\n    let g = s.charCodeAt(i - 24);\n    let h = s.charCodeAt(i - 25);\n    let i = s.charCodeAt(i - 26);\n    let j = s.charCodeAt(i - 27);\n    let k = s.charCodeAt(i - 28);\n    let l = s.charCodeAt(i - 29);\n    let m = s.charCodeAt(i - 30);\n    let n = s.charCodeAt(i - 31);\n    let o = s.charCodeAt(i - 32);\n    let p = s.charCodeAt(i - 33);\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpk6xehfzf.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpk6xehfzf.fsx(11,24): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpk6xehfzf.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpk6xehfzf.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpk6xehfzf.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpk6xehfzf.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpk6xehfzf.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpk6xehfzf.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpk6xehfzf.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpk6xehfzf.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \nfunction encrypt (s: string) {\n  let result = s;\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  let l = 0;\n  let m = 0;\n  let n = 0;\n  let o = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n  let t = 0;\n  let u = 0;\n  let v = 0;\n  let w = 0;\n  let x = 0;\n  let y = 0;\n  let z = 0;\n  let a = 0;\n  let b = 0;\n  let c = 0;\n  let d = 0;\n  let e = 0;\n  let f = 0;\n  let g = 0;\n  let h = 0;\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  let l = 0;\n  let m = 0;\n  let n = 0;\n  let o = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n  let t = 0;\n  let u = 0;\n  let v = 0;\n  let w = 0;\n  let x = 0;\n  let y = 0;\n  let z = 0;\n  let a = 0;\n  let b = 0;\n  let c = 0;\n  let d = 0;\n  let e = 0;\n  let f = 0;\n  let g = 0;\n  let h = 0;\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  let l = 0;\n  let m = 0;\n  let n = 0;\n  let o = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n  let t = 0;\n  let u = 0;\n  let v = 0;\n  let w = 0;\n  let x = 0;\n  let y = 0;\n  let z = 0;\n  let a = 0;\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmptelakz2s.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptelakz2s.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptelakz2s.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptelakz2s.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptelakz2s.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this tok",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n  (s: string) => s.charAt(0) + s.charAt(1) + s.charAt(2) + s.charAt(3) + s.charAt(4) + s.charAt(5) + s.charAt(6) + s.charAt(7) + s.charAt(8) + s.charAt(9) + s.charAt(10) + s.charAt(11) + s.charAt(12) + s.charAt(13) + s.charAt(14) + s.charAt(15) + s.charAt(16) + s.charAt(17) + s.charAt(18) + s.charAt(19) + s.charAt(20) + s.charAt(21) + s.charAt(22) + s.charAt(23) + s.charAt(24) + s.charAt(25) + s.charAt(26) + s.charAt(27) + s.charAt(28) + s.charAt(29) + s.charAt(30) + s.charAt(31) + s.charAt(32) + s.charAt(33) + s.charAt(34) + s.charAt(35) + s.charAt(36) + s.charAt(37) + s.charAt(38) + s.charAt(39) + s.charAt(40) + s.charAt(41) + s.charAt(42) + s.charAt(43) + s.charAt(44) + s.charAt(45) + s.charAt(46) + s.charAt(47) + s.charAt(48) + s.charAt(49) + s.charAt(50) + s.charAt(51) + s.charAt(52) + s.charAt(53) + s.charAt(54) + s.charAt(55) + s.charAt(56) + s.charAt(57) + s.charAt(58) + s.charAt(59) + s.charAt(60) + s.charAt(61) + s.charAt(62) + s\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp9d8l0agk.fsx(11,20): error FS0039: The type 'String' does not define the field, constructor or member 'charAt'. Maybe you want one of the following:\n   Chars\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \nfunction encrypt (s: string) {\n  let result = s;\n  let rot = s.charAt(0);\n  let i = 1;\n  let j = 1;\n  let k = 1;\n  let l = 1;\n  let m = 1;\n  let n = 1;\n  let o = 1;\n  let p = 1;\n  let q = 1;\n  let r = 1;\n  let s = s.charAt(0);\n  let t = s.charAt(0);\n  let u = s.charAt(0);\n  let v = s.charAt(0);\n  let w = s.charAt(0);\n  let x = s.charAt(0);\n  let y = s.charAt(0);\n  let z = s.charAt(0);\n  let a = s.charAt(0);\n  let b = s.charAt(0);\n  let c = s.charAt(0);\n  let d = s.charAt(0);\n  let e = s.charAt(0);\n  let f = s.charAt(0);\n  let g = s.charAt(0);\n  let h = s.charAt(0);\n  let i = 1;\n  let j = 1;\n  let k = 1;\n  let l = 1;\n  let m = 1;\n  let n = 1;\n  let o = 1;\n  let p = 1;\n  let q = 1;\n  let r = 1;\n  let s = s.charAt(0);\n  let t = s.charAt(0);\n  let u = s.charAt(0);\n  let v = s.charAt(0);\n  let w = s.charAt(0);\n  let x = s.charAt(0);\n  let y = s.charAt(0);\n  let z = s.charAt(0);\n  let a = s.charAt(0);\n  let b = s.charAt(0);\n  let c = s.charAt(0);\n  let d = s.charAt(0);\n  let e = s.charAt\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp9ucgr7h8.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9ucgr7h8.fsx(11,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9ucgr7h8.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9ucgr7h8.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9ucgr7h8.fsx(12,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9ucgr7h8.fsx(12,3): error FS0010: Unexpected keyword 'let' or 'use' in pattern. Expected identifier, 'global' or other token.\n\n\n\n/tmp/tmp9ucgr7h8.fsx(13,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9ucgr7h8.fsx(13,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9ucgr7h8.fsx(13,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9ucgr7h8.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:10). Try indenting this token further or using sta",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n  (s: string) => \n    (s.charAt(0) + s.charAt(1) + s.charAt(2) + s.charAt(3) + s.charAt(4) + s.charAt(5) + s.charAt(6) + s.charAt(7) + s.charAt(8) + s.charAt(9) + s.charAt(10) + s.charAt(11) + s.charAt(12) + s.charAt(13) + s.charAt(14) + s.charAt(15) + s.charAt(16) + s.charAt(17) + s.charAt(18) + s.charAt(19) + s.charAt(20) + s.charAt(21) + s.charAt(22) + s.charAt(23) + s.charAt(24) + s.charAt(25) + s.charAt(26) + s.charAt(27) + s.charAt(28) + s.charAt(29) + s.charAt(30) + s.charAt(31) + s.charAt(32) + s.charAt(33) + s.charAt(34) + s.charAt(35) + s.charAt(36) + s.charAt(37) + s.charAt(38) + s.charAt(39) + s.charAt(40) + s.charAt(41) + s.charAt(42) + s.charAt(43) + s.charAt(44) + s.charAt(45) + s.charAt(46) + s.charAt(47) + s.charAt(48) + s.charAt(49) + s.charAt(50) + s.charAt(51) + s.charAt(52) + s.charAt(53) + s.charAt(54) + s.charAt(55) + s.charAt(56) + s.charAt(57) + s.charAt(58) + s.charAt(59) + s.charAt(60) + s.charAt(61) + s.charAt(\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkls6y1gs.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpkls6y1gs.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpkls6y1gs.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpkls6y1gs.fsx(25,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpkls6y1gs.fsx(25,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpkls6y1gs.fsx(12,934): error FS0583: Unmatched '('\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n  function (s: string) {\n    let result = s;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = '';\n    let t = '';\n    let u = '';\n    let v = '';\n    let w = '';\n    let x = '';\n    let y = '';\n    let z = '';\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = '';\n    let t = '';\n    let u = '';\n    let v = '';\n    let w = '';\n    let x = '';\n    let y = '';\n    let z = '';\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = '';\n    let t = '';\n    let u = '';\n    let v = '';\n    let w = '';\n    let x = '';\n    let y = '';\n    let z = '';\n    let a = 0;\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp4c5eol09.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4c5eol09.fsx(11,24): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmp4c5eol09.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4c5eol09.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4c5eol09.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4c5eol09.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4c5eol09.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4c5eol09.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4c5eol09.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp4c5eol09.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n  function (s: string) {\n    let r = s.charAt(0)\n    let c = s.charAt(1)\n    let d = s.charAt(2)\n    let e = s.charAt(3)\n    let f = s.charAt(4)\n    let g = s.charAt(5)\n    let h = s.charAt(6)\n    let i = s.charAt(7)\n    let j = s.charAt(8)\n    let k = s.charAt(9)\n    let l = s.charAt(10)\n    let m = s.charAt(11)\n    let n = s.charAt(12)\n    let o = s.charAt(13)\n    let p = s.charAt(14)\n    let q = s.charAt(15)\n    let r = s.charAt(16)\n    let s = s.charAt(17)\n    let t = s.charAt(18)\n    let u = s.charAt(19)\n    let v = s.charAt(20)\n    let w = s.charAt(21)\n    let x = s.charAt(22)\n    let y = s.charAt(23)\n    let z = s.charAt(24)\n    let a = s.charAt(25)\n    let b = s.charAt(26)\n    let c = s.charAt(27)\n    let d = s.charAt(28)\n    let e = s.charAt(29)\n    let f = s.charAt(30)\n    let g = s.charAt(31)\n    let h = s.charAt(32)\n    let i = s.charAt(33)\n    let j = s.charAt(34)\n    let k = s.charAt(35)\n    let l = s.charAt(36)\n    let m = s.charAt(37)\n    let n = s.charAt(38)\n    let o = s.charAt(39)\n    let p = s.charAt(40)\n    let q = s.charAt(41)\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpf2hn4qth.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf2hn4qth.fsx(11,24): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpf2hn4qth.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf2hn4qth.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf2hn4qth.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf2hn4qth.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf2hn4qth.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf2hn4qth.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf2hn4qth.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf2hn4qth.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Create a function encrypt that takes a string as an argument and\n// returns a string encrypted with the alphabet being rotated. \n// The alphabet should be rotated in a manner such that the letters \n// shift down by two multiplied to two places.\n// For example:\n// encrypt('hi') returns 'lm'\n// encrypt('asdfghjkl') returns 'ewhjklnop'\n// encrypt('gf') returns 'kj'\n// encrypt('et') returns 'ix'\nlet encrypt (s: string): string  = \n  function encrypt (s: string) {\n    let r = s.charAt(0)\n    let c = s.charAt(1)\n    let m = s.charAt(2)\n    let i = s.charAt(3)\n    let j = s.charAt(4)\n    let k = s.charAt(5)\n    let l = s.charAt(6)\n    let m = s.charAt(7)\n    let i = s.charAt(8)\n    let j = s.charAt(9)\n    let k = s.charAt(10)\n    let l = s.charAt(11)\n    let m = s.charAt(12)\n    let i = s.charAt(13)\n    let j = s.charAt(14)\n    let k = s.charAt(15)\n    let l = s.charAt(16)\n    let m = s.charAt(17)\n    let i = s.charAt(18)\n    let j = s.charAt(19)\n    let k = s.charAt(20)\n    let l = s.charAt(21)\n    let m = s.charAt(22)\n    let i = s.charAt(23)\n    let j = s.charAt(24)\n    let k = s.charAt(25)\n    let l = s.charAt(26)\n    let m = s.charAt(27)\n    let i = s.charAt(28)\n    let j = s.charAt(29)\n    let k = s.charAt(30)\n    let l = s.charAt(31)\n    let m = s.charAt(32)\n    let i = s.charAt(33)\n    let j = s.charAt(34)\n    let k = s.charAt(35)\n    let l = s.charAt(36)\n    let m = s.charAt(37)\n    let i = s.charAt(38)\n    let j = s.charAt(39)\n    let k = s.charAt(40)\n    let l = s.charAt(41\nlet test() = \n  let candidate = encrypt\n  assert (candidate \"hi\" = \"lm\")\n  assert (candidate \"asdfghjkl\" = \"ewhjklnop\")\n  assert (candidate \"gf\" = \"kj\")\n  assert (candidate \"et\" = \"ix\")\n  assert (candidate \"faewfawefaewg\" = \"jeiajeaijeiak\")\n  assert (candidate \"hellomyfriend\" = \"lippsqcjvmirh\")\n  assert (candidate \"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\" = \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\")\n  assert (candidate \"a\" = \"e\")\n  0\n\ntest()",
      "timestamp": 1675795206,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp9pex96vb.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9pex96vb.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9pex96vb.fsx(12,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9pex96vb.fsx(12,5): error FS0010: Unexpected keyword 'let' or 'use' in pattern. Expected identifier, 'global' or other token.\n\n\n\n/tmp/tmp9pex96vb.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9pex96vb.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9pex96vb.fsx(13,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9pex96vb.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9pex96vb.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9pex96vb.fsx(14,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:12). Try indenting this token further or using s",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}