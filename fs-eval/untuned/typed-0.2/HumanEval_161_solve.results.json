{
  "name": "HumanEval_161_solve",
  "language": "fs",
  "prompt": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n",
  "tests": "let test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  s.split(\"\").reverse().join(\"\");\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw4r6s7f9.fsx(11,5): error FS0039: The type 'String' does not define the field, constructor or member 'split'. Maybe you want one of the following:\n   Split\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  s.split(\"\").reverse().join(\"\");\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw4r6s7f9.fsx(11,5): error FS0039: The type 'String' does not define the field, constructor or member 'split'. Maybe you want one of the following:\n   Split\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  (s.toLowerCase().replace(/[^a-z]/g, \"\")).toLowerCase().replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]/g, \"\")\n  .replace(/[^a-z]\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpoyszvx05.fsx(11,29): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpoyszvx05.fsx(40,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  (s.charAt(i) == '#') ? s.substr(0, i) : s.substr(i);\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnx3xr7em.fsx(11,51): error FS0010: Unexpected symbol '(' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  s.toLowerCase().replace(/[^a-z]/g, \"\").split(\"\").reverse().join(\"\");\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp1hi3dgha.fsx(11,28): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  s.split(\"\").reverse().join(\"\");\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw4r6s7f9.fsx(11,5): error FS0039: The type 'String' does not define the field, constructor or member 'split'. Maybe you want one of the following:\n   Split\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  (s.charAt(i) == '#') ? s.substr(i + 1, 2) : s.substr(i);\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7is271ff.fsx(11,55): error FS0010: Unexpected symbol '(' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  (s.toLowerCase()).replace(/[^a-z]/g, \"\").split(\"\");\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpc6odrwsw.fsx(11,30): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  (s.charAt(i) == '@') ? s.substring(i, i + 1) : s.substring(i);\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp9ewp1q3g.fsx(11,61): error FS0010: Unexpected symbol '(' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n    s.toLowerCase().replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^a-z0-9]/g, \"\")\n    .replace(/[^\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpm5778qv6.fsx(11,30): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n\n\n/tmp/tmpm5778qv6.fsx(37,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpm5778qv6.fsx(37,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpm5778qv6.fsx(49,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpm5778qv6.fsx(49,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (10:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  s.toLowerCase().replace(/[^a-z0-9]/g, \"\").split(\"\");\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpgpuiilyr.fsx(11,28): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  s.toLowerCase().split(\"\").reverse().join(\"\");\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpbrdlc3ht.fsx(11,5): error FS0039: The type 'String' does not define the field, constructor or member 'toLowerCase'. Maybe you want one of the following:\n   ToLower\n   ToLowerInvariant\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  (s.charAt(i) == '@') ? s.substr(0, i) : s.substr(i);\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpz8ppclxn.fsx(11,51): error FS0010: Unexpected symbol '(' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  s.split(\"\").reverse().join(\"\");\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw4r6s7f9.fsx(11,5): error FS0039: The type 'String' does not define the field, constructor or member 'split'. Maybe you want one of the following:\n   Split\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n    s.split(\"\").reverse().join(\"\");\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpyb76i8zs.fsx(11,7): error FS0039: The type 'String' does not define the field, constructor or member 'split'. Maybe you want one of the following:\n   Split\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  s.toLowerCase().replace(/[^a-z]/g, \"\").split(\"\");\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp85x4bg5w.fsx(11,28): error FS0010: Unexpected symbol '[' in expression. Expected ')' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  s.toLowerCase().map(letter => letter.toUpperCase()).join('');\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpty012gdn.fsx(11,60): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  s.split(\"\").reverse().join(\"\");\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw4r6s7f9.fsx(11,5): error FS0039: The type 'String' does not define the field, constructor or member 'split'. Maybe you want one of the following:\n   Split\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  (s.charAt(i) == '#') ? s.substring(i + 1, s.length) : s.substring(i, s.length);\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp2s3iv7um.fsx(11,68): error FS0010: Unexpected symbol '(' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//You are given a string s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains no letters, reverse the string.\n// The function should return the resulted string.\n// Examples\n// solve(\"1234\") = \"4321\"\n// solve(\"ab\") = \"AB\"\n// solve(\"#a@C\") = \"#A@c\"\nlet solve (s: string): string  = \n  (s.charAt(i) == '#') ? s.substring(i, i + 1) : s.substring(i, i + 1);\nlet test() = \n  let candidate = solve\n  assert (candidate \"AsDf\" = \"aSdF\")\n  assert (candidate \"1234\" = \"4321\")\n  assert (candidate \"ab\" = \"AB\")\n  assert (candidate \"#a@C\" = \"#A@c\")\n  assert (candidate \"#AsdfW^45\" = \"#aSDFw^45\")\n  assert (candidate \"#6@2\" = \"2@6#\")\n  assert (candidate \"#$a^D\" = \"#$A^d\")\n  assert (candidate \"#ccc\" = \"#CCC\")\n  0\n\ntest()",
      "timestamp": 1675790530,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp5y0xu9m9.fsx(11,61): error FS0010: Unexpected symbol '(' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}