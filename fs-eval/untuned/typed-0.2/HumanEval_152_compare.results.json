{
  "name": "HumanEval_152_compare",
  "language": "fs",
  "prompt": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n",
  "tests": "let test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n  game.map(x => x.guess)\n  guess.map(x => x.score)\n  return compare(game)\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp3n4a0xg6.fsx(12,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet score: int list = [0,0,0,0,0,0]\nlet guess: int list = [0,0,0,0,0,0]\nlet result: int list = [0,0,0,0,0,0]\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpbwmiv4li.fsx(12,6): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'int * int * int * int * int * int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n  game.map(x => x.guess)\nlet compare (game: int list): int list = \n  game.map(x => x.score)\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpftxp7gzu.fsx(12,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpy3swzv_y.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpy3swzv_y.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpy3swzv_y.fsx(21,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpy3swzv_y.fsx(21,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpy3swzv_y.fsx(21,1): error FS0010: Incomplete structured construct at or before this point in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpqe1_q4xl.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqe1_q4xl.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqe1_q4xl.fsx(21,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqe1_q4xl.fsx(21,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqe1_q4xl.fsx(21,1): error FS0010: Incomplete structured construct at or before this point in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpqe1_q4xl.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqe1_q4xl.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqe1_q4xl.fsx(21,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqe1_q4xl.fsx(21,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqe1_q4xl.fsx(21,1): error FS0010: Incomplete structured construct at or before this point in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n    game.map(i => i + 1)\nlet score: int list = []\nlet guess: int list = []\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_vs778iz.fsx(12,10): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n  [1,2,3,4,5,1]\nlet compare (game: int list) (guess: int list): int list  = \n  [0,0,0,0,3,3]\nlet compare (game: int list) (guess: int list): int list  = \n  [4,4,1,0,0,6]\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpjjvh8x1g.fsx(12,4): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'int * int * int * int * int * int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n  [0,0,0,0,0,0]\nlet score: int list = [0,0,0,0,0,0]\nlet guess: int list = [0,0,0,0,0,0]\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpp7owt9dd.fsx(12,4): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'int * int * int * int * int * int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n  [0,0,0,0,0,0]\nlet score: int list = \n  [0,0,0,0,0,0]\nlet guess: int list = \n  [0,0,0,0,0,0]\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp5bo21pv3.fsx(12,4): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'int * int * int * int * int * int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpy3swzv_y.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpy3swzv_y.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpy3swzv_y.fsx(21,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpy3swzv_y.fsx(21,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpy3swzv_y.fsx(21,1): error FS0010: Incomplete structured construct at or before this point in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n{\n    0: 0,\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 0,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 0,\n    20: 0,\n    21: 0,\n    22: 0,\n    23: 0,\n    24: 0,\n    25: 0,\n    26: 0,\n    27: 0,\n    28: 0,\n    29: 0,\n    30: 0,\n    31: 0,\n    32: 0,\n    33: 0,\n    34: 0,\n    35: 0,\n    36: 0,\n    37: 0,\n    38: 0,\n    39: 0,\n    40: 0,\n    41: 0,\n    42: 0,\n    43: 0,\n    44: 0,\n    45: 0,\n    46: 0,\n    47: 0,\n    48: 0,\n    49: 0,\n    50: 0,\n    51: 0,\n    52: 0,\n    53: 0,\n    54: 0,\n    55: 0,\n    56: 0,\n    57: 0,\n    58: 0,\n    59: 0,\n    60: 0,\n    61: 0,\n    62: 0,\n    63: 0,\n    64: 0,\n    65: 0,\n    66: 0,\n    67: 0,\n    68: 0,\n    69: 0,\n    70: 0,\n    71: 0,\n    72: 0,\n    73: 0,\n    74: 0,\n    75: 0,\n    76: 0,\n    77: 0,\n    78: 0,\n    79: 0,\n    80: 0,\n    81: 0,\n    82: 0,\n    83: 0,\n    84: 0,\n\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpjwy0kj9o.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjwy0kj9o.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjwy0kj9o.fsx(13,6): error FS0010: Unexpected symbol ':' in expression. Expected '}' or other token.\n\n\n\n/tmp/tmpjwy0kj9o.fsx(99,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (97:5). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjwy0kj9o.fsx(99,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (97:5). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjwy0kj9o.fsx(107,1): warning FS0058: Possib",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp3paap7ue.fsx(41,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (39:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3paap7ue.fsx(41,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (39:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3paap7ue.fsx(49,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (39:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3paap7ue.fsx(49,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (39:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3paap7ue.fsx(49,1): error FS0010: Incomplete structured construct at or before this point in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n    [0,0,0,0,0,0]\nlet score: int list = [0,0,0,0,0,0]\nlet guess: int list = [0,0,0,0,0,0]\nlet result: int list = [0,0,0,0,0,0]\nlet i: int = 0\nlet j: int = 0\nlet guess_guess: int = 0\nlet guess_score: int = 0\nlet guess_guess_score: int = 0\nlet guess_guess_guess: int = 0\nlet guess_guess_guess_score: int = 0\nlet guess_guess_guess_guess: int = 0\nlet guess_guess_guess_guess_score: int = 0\nlet guess_guess_guess_guess_guess: int = 0\nlet guess_guess_guess_guess_guess_score: int = 0\nlet guess_guess_guess_guess_guess_guess: int = 0\nlet guess_guess_guess_guess_guess_guess_score: int = 0\nlet guess_guess_guess_guess_guess_guess_guess: int = 0\nlet guess_guess_guess_guess_guess_guess_guess_score: int = 0\nlet guess_guess_guess_guess_guess_guess_guess_guess: int = 0\nlet guess_guess_guess_guess_guess_guess_guess_guess_score: int = 0\nlet guess_guess_guess_guess_guess_guess_guess_guess_guess: int = 0\nlet guess_guess_guess_guess_guess_guess_guess_guess_guess_score: int = 0\nlet guess_guess_guess_guess_guess_guess_guess_guess_guess_guess: int = 0\nlet guess_guess_guess_guess_guess_guess_guess_guess_guess_guess_score: int = 0\n\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7sr9bnfz.fsx(12,6): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'int * int * int * int * int * int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n{\n  0: 0,\n  1: 0,\n  2: 0,\n  3: 0,\n  4: 0,\n  5: 0,\n  6: 0,\n  7: 0,\n  8: 0,\n  9: 0,\n  10: 0,\n  11: 0,\n  12: 0,\n  13: 0,\n  14: 0,\n  15: 0,\n  16: 0,\n  17: 0,\n  18: 0,\n  19: 0,\n  20: 0,\n  21: 0,\n  22: 0,\n  23: 0,\n  24: 0,\n  25: 0,\n  26: 0,\n  27: 0,\n  28: 0,\n  29: 0,\n  30: 0,\n  31: 0,\n  32: 0,\n  33: 0,\n  34: 0,\n  35: 0,\n  36: 0,\n  37: 0,\n  38: 0,\n  39: 0,\n  40: 0,\n  41: 0,\n  42: 0,\n  43: 0,\n  44: 0,\n  45: 0,\n  46: 0,\n  47: 0,\n  48: 0,\n  49: 0,\n  50: 0,\n  51: 0,\n  52: 0,\n  53: 0,\n  54: 0,\n  55: 0,\n  56: 0,\n  57: 0,\n  58: 0,\n  59: 0,\n  60: 0,\n  61: 0,\n  62: 0,\n  63: 0,\n  64: 0,\n  65: 0,\n  66: 0,\n  67: 0,\n  68: 0,\n  69: 0,\n  70: 0,\n  71: 0,\n  72: 0,\n  73: 0,\n  74: 0,\n  75: 0,\n  76: 0,\n  77: 0,\n  78: 0,\n  79: 0,\n  80: 0,\n  81: 0,\n  82: 0,\n  83: 0,\n  84: 0,\n\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpvvutl2q4.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvvutl2q4.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvvutl2q4.fsx(13,4): error FS0010: Unexpected symbol ':' in expression. Expected '}' or other token.\n\n\n\n/tmp/tmpvvutl2q4.fsx(99,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (97:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvvutl2q4.fsx(99,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (97:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvvutl2q4.fsx(107,1): warning FS0058: Possib",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n{\n  0: 0,\n  1: 0,\n  2: 0,\n  3: 0,\n  4: 0,\n  5: 0,\n  6: 0,\n  7: 0,\n  8: 0,\n  9: 0,\n  10: 0,\n  11: 0,\n  12: 0,\n  13: 0,\n  14: 0,\n  15: 0,\n  16: 0,\n  17: 0,\n  18: 0,\n  19: 0,\n  20: 0,\n  21: 0,\n  22: 0,\n  23: 0,\n  24: 0,\n  25: 0,\n  26: 0,\n  27: 0,\n  28: 0,\n  29: 0,\n  30: 0,\n  31: 0,\n  32: 0,\n  33: 0,\n  34: 0,\n  35: 0,\n  36: 0,\n  37: 0,\n  38: 0,\n  39: 0,\n  40: 0,\n  41: 0,\n  42: 0,\n  43: 0,\n  44: 0,\n  45: 0,\n  46: 0,\n  47: 0,\n  48: 0,\n  49: 0,\n  50: 0,\n  51: 0,\n  52: 0,\n  53: 0,\n  54: 0,\n  55: 0,\n  56: 0,\n  57: 0,\n  58: 0,\n  59: 0,\n  60: 0,\n  61: 0,\n  62: 0,\n  63: 0,\n  64: 0,\n  65: 0,\n  66: 0,\n  67: 0,\n  68: 0,\n  69: 0,\n  70: 0,\n  71: 0,\n  72: 0,\n  73: 0,\n  74: 0,\n  75: 0,\n  76: 0,\n  77: 0,\n  78: 0,\n  79: 0,\n  80: 0,\n  81: 0,\n  82: 0,\n  83: 0,\n  84: 0,\n\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpvvutl2q4.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvvutl2q4.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvvutl2q4.fsx(13,4): error FS0010: Unexpected symbol ':' in expression. Expected '}' or other token.\n\n\n\n/tmp/tmpvvutl2q4.fsx(99,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (97:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvvutl2q4.fsx(99,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (97:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvvutl2q4.fsx(107,1): warning FS0058: Possib",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n    game.map(x => x.guess)\nlet score: int list = \n    game.map(x => x.score)\nlet guess: int list = \n    game.map(x => x.guess)\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp2e8gcado.fsx(12,10): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n    [1,2,3,4,5,1]\nlet score: int list = [0,0,0,0,3,3]\nlet guess: int list = [4,1,1,0,0,-2]\nlet result: int list = [0,0,0,0,3,3]\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpj3vd0jo6.fsx(12,6): error FS0001: This expression was expected to have type\n    'int'    \nbut here has type\n    'int * int * int * int * int * int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpqe1_q4xl.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqe1_q4xl.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqe1_q4xl.fsx(21,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqe1_q4xl.fsx(21,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqe1_q4xl.fsx(21,1): error FS0010: Incomplete structured construct at or before this point in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//I think we all remember that feeling when the result of some long-awaited\n// event is finally known. The feelings and thoughts you have at that moment are\n// definitely worth noting down and comparing.\n// Your task is to determine if a person correctly guessed the results of a number of matches.\n// You are given two arrays of scores and guesses of equal length, where each index shows a match. \n// Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n// the value is 0, and if not, the value is the absolute difference between the guess and the score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n// compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nlet compare (game: int list) (guess: int list): int list  = \n{\n  0: 0,\n  1: 0,\n  2: 0,\n  3: 0,\n  4: 0,\n  5: 0,\n  6: 0\n}\nlet test() = \n  let candidate = compare\n  assert (candidate [1; 2; 3; 4; 5; 1] [1; 2; 3; 4; 2; -2] = [0; 0; 0; 0; 3; 3])\n  assert (candidate [0; 0; 0; 0; 0; 0] [0; 0; 0; 0; 0; 0] = [0; 0; 0; 0; 0; 0])\n  assert (candidate [1; 2; 3] [-1; -2; -3] = [2; 4; 6])\n  assert (candidate [1; 2; 3; 5] [-1; 2; 3; 4] = [2; 0; 0; 1])\n  0\n\ntest()",
      "timestamp": 1675790577,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp81i195tt.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp81i195tt.fsx(12,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp81i195tt.fsx(13,4): error FS0010: Unexpected symbol ':' in expression. Expected '}' or other token.\n\n\n\n/tmp/tmp81i195tt.fsx(21,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp81i195tt.fsx(21,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp81i195tt.fsx(29,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp81i195tt.fsx(29,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (11:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}