{
  "name": "HumanEval_22_filter_integers",
  "language": "fs",
  "prompt": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n",
  "tests": "let test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkpx83qb3.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp1yxf1opy.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  filter_integers(values)\nlet filter_integers_2 (values: SomeType list): int list = \n  filter_integers(values)\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpe2cfyrby.fsx(6,30): error FS0039: The type 'SomeType' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkpx83qb3.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n    values.filter(value => value > 0)\nlet filter_integers_with_default (values: SomeType list): int list = \n    values.filter(value => value > 0)\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp0_vpygur.fsx(6,30): error FS0039: The type 'SomeType' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.filter(value => value !== null);\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmppsx27pk0.fsx(6,30): error FS0039: The type 'SomeType' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.map(value => value.toString())\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value => value.length)\n  .filter(value => value.length > 0)\n  .map(value =>\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpf0orzc1n.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpf0orzc1n.fsx(50,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf0orzc1n.fsx(50,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf0orzc1n.fsx(57,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpf0orzc1n.fsx(57,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v => v.toString())\n  .filter(v => v > 0)\n  .map(v\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprr4x8r3m.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmprr4x8r3m.fsx(52,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkpx83qb3.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.filter(value => value.toString().length > 0);\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnky4g0wt.fsx(6,30): error FS0039: The type 'SomeType' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  filter_integers(values)\nlet filter_integers_empty: int list = \n  filter_integers([]);\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpq6vmlv_0.fsx(6,30): error FS0039: The type 'SomeType' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  filter(value => value !== null, values)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value !== null)\n  .map(value => value.toString())\n  .filter(value => value\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmphzvplwlk.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmphzvplwlk.fsx(50,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.map((value: SomeType) => value)\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp4to51_3z.fsx(6,30): error FS0039: The type 'SomeType' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.map(v => v.toString()).filter(v => v > 0);\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxkcktcyf.fsx(6,30): error FS0039: The type 'SomeType' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  filter(value => value !== null, values)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value !== null)\n  .filter(value => value !== undefined)\n  .filter(value => value\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmps1r994q6.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmps1r994q6.fsx(50,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.filter(v => v.toString().length > 0)\n  .map(v => v.toString().length)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  .filter(v => v > 0)\n  .map(v => v)\n  \nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp0t2cpgry.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.filter(v => v !== null);\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmplve_ccii.fsx(6,30): error FS0039: The type 'SomeType' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkpx83qb3.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.filter(v => v % 2 === 0);\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmps0paahhg.fsx(6,30): error FS0039: The type 'SomeType' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers (values: SomeType list): int list  = \n  values.map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\n  .filter(v => v.length > 0)\n  .map(v => v.toString())\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675790580,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpkpx83qb3.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}