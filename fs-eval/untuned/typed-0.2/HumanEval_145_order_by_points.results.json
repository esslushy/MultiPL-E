{
  "name": "HumanEval_145_order_by_points",
  "language": "fs",
  "prompt": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n",
  "tests": "let test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.map(n => n.digit)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpjmb6ptbw.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.map(n => n.toString())\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprc60ebmr.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort(\n    (a, b) => a - b)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp1vu710p_.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort((a, b) => a - b)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7mdsakx7.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort(function (a, b) {\n    return a - b;\n  });\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmptp3xcl60.fsx(10,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (9:22). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptp3xcl60.fsx(9,29): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmptp3xcl60.fsx(10,5): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (9:22). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort((a, b) => a - b)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7mdsakx7.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort(\n    (a, b) => a - b)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp1vu710p_.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.map(i => i * i)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpd39acg18.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort((a, b) => a - b)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7mdsakx7.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort((a, b) => a - b);\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpz224ehaq.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort((a, b) => a - b);\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpz224ehaq.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort((a, b) => a - b)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7mdsakx7.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.map(num => num * 10)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp42aeynjx.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'map'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort((a, b) => a - b)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7mdsakx7.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort((a, b) => a - b)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7mdsakx7.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort( (a, b) => a - b )\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_5gv2j5_.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort( (a, b) => a - b );\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp6p42w3dq.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort((a, b) => a - b)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7mdsakx7.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort( (a, b) => a - b );\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp6p42w3dq.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function which sorts the given list of integers\n// in ascending order according to the sum of their digits.\n// Note: if there are several items with similar sum of their digits,\n// order them based on their index in original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nlet order_by_points (nums: int list): int list  = \n  nums.sort((a, b) => a - b)\nlet test() = \n  let candidate = order_by_points\n  assert (candidate [1; 11; -1; -11; -12] = [-1; -11; 1; -12; 11])\n  assert (candidate [1234; 423; 463; 145; 2; 423; 423; 53; 6; 37; 3457; 3; 56; 0; 46] = [0; 2; 3; 6; 53; 423; 423; 423; 1234; 145; 37; 46; 56; 463; 3457])\n  assert (candidate [] = [])\n  assert (candidate [1; -11; -32; 43; 54; -98; 2; -3] = [-3; -32; -98; -11; 1; 2; 43; 54])\n  assert (candidate [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11] = [1; 10; 2; 11; 3; 4; 5; 6; 7; 8; 9])\n  assert (candidate [0; 6; 6; -76; -21; 23; 4] = [-76; -21; 0; 4; 23; 6; 6])\n  0\n\ntest()",
      "timestamp": 1675790539,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7mdsakx7.fsx(9,8): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}