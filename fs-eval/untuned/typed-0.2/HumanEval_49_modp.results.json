{
  "name": "HumanEval_49_modp",
  "language": "fs",
  "prompt": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \n",
  "tests": "let test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \n  (n & 0xffffffff) % p;\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnqh3sh9h.fsx(13,6): warning FS1203: In F# code, use 'e1 && e2' instead of 'e1 & e2'\n\n\n\n/tmp/tmpnqh3sh9h.fsx(13,4): error FS0001: This expression was expected to have type\n    'bool'    \nbut here has type\n    'int'    \n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \nfunction modp (p: int) (n: int) {\n  if (p == 0) return n\n  if (p == 1) return n\n  if (p == 2) return n\n  if (p == 3) return n\n  if (p == 4) return n\n  if (p == 5) return n\n  if (p == 6) return n\n  if (p == 7) return n\n  if (p == 8) return n\n  if (p == 9) return n\n  if (p == 10) return n\n  if (p == 11) return n\n  if (p == 12) return n\n  if (p == 13) return n\n  if (p == 14) return n\n  if (p == 15) return n\n  if (p == 16) return n\n  if (p == 17) return n\n  if (p == 18) return n\n  if (p == 19) return n\n  if (p == 20) return n\n  if (p == 21) return n\n  if (p == 22) return n\n  if (p == 23) return n\n  if (p == 24) return n\n  if (p == 25) return n\n  if (p == 26) return n\n  if (p == 27) return n\n  if (p == 28) return n\n  if (p == 29) return n\n  if (p == 30) return n\n  if (p == 31) return n\n  if (p == 32) return n\n  if (p == 33) return n\n  if (p == 34) return n\n  if (p == 35) return n\n  if (p == 36) return n\n  if (p == 37) return n\n  if (p == 38) return n\n  if (p == 39) return n\n  if (p == 40) return n\n  if (p == 41) return n\n  if (p == 42) return n\n  if (p == 43) return n\n  if (p == 44) return n\n  if (p == 45) return n\n  if (p == 46) return n\n  if (p == 47) return n\n  if (p == 48) return n\n  if (p == 49)\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpeya1lmq0.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeya1lmq0.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeya1lmq0.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeya1lmq0.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeya1lmq0.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeya1lmq0.fsx(14,3): error FS0010: Unexpected keyword 'if' in pattern. Expected identifier, 'global' or other token.\n\n\n\n/tmp/tmpeya1lmq0.fsx(15,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeya1lmq0.fsx(15,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeya1lmq0.fsx(15,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpeya1lmq0.fsx(16,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard form",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \nfunction (p: int) {\n  if (p < 0) {\n    throw new Error(\"p must be >= 0\");\n  }\n  if (p === 0) {\n    return 1;\n  }\n  if (p === 1) {\n    return 2;\n  }\n  if (p === 2) {\n    return 3;\n  }\n  if (p === 3) {\n    return 4;\n  }\n  if (p === 4) {\n    return 5;\n  }\n  if (p === 5) {\n    return 6;\n  }\n  if (p === 6) {\n    return 7;\n  }\n  if (p === 7) {\n    return 8;\n  }\n  if (p === 8) {\n    return 9;\n  }\n  if (p === 9) {\n    return 10;\n  }\n  if (p === 10) {\n    return 11;\n  }\n  if (p === 11) {\n    return 12;\n  }\n  if (p === 12) {\n    return 13;\n  }\n  if (p === 13) {\n    return 14;\n  }\n  if (p === 14) {\n    return 15;\n  }\n  if (p === 15) {\n    return 16;\n  }\n  if (p === 16) {\n    return 17;\n  }\n  if (p === 17) {\n    return 18;\n  }\n  if (p === 18) {\n    return 19;\n  }\n  if (p === 19) {\n    return 20;\n  }\n  if (p === 20) {\n    return 21;\n  }\n  if (p === 21) {\n    return 22;\n  }\n  if (p === 22) {\n    return 23;\n  }\n  if (p === 23) {\n    return 24;\n  }\n  if (p === 24) {\n    return 25;\n  }\n  if (p === 25) {\n    return 26;\n  }\n  if (p === 26) {\n    return 27;\n  }\n  if (p === 27) {\n    return 28;\n  }\n  if (p\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp57l380vn.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp57l380vn.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp57l380vn.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp57l380vn.fsx(13,19): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmp57l380vn.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp57l380vn.fsx(14,3): warning FS0058",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \nfunction modp (p: int) (n: int): int {\n  let q = p;\n  while (q > 0) {\n    if (q % 2 == 0) {\n      q = q / 2;\n    } else {\n      q = q / 2 + 1;\n    }\n  }\n  return q;\n}\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_8fng5wy.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_8fng5wy.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_8fng5wy.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_8fng5wy.fsx(13,38): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmp_8fng5wy.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_8fng5wy.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_8fng5wy.fsx(15,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_8fng5wy.fsx(15,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_8fng5wy.fsx(15,3): warning FS00",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \n(n % p) * p;\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpty05ym09.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpty05ym09.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpty05ym09.fsx(14,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpty05ym09.fsx(14,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpty05ym09.fsx(25,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpty05ym09.fsx(25,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpty05ym09.fsx(13,1): warning FS0020: The result of this expression has type 'int' and is implicitly ignored. Consider using 'ignore' to discard this value explicitly, e.g. 'expr |> ignore', or 'let' to bind the result to a name, e.g. 'let result = expr'.\n\n\n\n/tmp/tmpty05ym09.fsx(15,19): error FS0039: The value or constructor 'modp' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \n  (n % p) % p;\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795216,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \n(n % 2) * (n % 3) * (n % 5) * (n % 7) * (n % 11) * (n % 13) * (n % 17) * (n % 19) * (n % 23) * (n % 29) * (n % 31) * (n % 37) * (n % 41) * (n % 43) * (n % 47) * (n % 49) * (n % 53) * (n % 59) * (n % 61) * (n % 67) * (n % 71) * (n % 73) * (n % 79) * (n % 81) * (n % 83) * (n % 89) * (n % 91) * (n % 93) * (n % 99) * (n % 101) * (n % 103) * (n % 107) * (n % 109) * (n % 113) * (n % 127) * (n % 131) * (n % 137) * (n % 139) * (n % 143) * (n % 147) * (n % 149) * (n % 151) * (n % 157) * (n % 159) * (n % 163) * (n % 167) * (n % 169) * (n % 171) * (n % 173) * (n % 177) * (n % 179) * (n % 181) * (n % 183) * (n % 187) * (n % 189) * (n % 191) * (n % 193) * (n % 197) * (n % 199) * (n % 201) * (n % 203) * (n % 207) * (n % 209) * (n % 211) * (n % 213) * (n % 217) * (n % 219) * (n % 221) * (n % 223) * (n % 227) * (n % 229) * (n % 231) * (n % 233) * (n % 237) * (n % 239) * (n % 241) * (n % 243) * (n % 247) * (n % 249) * (n % 251) * (n % 253) * (n % 257) * (n % 259) * (n % 261) * (n % 263) * (n\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpyhmdt2no.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpyhmdt2no.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpyhmdt2no.fsx(14,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpyhmdt2no.fsx(14,1): error FS0010: Unexpected keyword 'let' or 'use' in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \nfunction modp (n: int) (p: int): int {\n  if (n < 0) {\n    return 0;\n  }\n  if (n == 0) {\n    return p;\n  }\n  if (n == 1) {\n    return p;\n  }\n  if (n == 2) {\n    return p;\n  }\n  if (n % 2 == 0) {\n    return p;\n  }\n  return p % n;\n}\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxxl7zj59.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxxl7zj59.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxxl7zj59.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxxl7zj59.fsx(13,38): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpxxl7zj59.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpxxl7zj59.fsx(14,3): warning FS0058",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \nfunction modp (n: int) (p: int): int {\n  return (n % p) % p\n}\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpiwj1pt1m.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpiwj1pt1m.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpiwj1pt1m.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpiwj1pt1m.fsx(13,38): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpiwj1pt1m.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpiwj1pt1m.fsx(16,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpiwj1pt1m.fsx(16,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpiwj1pt1m.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpiwj1pt1m.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \nfunction modp (n: int) (p: int): int {\n  if (n < 0) {\n    return 0\n  }\n  if (n == 0) {\n    return 1\n  }\n  if (n == 1) {\n    return 2\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n % 2 == 0) {\n    return 4\n  }\n  if (n % 3 == 0) {\n    return 5\n  }\n  if (n % 5 == 0) {\n    return 6\n  }\n  if (n % 7 == 0) {\n    return 7\n  }\n  if (n % 11 == 0) {\n    return 8\n  }\n  if (n % 13 == 0) {\n    return 9\n  }\n  if (n % 17 == 0) {\n    return 10\n  }\n  if (n % 19 == 0) {\n    return 11\n  }\n  if (n % 23 == 0) {\n    return 12\n  }\n  if (n % 29 == 0) {\n    return 13\n  }\n  if (n % 31 == 0) {\n    return 14\n  }\n  if (n % 37 == 0) {\n    return 15\n  }\n  if (n % 41 == 0) {\n    return 16\n  }\n  if (n % 43 == 0) {\n    return 17\n  }\n  if (n % 47 == 0) {\n    return 18\n  }\n  if (n % 53 == 0) {\n    return 19\n  }\n  if (n % 59 == 0) {\n    return 20\n  }\n  if (n % 61 == 0) {\n    return 21\n  }\n  if (n % 67 == 0) {\n    return 22\n  }\n  if (n % 71 == 0) {\n    return 23\n  }\n  if (n % 73 == 0) {\n    return 24\n  }\n  if (n % 79 == 0) {\n    return 25\n  }\n  if (n % 81 == 0) {\n    return 26\n  }\n  if (n % 83 == 0) {\n    return 27\n  }\n\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7vdjw6yu.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7vdjw6yu.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7vdjw6yu.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7vdjw6yu.fsx(13,38): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmp7vdjw6yu.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7vdjw6yu.fsx(14,3): warning FS0058",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \n(n: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(p: int) =>\n(\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpadknz_2n.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpadknz_2n.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpadknz_2n.fsx(87,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpadknz_2n.fsx(87,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpadknz_2n.fsx(87,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token f",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \nfunction modp (p: int) (n: int): int {\n  let q = p % n;\n  return q === 0 ? p : q;\n}\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpabl8bej8.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpabl8bej8.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpabl8bej8.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpabl8bej8.fsx(13,38): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpabl8bej8.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpabl8bej8.fsx(14,3): warning FS0058",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \nfunction modp (p: int) {\n  if (p == 0) {\n    return 1\n  }\n  if (p == 1) {\n    return 2\n  }\n  if (p == 2) {\n    return 3\n  }\n  if (p == 3) {\n    return 4\n  }\n  if (p == 4) {\n    return 5\n  }\n  if (p == 5) {\n    return 6\n  }\n  if (p == 6) {\n    return 7\n  }\n  if (p == 7) {\n    return 8\n  }\n  if (p == 8) {\n    return 9\n  }\n  if (p == 9) {\n    return 10\n  }\n  if (p == 10) {\n    return 11\n  }\n  if (p == 11) {\n    return 12\n  }\n  if (p == 12) {\n    return 13\n  }\n  if (p == 13) {\n    return 14\n  }\n  if (p == 14) {\n    return 15\n  }\n  if (p == 15) {\n    return 16\n  }\n  if (p == 16) {\n    return 17\n  }\n  if (p == 17) {\n    return 18\n  }\n  if (p == 18) {\n    return 19\n  }\n  if (p == 19) {\n    return 20\n  }\n  if (p == 20) {\n    return 21\n  }\n  if (p == 21) {\n    return 22\n  }\n  if (p == 22) {\n    return 23\n  }\n  if (p == 23) {\n    return 24\n  }\n  if (p == 24) {\n    return 25\n  }\n  if (p == 25) {\n    return 26\n  }\n  if (p == 26) {\n    return 27\n  }\n  if (p == 27) {\n    return 28\n  }\n  if (p == 28) {\n    return 29\n  }\n  if (p == 29) {\n    return 30\n  }\n  if (p == 30) {\n    return 31\n  }\n  if (p == 31\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpqwjzz7jf.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqwjzz7jf.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqwjzz7jf.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqwjzz7jf.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqwjzz7jf.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqwjzz7jf.fsx(14,3): error FS0010: Unexpected keyword 'if' in pattern. Expected identifier, 'global' or other token.\n\n\n\n/tmp/tmpqwjzz7jf.fsx(17,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqwjzz7jf.fsx(17,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqwjzz7jf.fsx(17,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqwjzz7jf.fsx(20,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard form",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \nfunction (p: int) {\n  return p % n;\n}\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpjdfag1gk.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjdfag1gk.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjdfag1gk.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjdfag1gk.fsx(13,19): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpjdfag1gk.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjdfag1gk.fsx(16,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjdfag1gk.fsx(16,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjdfag1gk.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjdfag1gk.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \n    function (p: int) {\n        if (p == 0) {\n            return 1\n        }\n        if (p == 1) {\n            return 2\n        }\n        if (p == 2) {\n            return 3\n        }\n        if (p == 3) {\n            return 4\n        }\n        if (p == 4) {\n            return 5\n        }\n        if (p == 5) {\n            return 6\n        }\n        if (p == 6) {\n            return 7\n        }\n        if (p == 7) {\n            return 8\n        }\n        if (p == 8) {\n            return 9\n        }\n        if (p == 9) {\n            return 10\n        }\n        if (p == 10) {\n            return 11\n        }\n        if (p == 11) {\n            return 12\n        }\n        if (p == 12) {\n            return 13\n        }\n        if (p == 13) {\n            return 14\n        }\n        if (p == 14) {\n            return 15\n        }\n        if (p == 15) {\n            return 16\n        }\n        if (p == 16) {\n            return 17\n        }\n        if (p == 17) {\n            return 18\n        }\n        if (p == 18) {\n            return 19\n        }\n        if (p == 19) {\n            return 20\n        }\n        if (p == 20) {\n            return 21\n        }\n        if (p == 21) {\n            return 22\n        }\n        if (p == 22) {\n            return 23\n        }\n        if (p == 23) {\n            return 24\n        }\n        if (p == 24) {\n            return 25\n        }\n        if (p == 25) {\n            return 26\n        }\n        if (p == 26) {\n            return 27\n        }\n        if (p == 27) {\n            return 28\n        }\n        if (p == 28) {\n            return 29\n        }\n        if (p == 29) {\n            return 30\n        }\n        if (p == 30) {\n            return 31\n        }\n        if (p == 31)\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpjos6lhdq.fsx(14,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjos6lhdq.fsx(13,23): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpjos6lhdq.fsx(14,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjos6lhdq.fsx(14,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjos6lhdq.fsx(17,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjos6lhdq.fsx(17,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpjos6lhdq.fsx(17,9): warning FS00",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \nfunction modp (p: int) (n: int) {\n  if (n == 0) return 1\n  if (n == 1) return 0\n  if (n == 2) return 0\n  if (n == 3) return 0\n  if (n == 4) return 0\n  if (n == 5) return 0\n  if (n == 6) return 0\n  if (n == 7) return 0\n  if (n == 8) return 0\n  if (n == 9) return 0\n  if (n == 10) return 0\n  if (n == 11) return 0\n  if (n == 12) return 0\n  if (n == 13) return 0\n  if (n == 14) return 0\n  if (n == 15) return 0\n  if (n == 16) return 0\n  if (n == 17) return 0\n  if (n == 18) return 0\n  if (n == 19) return 0\n  if (n == 20) return 0\n  if (n == 21) return 0\n  if (n == 22) return 0\n  if (n == 23) return 0\n  if (n == 24) return 0\n  if (n == 25) return 0\n  if (n == 26) return 0\n  if (n == 27) return 0\n  if (n == 28) return 0\n  if (n == 29) return 0\n  if (n == 30) return 0\n  if (n == 31) return 0\n  if (n == 32) return 0\n  if (n == 33) return 0\n  if (n == 34) return 0\n  if (n == 35) return 0\n  if (n == 36) return 0\n  if (n == 37) return 0\n  if (n == 38) return 0\n  if (n == 39) return 0\n  if (n == 40) return 0\n  if (n == 41) return 0\n  if (n == 42) return 0\n  if (n == 43) return 0\n  if (n == 44) return 0\n  if (n == 45) return 0\n  if (n == 46) return 0\n  if (n == 47) return 0\n  if (n == 48) return 0\n  if (n == 49)\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpocopv017.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpocopv017.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpocopv017.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpocopv017.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpocopv017.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this toke",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \n(n % p) % p;\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprfm6rezs.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprfm6rezs.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprfm6rezs.fsx(14,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprfm6rezs.fsx(14,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprfm6rezs.fsx(25,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprfm6rezs.fsx(25,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprfm6rezs.fsx(13,1): warning FS0020: The result of this expression has type 'int' and is implicitly ignored. Consider using 'ignore' to discard this value explicitly, e.g. 'expr |> ignore', or 'let' to bind the result to a name, e.g. 'let result = expr'.\n\n\n\n/tmp/tmprfm6rezs.fsx(15,19): error FS0039: The value or constructor 'modp' is not defined.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \n    function (p: int) {\n        if (p == 0) {\n            return 1;\n        }\n        if (p == 1) {\n            return 2;\n        }\n        if (p == 2) {\n            return 3;\n        }\n        if (p == 3) {\n            return 4;\n        }\n        if (p == 4) {\n            return 5;\n        }\n        if (p == 5) {\n            return 6;\n        }\n        if (p == 6) {\n            return 7;\n        }\n        if (p == 7) {\n            return 8;\n        }\n        if (p == 8) {\n            return 9;\n        }\n        if (p == 9) {\n            return 10;\n        }\n        if (p == 10) {\n            return 11;\n        }\n        if (p == 11) {\n            return 12;\n        }\n        if (p == 12) {\n            return 13;\n        }\n        if (p == 13) {\n            return 14;\n        }\n        if (p == 14) {\n            return 15;\n        }\n        if (p == 15) {\n            return 16;\n        }\n        if (p == 16) {\n            return 17;\n        }\n        if (p == 17) {\n            return 18;\n        }\n        if (p == 18) {\n            return 19;\n        }\n        if (p == 19) {\n            return 20;\n        }\n        if (p == 20) {\n            return 21;\n        }\n        if (p == 21) {\n            return 22;\n        }\n        if (p == 22) {\n            return 23;\n        }\n        if (p == 23) {\n            return 24;\n        }\n        if (p == 24) {\n            return 25;\n        }\n        if (p == 25) {\n            return 26;\n        }\n        if (p == 26) {\n            return 27;\n        }\n        if (p == 27) {\n            return 28;\n        }\n        if (p == 28) {\n            return 29;\n        }\n        if (p == 29) {\n            \nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpqu8bnda5.fsx(14,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqu8bnda5.fsx(13,23): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpqu8bnda5.fsx(14,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqu8bnda5.fsx(14,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqu8bnda5.fsx(17,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqu8bnda5.fsx(17,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqu8bnda5.fsx(17,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqu8bnda5.fsx(20,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqu8bnda5.fsx(20,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpqu8bnda5.fsx(20,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:14). Try indenting this token further or using standard formatting",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \nfunction (p: int) {\n  if (p == 0) return 1\n  if (p == 1) return 2\n  if (p == 2) return 3\n  if (p == 3) return 4\n  if (p == 4) return 5\n  if (p == 5) return 6\n  if (p == 6) return 7\n  if (p == 7) return 8\n  if (p == 8) return 9\n  if (p == 9) return 10\n  if (p == 10) return 11\n  if (p == 11) return 12\n  if (p == 12) return 13\n  if (p == 13) return 14\n  if (p == 14) return 15\n  if (p == 15) return 16\n  if (p == 16) return 17\n  if (p == 17) return 18\n  if (p == 18) return 19\n  if (p == 19) return 20\n  if (p == 20) return 21\n  if (p == 21) return 22\n  if (p == 22) return 23\n  if (p == 23) return 24\n  if (p == 24) return 25\n  if (p == 25) return 26\n  if (p == 26) return 27\n  if (p == 27) return 28\n  if (p == 28) return 29\n  if (p == 29) return 30\n  if (p == 30) return 31\n  if (p == 31) return 32\n  if (p == 32) return 33\n  if (p == 33) return 34\n  if (p == 34) return 35\n  if (p == 35) return 36\n  if (p == 36) return 37\n  if (p == 37) return 38\n  if (p == 38) return 39\n  if (p == 39) return 40\n  if (p == 40) return 41\n  if (p == 41) return 42\n  if (p == 42) return 43\n  if (p == 43) return 44\n  if (p == 44) return 45\n  if (p == 45) return 46\n  if (p == 46) return 47\n  if (p == 47) return 48\n  if (p == 48) return 49\n  if (p == 49) return 50\n  if (p\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmptpo0_bvf.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptpo0_bvf.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptpo0_bvf.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptpo0_bvf.fsx(13,19): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmptpo0_bvf.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptpo0_bvf.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptpo0_bvf.fsx(15,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptpo0_bvf.fsx(15,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptpo0_bvf.fsx(15,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptpo0_bvf.fsx(16,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting c",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n// 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n// 8\n// >>> modp(100, 101)\n// 1\nlet modp (n: int) (p: int): int  = \nfunction modp (n: int) (p: int): int {\n  if (n < 0) {\n    return 0\n  }\n  if (n == 0) {\n    return 1\n  }\n  if (n == 1) {\n    return 2\n  }\n  if (n == 2) {\n    return 3\n  }\n  if (n % 2 == 0) {\n    return 4\n  }\n  return 5\n}\nlet test() = \n  let candidate = modp\n  assert (candidate 3 5 = 3)\n  assert (candidate 1101 101 = 2)\n  assert (candidate 0 101 = 1)\n  assert (candidate 3 11 = 8)\n  assert (candidate 100 101 = 1)\n  assert (candidate 30 5 = 4)\n  assert (candidate 31 5 = 3)\n  0\n\ntest()",
      "timestamp": 1675795215,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpfhpx0_2k.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpfhpx0_2k.fsx(13,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (12:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpfhpx0_2k.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpfhpx0_2k.fsx(13,38): error FS0010: Unexpected symbol '{' in pattern matching. Expected '->' or other token.\n\n\n\n/tmp/tmpfhpx0_2k.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpfhpx0_2k.fsx(14,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpfhpx0_2k.fsx(17,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpfhpx0_2k.fsx(17,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpfhpx0_2k.fsx(17,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpfhpx0_2k.fsx(20,3): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (13:10). Try indenting this token further or using standard formatting c",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}