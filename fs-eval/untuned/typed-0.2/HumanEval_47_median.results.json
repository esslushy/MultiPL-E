{
  "name": "HumanEval_47_median",
  "language": "fs",
  "prompt": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n",
  "tests": "let test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  .map(i => i.length)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n  .map(i => i)\n  .reduce((a, b) => a + b)\n\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795207,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7vr8_wu6.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n// >>> l.sort()\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795208,
      "stdout": "",
      "stderr": "\n\n/tmp/tmphtpsh132.fsx(8,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmphtpsh132.fsx(8,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmphtpsh132.fsx(17,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmphtpsh132.fsx(17,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmphtpsh132.fsx(9,19): error FS0039: The value or constructor 'median' is not defined. Maybe you want one of the following:\n   min\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n// >>> l = [3, 1, 2, 4, 5]\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795208,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp04ynr84d.fsx(8,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp04ynr84d.fsx(8,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp04ynr84d.fsx(17,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp04ynr84d.fsx(17,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp04ynr84d.fsx(9,19): error FS0039: The value or constructor 'median' is not defined. Maybe you want one of the following:\n   min\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  // Sort the list in ascending order.\n  l.sort()\n  // Return the median of the list.\n  return l.reduce((x, y) => x + y) / 2\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795208,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8dpx56xd.fsx(7,5): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  \nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795207,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnk_sebbq.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  (l.length - 1) / 2;\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795208,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp0fk2_wu2.fsx(7,6): error FS0039: The type 'List<_>' does not define the field, constructor or member 'length'. Maybe you want one of the following:\n   Length\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  // Sort list by value.\n  l.sort()\n  // Return median of elements in the list l.\n  // >>> median([3, 1, 2, 4, 5])\n  // 3\n  // >>> median([-10, 4, 6, 1000, 10, 20])\n  // 15.0\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795208,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprl2br31u.fsx(7,5): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  // Sort the list in ascending order.\n  l.sort()\n  // Return the median of the list.\n  return l.reduce((a, b) => a + b) / 2\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795208,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpekxma0fk.fsx(7,5): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  (l.length > 0) ? l[l.length / 2] : 0;\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795207,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp3xvf3idd.fsx(7,39): error FS0010: Unexpected symbol ';' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  \nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795207,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnk_sebbq.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  // Sort the list in ascending order.\n  l.sort()\n  // Return the median of the list.\n  return l.reduce((x, y) => x + y) / 2\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795208,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8dpx56xd.fsx(7,5): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  \nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795208,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp26djmiq7.fsx(7,5): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\n  .sort()\n  .map((x: int) => x)\n  .reduce((x, y) => x + y)\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795207,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpejeucd3g.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  // Sort the list in ascending order.\n  l.sort()\n  // Return the median of the list.\n  return l.reduce((x, y) => x + y) / 2\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795208,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8dpx56xd.fsx(7,5): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\n  .reduce((a, b) => a + b)\n  .map((x: any) => x.sort())\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795207,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpyr2_smw3.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort().reverse().map((x: int) => x).reduce((a, b) => a + b);\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795208,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpilyip4cf.fsx(7,5): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  \nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795207,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnk_sebbq.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n// >>> l = [3, 1, 2, 4, 5]\nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795208,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp04ynr84d.fsx(8,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp04ynr84d.fsx(8,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp04ynr84d.fsx(17,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp04ynr84d.fsx(17,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp04ynr84d.fsx(9,19): error FS0039: The value or constructor 'median' is not defined. Maybe you want one of the following:\n   min\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  \nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795208,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp26djmiq7.fsx(7,5): error FS0039: The type 'List<_>' does not define the field, constructor or member 'sort'.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return median of elements in the list l.\n// >>> median([3, 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nlet median (l: int list): float  = \n  l.sort()\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  .reduce((a, b) => a + b)\n  .map(x => x.length)\n  \nlet test() = \n  let candidate = median\n  assert (candidate [3; 1; 2; 4; 5] = 3)\n  assert (candidate [-10; 4; 6; 1000; 10; 20] = 8.0)\n  assert (candidate [5] = 5)\n  assert (candidate [6; 5] = 5.5)\n  assert (candidate [8; 1; 3; 9; 9; 2; 7] = 7)\n  0\n\ntest()",
      "timestamp": 1675795207,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnk_sebbq.fsx(8,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}