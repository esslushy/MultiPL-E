{
  "name": "HumanEval_68_pluck",
  "language": "fs",
  "prompt": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n",
  "tests": "let test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,2,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255]\n\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp1jj3g1ak.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1jj3g1ak.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1jj3g1ak.fsx(29,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1jj3g1ak.fsx(29,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1jj3g1ak.fsx(41,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1jj3g1ak.fsx(41,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1jj3g1ak.fsx(27,1): warning FS0020: The result of this expression has type '(int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int *",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw_ytagkn.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpw_ytagkn.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpw_ytagkn.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpw_ytagkn.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpwwuu3cdg.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwwuu3cdg.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwwuu3cdg.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwwuu3cdg.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0],\n\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpz5kgi2wd.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpz5kgi2wd.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpz5kgi2wd.fsx(63,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpz5kgi2wd.fsx(63,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpz5kgi2wd.fsx(75,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpz5kgi2wd.fsx(75,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (61:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpz5kgi2wd.fsx(75,1): error FS0010: Incomplete structured construct at or before this point in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,2,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[\n  [1, 0],\n  [2, 0],\n  [3, 0],\n  [4, 0],\n  [5, 0],\n  [0, 1],\n  [0, 2],\n  [0, 3],\n  [0, 4],\n  [0, 5],\n  [1, 1],\n  [2, 1],\n  [3, 1],\n  [4, 1],\n  [5, 1],\n  [0, 2],\n  [0, 3],\n  [0, 4],\n  [0, 5],\n  [1, 2],\n  [2, 2],\n  [3, 2],\n  [4, 2],\n  [5, 2],\n  [0, 3],\n  [0, 4],\n  [0, 5],\n  [1, 3],\n  [2, 3],\n  [3, 3],\n  [4, 3],\n  [5, 3],\n  [0, 4],\n  [0, 5],\n  [1, 4],\n  [2, 4],\n  [3, 4],\n  [4, 4],\n  [5, 4],\n  [0, 5],\n  [0, 6],\n  [1, 5],\n  [2, 5],\n  [3, 5],\n  [4, 5],\n  [5, 5],\n  [0, 6],\n  [0, 7],\n  [1, 6],\n  [2, 6],\n  [3, 6],\n  [4, 6],\n  [5, 6],\n  [0, 7],\n  [0, 8],\n  [1, 7],\n  [2, 7],\n  [3, 7],\n  [4, 7],\n  [5, 7],\n  [0, 8],\n  [0, 9],\n  [1, 8],\n  [2, 8],\n  [3, 8],\n  [4, 8],\n  [5, 8],\n  [0, 9],\n  [0, 10],\n  [1, 9],\n  [2, 9],\n  [3, 9],\n  [4, 9],\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp3z4y08_c.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3z4y08_c.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3z4y08_c.fsx(101,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (100:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3z4y08_c.fsx(101,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (100:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3z4y08_c.fsx(113,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (100:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3z4y08_c.fsx(113,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (100:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp3z4y08_c.fsx(113,1): error FS0010: Incomplete structured construct at or before this point in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254]\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpu6zutzqm.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpu6zutzqm.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpu6zutzqm.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpu6zutzqm.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpu6zutzqm.fsx(40,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpu6zutzqm.fsx(40,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpu6zutzqm.fsx(27,1): warning FS0020: The result of this expression has type '(int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int *",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[\n  [4,2,3],\n  [1,2,3],\n  [2,1,3],\n  [2,2,3],\n  [2,3,3],\n  [2,4,3],\n  [2,5,3],\n  [2,6,3],\n  [2,7,3],\n  [2,8,3],\n  [2,9,3],\n  [2,10,3],\n  [2,11,3],\n  [2,12,3],\n  [2,13,3],\n  [2,14,3],\n  [2,15,3],\n  [2,16,3],\n  [2,17,3],\n  [2,18,3],\n  [2,19,3],\n  [2,20,3],\n  [2,21,3],\n  [2,22,3],\n  [2,23,3],\n  [2,24,3],\n  [2,25,3],\n  [2,26,3],\n  [2,27,3],\n  [2,28,3],\n  [2,29,3],\n  [2,30,3],\n  [2,31,3],\n  [2,32,3],\n  [2,33,3],\n  [2,34,3],\n  [2,35,3],\n  [2,36,3],\n  [2,37,3],\n  [2,38,3],\n  [2,39,3],\n  [2,40,3],\n  [2,41,3],\n  [2,42,3],\n  [2,43,3],\n  [2,44,3],\n  [2,45,3],\n  [2,46,3],\n  [2,47,3],\n  [2,48,3],\n  [2,49,3],\n  [2,50,3],\n  [2,51,3],\n  [2,52,3],\n  [2,53,3],\n  [2,54,3],\n  [2,55,\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpsdxq7map.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpsdxq7map.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpsdxq7map.fsx(85,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpsdxq7map.fsx(85,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpsdxq7map.fsx(97,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[\n  [4,2,3],\n  [1,2,3],\n  [2,1,3],\n  [2,2,3],\n  [2,3,3],\n  [2,4,3],\n  [2,5,3],\n  [2,6,3],\n  [2,7,3],\n  [2,8,3],\n  [2,9,3],\n  [2,10,3],\n  [2,11,3],\n  [2,12,3],\n  [2,13,3],\n  [2,14,3],\n  [2,15,3],\n  [2,16,3],\n  [2,17,3],\n  [2,18,3],\n  [2,19,3],\n  [2,20,3],\n  [2,21,3],\n  [2,22,3],\n  [2,23,3],\n  [2,24,3],\n  [2,25,3],\n  [2,26,3],\n  [2,27,3],\n  [2,28,3],\n  [2,29,3],\n  [2,30,3],\n  [2,31,3],\n  [2,32,3],\n  [2,33,3],\n  [2,34,3],\n  [2,35,3],\n  [2,36,3],\n  [2,37,3],\n  [2,38,3],\n  [2,39,3],\n  [2,40,3],\n  [2,41,3],\n  [2,42,3],\n  [2,43,3],\n  [2,44,3],\n  [2,45,3],\n  [2,46,3],\n  [2,47,3],\n  [2,48,3],\n  [2,49,3],\n  [2,50,3],\n  [2,51,3],\n  [2,52,3],\n  [2,53,3],\n  [2,54,3],\n  [2,55,\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpsdxq7map.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpsdxq7map.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpsdxq7map.fsx(85,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpsdxq7map.fsx(85,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpsdxq7map.fsx(97,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0,4,2,3,4,5,0,2,0\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpwwuu3cdg.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwwuu3cdg.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwwuu3cdg.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwwuu3cdg.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255]\n\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp1jj3g1ak.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1jj3g1ak.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1jj3g1ak.fsx(29,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1jj3g1ak.fsx(29,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1jj3g1ak.fsx(41,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1jj3g1ak.fsx(41,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1jj3g1ak.fsx(27,1): warning FS0020: The result of this expression has type '(int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int *",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,2,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpr9xhot2k.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpr9xhot2k.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpr9xhot2k.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpr9xhot2k.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,2,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,2,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,2,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,2,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0,4,2,3,0\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmptlylromf.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4,5,0,2,1,2,3,4\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp02eytz6q.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp02eytz6q.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp02eytz6q.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp02eytz6q.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//\"Given an array representing a branch of a tree that has non-negative integer nodes\n// your task is to pluck one of the nodes and return it.\n// The plucked node should be the node with the smallest even value.\n// If multiple nodes with the same smallest even value are found return the node that has smallest index.\n// The plucked node should be returned in a list, [ smalest_value, its index ],\n// If there are no even values or the given array is empty, return [].\n// Example 1:\n// Input: [4,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index.\n// Example 2:\n// Input: [1,2,3]\n// Output: [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest index. \n// Example 3:\n// Input: []\n// Output: []\n// Example 4:\n// Input: [5, 0, 3, 0, 4, 2]\n// Output: [0, 1]\n// Explanation: 0 is the smallest value, but  there are two zeros,\n// so we will choose the first zero, which has the smallest index.\n// Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nlet pluck arr = \n[1,2,3,4,5,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0,2,0,4,2,0\nlet test() = \n  let candidate = pluck\n  assert (candidate [4; 2; 3] = [2; 1])\n  assert (candidate [1; 2; 3] = [2; 1])\n  assert (candidate [] = [])\n  assert (candidate [5; 0; 3; 0; 4; 2] = [0; 1])\n  assert (candidate [1; 2; 3; 0; 5; 3] = [0; 3])\n  assert (candidate [5; 4; 8; 4; 8] = [4; 1])\n  assert (candidate [7; 6; 7; 1] = [6; 1])\n  assert (candidate [7; 9; 7; 1] = [])\n  0\n\ntest()",
      "timestamp": 1675797443,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw_ytagkn.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpw_ytagkn.fsx(27,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpw_ytagkn.fsx(28,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (26:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpw_ytagkn.fsx(28,1): error FS0010: Unexpected keyword 'let' or 'use' in expression. Expected ']' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}