{
  "name": "HumanEval_43_pairs_sum_to_zero",
  "language": "fs",
  "prompt": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n",
  "tests": "let test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpwd7tp36f.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpwd7tp36f.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwd7tp36f.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwd7tp36f.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwd7tp36f.fsx(73,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .filter(i => i > 0)\n\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmphl6sx3nw.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprqnibdux.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmprqnibdux.fsx(66,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprqnibdux.fsx(66,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprqnibdux.fsx(66,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprqnibdux.fsx(79,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) => sum + i)\n  .map(i => i)\n  .reduce((sum, i) =>\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp9yf9vf93.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmp9yf9vf93.fsx(58,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9yf9vf93.fsx(58,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9yf9vf93.fsx(71,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp9yf9vf93.fsx(71,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw4n6o64i.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpw4n6o64i.fsx(55,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(x => x * x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x) => sum + x, 0)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((sum, x)\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp27a8o_2p.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmp27a8o_2p.fsx(57,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprqnibdux.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmprqnibdux.fsx(66,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprqnibdux.fsx(66,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprqnibdux.fsx(66,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprqnibdux.fsx(79,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpwd7tp36f.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpwd7tp36f.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwd7tp36f.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwd7tp36f.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwd7tp36f.fsx(73,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, x) => sum + x)\n  .map(i => i)\n  .sum()\nlet pairs_sum_to_zero_sum = \n  pairs_sum_to_zero(l)\nlet pairs_sum_to_zero_sum_sum = \n  pairs_sum_to_zero_sum.map(i => i * i)\nlet pairs_sum_to_zero_sum_sum_sum = \n  pairs_sum_to_zero_sum_sum.map(i => i)\nlet pairs_sum_to_zero_sum_sum_sum_sum = \n  pairs_sum_to_zero_sum_sum_sum.map(i => i)\nlet pairs_sum_to_zero_sum_sum_sum_sum_sum = \n  pairs_sum_to_zero_sum_sum_sum_sum.map(i => i)\nlet pairs_sum_to_zero_sum_sum_sum_sum_sum_sum = \n  pairs_sum_to_zero_sum_sum_sum_sum_sum.map(i => i)\nlet pairs_sum_to_zero_sum_sum_sum_sum_sum_sum_sum = \n  pairs_sum_to_zero_sum_sum_sum_sum_sum.map(i => i)\nlet pairs_sum_to_zero_sum_sum_sum_sum_sum_sum_sum = \n  pairs_sum_to_zero_sum_sum_sum_sum_sum_sum.map(i => i)\nlet pairs_sum_to_zero_sum_sum_sum_sum_sum_sum_sum_sum = \n  pairs_sum_to_zero_sum_sum_sum_sum_sum_sum.map(i => i)\nlet pairs_sum_to_zero_sum_sum_sum_sum_sum_sum_sum_sum = \n  pairs_sum_to_zero_sum_sum_sum_sum_sum_sum_sum.map(i => i)\nlet pairs_\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpuoemqhtj.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw4n6o64i.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpw4n6o64i.fsx(55,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpofyitc_n.fsx(18,36): error FS0001: This expression was expected to have type\n    '(int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * in",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpofyitc_n.fsx(18,36): error FS0001: This expression was expected to have type\n    '(int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * in",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpqoaj5qrh.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpqoaj5qrh.fsx(71,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpofyitc_n.fsx(18,36): error FS0001: This expression was expected to have type\n    '(int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * in",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .filter(\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprqnibdux.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmprqnibdux.fsx(66,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprqnibdux.fsx(66,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprqnibdux.fsx(66,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmprqnibdux.fsx(79,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(x => x * x)\n  .reduce((x, y) => x + y)\n  .map(x => x)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((x, y) => x + y)\n  .map(x => x)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((x, y) => x + y)\n  .map(x => x)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((x, y) => x + y)\n  .map(x => x)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((x, y) => x + y)\n  .map(x => x)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((x, y) => x + y)\n  .map(x => x)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((x, y) => x + y)\n  .map(x => x)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((x, y) => x + y)\n  .map(x => x)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((x, y) => x + y)\n  .map(x => x)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((x, y) => x + y)\n  .map(x => x)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((x, y) => x + y)\n  .map(x => x)\n  .filter(x => x > 0)\n  .map(x => x)\n  .reduce((x\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpbhmre2j0.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpbhmre2j0.fsx(62,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i => i)\n  .map(i =>\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpx1l_guhi.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpx1l_guhi.fsx(70,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpx1l_guhi.fsx(70,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpx1l_guhi.fsx(83,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpx1l_guhi.fsx(83,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(i => i > 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .filter(\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpwd7tp36f.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpwd7tp36f.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwd7tp36f.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwd7tp36f.fsx(60,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpwd7tp36f.fsx(73,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpofyitc_n.fsx(18,36): error FS0001: This expression was expected to have type\n    '(int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * int * in",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//pairs_sum_to_zero takes a list of integers as an input.\n// it returns True if there are two distinct elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n// >>> pairs_sum_to_zero([1])\n// False\nlet pairs_sum_to_zero l = \n  [1, 3, 5, 0]\n  .map(i => i * i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i => i)\n  .reduce((sum, x) => sum + x, 0)\n  .map(i\nlet test() = \n  let candidate = pairs_sum_to_zero\n  assert (candidate [1; 3; 5; 0] = false)\n  assert (candidate [1; 3; -2; 1] = false)\n  assert (candidate [1; 2; 3; 7] = false)\n  assert (candidate [2; 4; -5; 3; 5; 7] = true)\n  assert (candidate [1] = false)\n  assert (candidate [-3; 9; -1; 3; 2; 30] = true)\n  assert (candidate [-3; 9; -1; 3; 2; 31] = true)\n  assert (candidate [-3; 9; -1; 4; 2; 30] = false)\n  assert (candidate [-3; 9; -1; 4; 2; 31] = false)\n  0\n\ntest()",
      "timestamp": 1675797138,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw4n6o64i.fsx(16,3): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n\n\n/tmp/tmpw4n6o64i.fsx(55,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}