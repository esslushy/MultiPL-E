{
  "name": "HumanEval_31_is_prime",
  "language": "fs",
  "prompt": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n",
  "tests": "let test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n  (n >= 1) ? true : false;\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmprwd26csx.fsx(17,14): error FS0010: Unexpected keyword 'true' in expression. Expected identifier, '(' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n    (n >= 2)\n    ? (n & (n - 1)) == 0\n    ? (n & (n - 2)) == 0\n    ? (n & (n - 3)) == 0\n    ? (n & (n - 4)) == 0\n    ? (n & (n - 5)) == 0\n    ? (n & (n - 6)) == 0\n    ? (n & (n - 7)) == 0\n    ? (n & (n - 8)) == 0\n    ? (n & (n - 9)) == 0\n    ? (n & (n - 10)) == 0\n    ? (n & (n - 11)) == 0\n    ? (n & (n - 12)) == 0\n    ? (n & (n - 13)) == 0\n    ? (n & (n - 14)) == 0\n    ? (n & (n - 15)) == 0\n    ? (n & (n - 16)) == 0\n    ? (n & (n - 17)) == 0\n    ? (n & (n - 18)) == 0\n    ? (n & (n - 19)) == 0\n    ? (n & (n - 20)) == 0\n    ? (n & (n - 21)) == 0\n    ? (n & (n - 22)) == 0\n    ? (n & (n - 23)) == 0\n    ? (n & (n - 24)) == 0\n    ? (n & (n - 25)) == 0\n    ? (n & (n - 26)) == 0\n    ? (n & (n - 27)) == 0\n    ? (n & (n - 28)) == 0\n    ? (n & (n - 29)) == 0\n    ? (n & (n - 30)) == 0\n    ? (n & (n - 31)) == 0\n    ? (n & (n - 32)) == 0\n    ? (n & (n - 33)) == 0\n    ? (n & (n - 34)) == 0\n    ? (n & (n - 35)) == 0\n    ? (n & (n - 36)) == 0\n    ? (n & (n - 37)) == 0\n    ? (n & (n - 38)) == 0\n    ? (n & (n - 39)) ==\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpgv61g92u.fsx(18,8): error FS0010: Unexpected identifier in expression\n\n\n\n/tmp/tmpgv61g92u.fsx(57,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (17:5). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpgv61g92u.fsx(57,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (17:5). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpgv61g92u.fsx(74,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (17:5). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpgv61g92u.fsx(74,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (17:5). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n    (n === 0) ? false :\n    (n === 1) ? true :\n    (n % 2 === 0) ? true :\n    (n % 3 === 0) ? true :\n    (n % 5 === 0) ? true :\n    (n % 7 === 0) ? true :\n    (n % 11 === 0) ? true :\n    (n % 13 === 0) ? true :\n    (n % 17 === 0) ? true :\n    (n % 19 === 0) ? true :\n    (n % 23 === 0) ? true :\n    (n % 29 === 0) ? true :\n    (n % 31 === 0) ? true :\n    (n % 37 === 0) ? true :\n    (n % 41 === 0) ? true :\n    (n % 43 === 0) ? true :\n    (n % 47 === 0) ? true :\n    (n % 53 === 0) ? true :\n    (n % 59 === 0) ? true :\n    (n % 61 === 0) ? true :\n    (n % 67 === 0) ? true :\n    (n % 71 === 0) ? true :\n    (n % 73 === 0) ? true :\n    (n % 79 === 0) ? true :\n    (n % 81 === 0) ? true :\n    (n % 83 === 0) ? true :\n    (n % 89 === 0) ? true :\n    (n % 97 === 0) ? true :\n    (n % 101 === 0) ? true :\n    (n % 103 === 0) ? true :\n    (n % 107 === 0) ? true :\n    (n % 109 === 0) ? true :\n    (n % 113 === 0) ? true :\n    (n % 127 === 0) ? true :\n    (n % 131 === 0) ? true :\n    (n % 137 === 0) ? true :\n    (n % 139 === 0) ? true :\n    (n % 151 === 0) ? true :\n    (n % 157 === 0) ? true :\n    (n % 159 === 0) ? true :\n    (n % 181 === 0) ? true :\n    (n % 191 === 0) ? true :\n    (n % 193 === 0) ? true :\n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmplvl3aaa5.fsx(17,17): error FS0010: Unexpected keyword 'false' in expression. Expected identifier, '(' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n  (n < 2) ? false :\n  (n % 2 === 0) ? true :\n  (n % 3 === 0) ? true :\n  (n % 5 === 0) ? true :\n  (n % 7 === 0) ? true :\n  (n % 11 === 0) ? true :\n  (n % 13 === 0) ? true :\n  (n % 17 === 0) ? true :\n  (n % 19 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true :\n  (n % 211 === 0) ? true\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp92x_c3uk.fsx(17,13): error FS0010: Unexpected keyword 'false' in expression. Expected identifier, '(' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n    is_prime(n)\n    .then(() => {\n        console.log('is_prime(n) = ', n)\n    })\n    .catch(err => {\n        console.log(err)\n    })\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp2vbmpvks.fsx(18,5): error FS0010: Unexpected symbol '.' in binding. Expected incomplete structured construct at or before this point or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n  (n > 1) ? n : (n === 0) ? true : (n % 2 === 0) ? false : (n === 1) ? true : (n === 2) ? false : (n === 3) ? false : (n === 4) ? false : (n === 5) ? false : (n === 6) ? false : (n === 7) ? false : (n === 8) ? false : (n === 9) ? false : (n === 10) ? false : (n === 11) ? false : (n === 12) ? false : (n === 13) ? false : (n === 14) ? false : (n === 15) ? false : (n === 16) ? false : (n === 17) ? false : (n === 18) ? false : (n === 19) ? false : (n === 20) ? false : (n === 21) ? false : (n === 22) ? false : (n === 23) ? false : (n === 24) ? false : (n === 25) ? false : (n === 26) ? false : (n === 27) ? false : (n === 28) ? false : (n === 29) ? false : (n === 30) ? false : (n === 31) ? false : (n === 32) ? false : (n === 33) ? false : (n === 34) ? false : (n === 35) ? false : (n === 36) ? false : (n === 37) ? false : (n === 38) ? false : (n === 39) ? false : (n === 40) ? false : (n === 41) ? false : (n === 42) ? false : (n === 43) ? false : (n === 44) ? false : (n === 45) ? false : (n === 46) ? false : (n === 47) ? false : (n === 48) ? false : (n === 49) ? false : (n === 50) ? false : (n === 51) ? false : (n === 52) ? false : (n === 53) ? false : (n === 54) ? false : (n === 55) ? false : (n === 56) ? false : (n === 57) ? false : (n === 58) ? false : (n === 59) ? false : (n === 60) ? false : (n === 61)\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp1ml5zs60.fsx(17,20): error FS0010: Unexpected infix operator in binding. Expected ',' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n  (n >= 2) ? true : false;\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpaqk_zyip.fsx(17,14): error FS0010: Unexpected keyword 'true' in expression. Expected identifier, '(' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n    (n > 1) ? n : (n === 0 ? false : true)\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdht76gr4.fsx(17,22): error FS0010: Unexpected infix operator in binding. Expected ',' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n  (n < 2) ? false :\n  (n > 2) ? true :\n  (n % 2 === 0) ? true :\n  (n % 3 === 0) ? true :\n  (n % 5 === 0) ? true :\n  (n % 7 === 0) ? true :\n  (n % 11 === 0) ? true :\n  (n % 13 === 0) ? true :\n  (n % 17 === 0) ? true :\n  (n % 19 === 0) ? true :\n  (n % 23 === 0) ? true :\n  (n % 29 === 0) ? true :\n  (n % 31 === 0) ? true :\n  (n % 37 === 0) ? true :\n  (n % 41 === 0) ? true :\n  (n % 43 === 0) ? true :\n  (n % 47 === 0) ? true :\n  (n % 53 === 0) ? true :\n  (n % 59 === 0) ? true :\n  (n % 61 === 0) ? true :\n  (n % 67 === 0) ? true :\n  (n % 71 === 0) ? true :\n  (n % 73 === 0) ? true :\n  (n % 79 === 0) ? true :\n  (n % 83 === 0) ? true :\n  (n % 89 === 0) ? true :\n  (n % 97 === 0) ? true :\n  (n % 101 === 0) ? true :\n  (n % 103 === 0) ? true :\n  (n % 107 === 0) ? true :\n  (n % 109 === 0) ? true :\n  (n % 113 === 0) ? true :\n  (n % 127 === 0) ? true :\n  (n % 127 === 0) ? true :\n  (n % 127 === 0) ? true :\n  (n % 127 === 0) ? true :\n  (n % 127 === 0) ? true :\n  (n % 127 === 0) ? true :\n  (n % 127 === 0) ? true :\n  (n % 127 === 0) ? true :\n  (n % 127 === 0) ? true :\n  (n % 127 === 0) ? true :\n  (n % 127 === 0) ? true :\n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpr4gstwkw.fsx(17,13): error FS0010: Unexpected keyword 'false' in expression. Expected identifier, '(' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n  (n < 2) ? false :\n  (n % 2 == 0) ? true :\n  (n % 3 == 0) ? true :\n  (n % 5 == 0) ? true :\n  (n % 7 == 0) ? true :\n  (n % 11 == 0) ? true :\n  (n % 13 == 0) ? true :\n  (n % 17 == 0) ? true :\n  (n % 19 == 0) ? true :\n  (n % 23 == 0) ? true :\n  (n % 29 == 0) ? true :\n  (n % 31 == 0) ? true :\n  (n % 37 == 0) ? true :\n  (n % 41 == 0) ? true :\n  (n % 43 == 0) ? true :\n  (n % 47 == 0) ? true :\n  (n % 53 == 0) ? true :\n  (n % 59 == 0) ? true :\n  (n % 61 == 0) ? true :\n  (n % 67 == 0) ? true :\n  (n % 71 == 0) ? true :\n  (n % 73 == 0) ? true :\n  (n % 79 == 0) ? true :\n  (n % 81 == 0) ? true :\n  (n % 83 == 0) ? true :\n  (n % 89 == 0) ? true :\n  (n % 91 == 0) ? true :\n  (n % 93 == 0) ? true :\n  (n % 97 == 0) ? true :\n  (n % 101 == 0) ? true :\n  (n % 103 == 0) ? true :\n  (n % 107 == 0) ? true :\n  (n % 109 == 0) ? true :\n  (n % 113 == 0) ? true :\n  (n % 127 == 0) ? true :\n  (n % 131 == 0) ? true :\n  (n % 137 == 0) ? true :\n  (n % 139 == 0) ? true :\n  (n % 143 == 0) ? true :\n  (n % 147 == 0) ? true :\n  (n % 149 == 0) ? true :\n  (n % 151 == 0) ? true :\n  (n % 157 == 0) ? true\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpqi_ffpdo.fsx(17,13): error FS0010: Unexpected keyword 'false' in expression. Expected identifier, '(' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n    (n < 2) ? false :\n    (n % 2 === 0) ? true :\n    (n % 3 === 0) ? true :\n    (n % 5 === 0) ? true :\n    (n % 7 === 0) ? true :\n    (n % 11 === 0) ? true :\n    (n % 13 === 0) ? true :\n    (n % 17 === 0) ? true :\n    (n % 19 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 1) ? true :\n    (n % 211 === 2) ? true :\n    (n % 211 === 3) ? true :\n    (n % 211 === 4) ? true :\n    (n % 211 === 5) ? true :\n    (n % 211 === 6) ? true :\n    (n % 211 === 7) ? true :\n    (n % 211 === 8) ? true :\n    (n % 211 === 9) ? true :\n    (n % 211 === 10) ? true :\n    (n % 211 === 11) ? true :\n    (n % 211 === 12) ? true :\n    (n % 211 === 13) ? true :\n    (n % 211 === 14) ? true :\n    (n % 211 === 15) ? true :\n    (n % 211 === 16) ? true :\n    (n % 211 === 17) ? true :\n    (n % 211 === 18) ? true :\n    (n % 211 === 19) ? true :\n    (n % 211 === 20) ? true :\n    (n % 211 === 21) ? true :\n    (n % 211 === 22) ? true :\n    (n % 211 === 23) ? true :\n    (n % 211 === 24) ? true :\n    (n % 211 === 25) ? true :\n    (n % 211 === 26) ? true :\n    (n % 211 === 27) ? true :\n    (n % 211 === 28) ? true :\n    (n % 211 === 29) ? true :\n    (n % 211 === 30) ? true :\n    (n % 211 === 31) ? true :\n    (n % 211 === 32) ? true :\n    (n % 211 === 33) ? true\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7ppyg7u6.fsx(17,15): error FS0010: Unexpected keyword 'false' in expression. Expected identifier, '(' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n{\n    is_prime: function(n) {\n        if (n === 1) return true;\n        if (n === 2) return true;\n        if (n === 3) return true;\n        if (n === 4) return true;\n        if (n === 5) return true;\n        if (n === 6) return true;\n        if (n === 7) return true;\n        if (n === 8) return true;\n        if (n === 9) return true;\n        if (n === 10) return true;\n        if (n === 11) return true;\n        if (n === 12) return true;\n        if (n === 13) return true;\n        if (n === 14) return true;\n        if (n === 15) return true;\n        if (n === 16) return true;\n        if (n === 17) return true;\n        if (n === 18) return true;\n        if (n === 19) return true;\n        if (n === 20) return true;\n        if (n === 21) return true;\n        if (n === 22) return true;\n        if (n === 23) return true;\n        if (n === 24) return true;\n        if (n === 25) return true;\n        if (n === 26) return true;\n        if (n === 27) return true;\n        if (n === 28) return true;\n        if (n === 29) return true;\n        if (n === 30) return true;\n        if (n === 31) return true;\n        if (n === 32) return true;\n        if (n === 33) return true;\n        if (n === 34) return true;\n        if (n === 35) return true;\n        if (n === 36) return true;\n        if (n === 37) return true;\n        if (n === 38) return true;\n        if (n === 39) return true;\n        if (n === 40) return true;\n        if (n === 41) return true;\n        if (n === 42) return true;\n        if (n === 43) return true;\n        if (n === 44) return true;\n        if (n === 45) return true;\n        if (n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7rodevnt.fsx(17,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (16:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7rodevnt.fsx(17,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (16:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7rodevnt.fsx(18,13): error FS0010: Unexpected symbol ':' in expression. Expected '}' or other token.\n\n\n\n/tmp/tmp7rodevnt.fsx(19,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (18:23). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7rodevnt.fsx(19,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (18:23). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7rodevnt.fsx(19,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (18:23). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7rodevnt.fsx(20,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (18:23). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7rodevnt.fsx(20,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (18:23). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7rodevnt.fsx(20,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (18:23). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp7rodevnt.fsx(21,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (18:23). Try indenting this token further or using standard formatting conventi",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n{\n  is_prime(1)\n  {\n    return true;\n  },\n  is_prime(2)\n  {\n    return true;\n  },\n  is_prime(3)\n  {\n    return true;\n  },\n  is_prime(4)\n  {\n    return true;\n  },\n  is_prime(5)\n  {\n    return true;\n  },\n  is_prime(6)\n  {\n    return true;\n  },\n  is_prime(7)\n  {\n    return true;\n  },\n  is_prime(8)\n  {\n    return true;\n  },\n  is_prime(9)\n  {\n    return true;\n  },\n  is_prime(10)\n  {\n    return true;\n  },\n  is_prime(11)\n  {\n    return true;\n  },\n  is_prime(12)\n  {\n    return true;\n  },\n  is_prime(13)\n  {\n    return true;\n  },\n  is_prime(14)\n  {\n    return true;\n  },\n  is_prime(15)\n  {\n    return true;\n  },\n  is_prime(16)\n  {\n    return true;\n  },\n  is_prime(17)\n  {\n    return true;\n  },\n  is_prime(18)\n  {\n    return true;\n  },\n  is_prime(19)\n  {\n    return true;\n  },\n  is_prime(20)\n  {\n    return true;\n  },\n  is_prime(21)\n  {\n    return true;\n  },\n  is_prime(22)\n  {\n    return true;\n  },\n  is_prime(23)\n  {\n    return true;\n  },\n  is_prime(24)\n  {\n    return true;\n  },\n  is_prime(25)\n  {\n    return true;\n  },\n  is_prime(26)\n  {\n    return true;\n  },\n  is_prime(27)\n  {\n    return true;\n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp0leeb7x3.fsx(17,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (16:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp0leeb7x3.fsx(17,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (16:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp0leeb7x3.fsx(126,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (16:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp0leeb7x3.fsx(143,1): error FS0010: Unexpected identifier in expression. Expected 'in' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n  (n >= 2)\n  ? (n & (n - 1)) === 0\n    ? (n & (n - 2)) === 0\n      ? (n & (n - 3)) === 0\n        ? (n & (n - 4)) === 0\n          ? (n & (n - 5)) === 0\n            ? (n & (n - 6)) === 0\n              ? (n & (n - 7)) === 0\n                ? (n & (n - 8)) === 0\n                  ? (n & (n - 9)) === 0\n                    ? (n & (n - 10)) === 0\n                      ? (n & (n - 11)) === 0\n                        ? (n & (n - 12)) === 0\n                          ? (n & (n - 13)) === 0\n                            ? (n & (n - 14)) === 0\n                              ? (n & (n - 15)) === 0\n                               ? (n & (n - 16)) === 0\n                                  ? (n & (n - 17)) === 0\n                                    ? (n & (n - 18)) === 0\n                                      ? (n & (n - 19)) === 0\n                                        ? (n & (n - 20)) === 0\n                                          ? (n & (n - 21)) === 0\n                                          : (n & (n - 22)) === 0\n                                          : (n & (n - 23)) === 0\n                                          : (n & (n - 24)) === 0\n                                          : (n & (n - 25)) === 0\n                                          : (n & (n - 26)) === 0\n                                          : (n & (n - 27)) === 0\n                                          : (n & (n - 28)) === 0\n                                          : (n & (n - 29)) === 0\n                                          : (n & (n - 30)) === 0\n                                          : (n & (n - 31)) === 0\n                                          : (n & (n - 32)) === 0\n                                          : (n & (n - 33)) === 0\n                                          : (n & (n - 34)) === 0\n                                          : (n & (n - 35\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpt0o9gk0w.fsx(18,6): error FS0010: Unexpected identifier in expression\n\n\n\n/tmp/tmpt0o9gk0w.fsx(53,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (16:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n    (n < 2) ? false :\n    (n % 2 === 0) ? true :\n    (n % 3 === 0) ? true :\n    (n % 5 === 0) ? true :\n    (n % 7 === 0) ? true :\n    (n % 11 === 0) ? true :\n    (n % 13 === 0) ? true :\n    (n % 17 === 0) ? true :\n    (n % 19 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true :\n    (n % 211 === 0) ? true\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp7ylghigl.fsx(17,15): error FS0010: Unexpected keyword 'false' in expression. Expected identifier, '(' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n    (n > 1) ? true : false;\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpw_26117w.fsx(17,15): error FS0010: Unexpected keyword 'true' in expression. Expected identifier, '(' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n  (n < 2) ? false :\n  (n % 2 == 0) ? true :\n  (n > 1) ? false :\n  (n === 1) ? true :\n  (n === 2) ? false :\n  (n === 3) ? false :\n  (n === 4) ? false :\n  (n === 5) ? false :\n  (n === 6) ? false :\n  (n === 7) ? false :\n  (n === 8) ? false :\n  (n === 9) ? false :\n  (n === 10) ? false :\n  (n === 11) ? false :\n  (n === 12) ? false :\n  (n === 13) ? false :\n  (n === 14) ? false :\n  (n === 15) ? false :\n  (n === 16) ? false :\n  (n === 17) ? false :\n  (n === 18) ? false :\n  (n === 19) ? false :\n  (n === 20) ? false :\n  (n === 21) ? false :\n  (n === 22) ? false :\n  (n === 23) ? false :\n  (n === 24) ? false :\n  (n === 25) ? false :\n  (n === 26) ? false :\n  (n === 27) ? false :\n  (n === 28) ? false :\n  (n === 29) ? false :\n  (n === 30) ? false :\n  (n === 31) ? false :\n  (n === 32) ? false :\n  (n === 33) ? false :\n  (n === 34) ? false :\n  (n === 35) ? false :\n  (n === 36) ? false :\n  (n === 37) ? false :\n  (n === 38) ? false :\n  (n === 39) ? false :\n  (n === 40) ? false :\n  (n === 41) ? false :\n  (n === 42) ? false :\n  (n === 43) ? false :\n  (n === 44) ? false :\n  (n === 45) ? false :\n  (n === 46) ? false :\n  (n === 47) ? false :\n  (n === 48) ? false :\n\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp4pp1y4r7.fsx(17,13): error FS0010: Unexpected keyword 'false' in expression. Expected identifier, '(' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n    (n > 1) ? n : \n    (n === 1) ? false :\n    (n === 2) ? true :\n    (n === 3) ? false :\n    (n === 4) ? false :\n    (n === 5) ? false :\n    (n === 6) ? false :\n    (n === 7) ? false :\n    (n === 8) ? false :\n    (n === 9) ? false :\n    (n === 10) ? false :\n    (n === 11) ? false :\n    (n === 12) ? false :\n    (n === 13) ? false :\n    (n === 14) ? false :\n    (n === 15) ? false :\n    (n === 16) ? false :\n    (n === 17) ? false :\n    (n === 18) ? false :\n    (n === 19) ? false :\n    (n === 20) ? false :\n    (n === 21) ? false :\n    (n === 22) ? false :\n    (n === 23) ? false :\n    (n === 24) ? false :\n    (n === 25) ? false :\n    (n === 26) ? false :\n    (n === 27) ? false :\n    (n === 28) ? false :\n    (n === 29) ? false :\n    (n === 30) ? false :\n    (n === 31) ? false :\n    (n === 32) ? false :\n    (n === 33) ? false :\n    (n === 34) ? false :\n    (n === 35) ? false :\n    (n === 36) ? false :\n    (n === 37) ? false :\n    (n === 38) ? false :\n    (n === 39) ? false :\n    (n === 40) ? false :\n    (n === 41) ? false :\n    (n === 42) ? false :\n    (n === 43) ? false :\n    (n === 44) ? false :\n    (n === 45) ? false :\n    (n === 46) ? false :\n    (n === 47) ? false :\n    (n === 48) ? false :\n    (n === 49) ? false :\n    (n === 50) ? false :\n    \nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp0bakkggv.fsx(17,19): error FS0010: Incomplete structured construct at or before this point in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n    (n < 2) ? false :\n    (n % 2 === 0) ? true :\n    (n % 3 === 0) ? true :\n    (n % 5 === 0) ? true :\n    (n % 7 === 0) ? true :\n    (n % 11 === 0) ? true :\n    (n % 13 === 0) ? true :\n    (n % 17 === 0) ? true :\n    (n % 19 === 0) ? true :\n    (n % 23 === 0) ? true :\n    (n % 29 === 0) ? true :\n    (n % 31 === 0) ? true :\n    (n % 37 === 0) ? true :\n    (n % 41 === 0) ? true :\n    (n % 43 === 0) ? true :\n    (n % 47 === 0) ? true :\n    (n % 53 === 0) ? true :\n    (n % 59 === 0) ? true :\n    (n % 61 === 0) ? true :\n    (n % 67 === 0) ? true :\n    (n % 71 === 0) ? true :\n    (n % 73 === 0) ? true :\n    (n % 79 === 0) ? true :\n    (n % 81 === 0) ? true :\n    (n % 83 === 0) ? true :\n    (n % 89 === 0) ? true :\n    (n % 91 === 0) ? true :\n    (n % 97 === 0) ? true :\n    (n % 101 === 0) ? true :\n    (n % 103 === 0) ? true :\n    (n % 107 === 0) ? true :\n    (n % 109 === 0) ? true :\n    (n % 111 === 0) ? true :\n    (n % 113 === 0) ? true :\n    (n % 127 === 0) ? true :\n    (n % 131 === 0) ? true :\n    (n % 137 === 0) ? true :\n    (n % 139 === 0) ? true :\n    (n % 151 === 0) ? true :\n    (n % 157 === 0) ? true :\n    (n % 159 === 0) ? true :\n    (n % 181 === 0) ? true :\n    (n % 191 === 0) ? true\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnqtqc2g3.fsx(17,15): error FS0010: Unexpected keyword 'false' in expression. Expected identifier, '(' or other token.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n// True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>> is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nlet is_prime n = \n{\n    is_prime: function(n) {\n        if (n < 2) {\n            return false;\n        }\n        if (n === 2) {\n            return true;\n        }\n        if (n % 2 === 0) {\n            return false;\n        }\n        if (n % 3 === 0) {\n            return false;\n        }\n        if (n % 5 === 0) {\n            return false;\n        }\n        if (n % 7 === 0) {\n            return false;\n        }\n        if (n % 11 === 0) {\n            return false;\n        }\n        if (n % 13 === 0) {\n            return false;\n        }\n        if (n % 17 === 0) {\n            return false;\n        }\n        if (n % 19 === 0) {\n            return false;\n        }\n        if (n % 23 === 0) {\n            return false;\n        }\n        if (n % 29 === 0) {\n            return false;\n        }\n        if (n % 31 === 0) {\n            return false;\n        }\n        if (n % 37 === 0) {\n            return false;\n        }\n        if (n % 41 === 0) {\n            return false;\n        }\n        if (n % 43 === 0) {\n            return false;\n        }\n        if (n % 59 === 0) {\n            return false;\n        }\n        if (n % 61 === 0) {\n            return false;\n        }\n        if (n % 71 === 0) {\n            return false;\n        }\n        if (n % 73 === 0) {\n            return false;\n        }\n        if (n % 79 === 0) {\n            return false;\n        }\n        if (n % 81 === 0) {\n            return false;\n        }\n        if (n % 83 === 0) {\n            return false;\n        }\n        if (n % 89 === 0) {\n            return false;\n        }\n        if (n % 91 === 0) {\n            return false;\n        }\n        if (n % 97 === 0) {\n            return false;\n        }\n        if (n % 101 === 0)\nlet test() = \n  let candidate = is_prime\n  assert (candidate 6 = false)\n  assert (candidate 101 = true)\n  assert (candidate 11 = true)\n  assert (candidate 13441 = true)\n  assert (candidate 61 = true)\n  assert (candidate 4 = false)\n  assert (candidate 1 = false)\n  assert (candidate 5 = true)\n  assert (candidate 11 = true)\n  assert (candidate 17 = true)\n  assert (candidate 85 = false)\n  assert (candidate 77 = false)\n  assert (candidate 255379 = false)\n  0\n\ntest()",
      "timestamp": 1675797155,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpbln2q7h9.fsx(17,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (16:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpbln2q7h9.fsx(17,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (16:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpbln2q7h9.fsx(18,13): error FS0010: Unexpected symbol ':' in expression. Expected '}' or other token.\n\n\n\n/tmp/tmpbln2q7h9.fsx(19,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (18:23). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpbln2q7h9.fsx(19,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (18:23). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpbln2q7h9.fsx(19,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (18:23). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpbln2q7h9.fsx(22,9): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (18:23). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpbln2q7h9.fsx(22,9): warning FS0058: Pos",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}