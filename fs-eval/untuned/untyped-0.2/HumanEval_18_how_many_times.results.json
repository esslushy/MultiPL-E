{
  "name": "HumanEval_18_how_many_times",
  "language": "fs",
  "prompt": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n",
  "tests": "let test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  'aaaa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + '\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpr6n1pzhx.fsx(9,3): error FS0010: Unexpected quote symbol in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  `${substring}${substring}${substring}${substring}`;\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnb3sinrk.fsx(9,3): error FS0010: Unexpected reserved keyword in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  'aaaa'\n  + 'aaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + '\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmph5ad2i0t.fsx(9,3): error FS0010: Unexpected quote symbol in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  `${substring}${substring}${substring}${substring}`;\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnb3sinrk.fsx(9,3): error FS0010: Unexpected reserved keyword in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  `${substring}${substring}${substring}${substring}`;\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnb3sinrk.fsx(9,3): error FS0010: Unexpected reserved keyword in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  `${substring}${substring}${substring}`;\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxwzrudmy.fsx(9,3): error FS0010: Unexpected reserved keyword in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n`\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpvl4u4mwg.fsx(9,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(9,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(9,1): error FS0010: Unexpected reserved keyword in binding\n\n\n\n/tmp/tmpvl4u4mwg.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(18,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(18,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n`\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpvl4u4mwg.fsx(9,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(9,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(9,1): error FS0010: Unexpected reserved keyword in binding\n\n\n\n/tmp/tmpvl4u4mwg.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(18,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(18,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n`\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpvl4u4mwg.fsx(9,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(9,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(9,1): error FS0010: Unexpected reserved keyword in binding\n\n\n\n/tmp/tmpvl4u4mwg.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(18,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(18,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n`\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpvl4u4mwg.fsx(9,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(9,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(9,1): error FS0010: Unexpected reserved keyword in binding\n\n\n\n/tmp/tmpvl4u4mwg.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(18,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(18,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n`\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n  'aaaa'\n\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_ibp2nv2.fsx(9,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_ibp2nv2.fsx(9,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_ibp2nv2.fsx(9,1): error FS0010: Unexpected reserved keyword in binding\n\n\n\n/tmp/tmp_ibp2nv2.fsx(113,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_ibp2nv2.fsx(113,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_ibp2nv2.fsx(121,1): warning FS0058: Possible incorrect indentation: this t",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + '\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdsalxc1d.fsx(9,3): error FS0010: Unexpected quote symbol in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  `${substring}${substring}${substring}`;\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxwzrudmy.fsx(9,3): error FS0010: Unexpected reserved keyword in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n`\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpvl4u4mwg.fsx(9,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(9,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(9,1): error FS0010: Unexpected reserved keyword in binding\n\n\n\n/tmp/tmpvl4u4mwg.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(18,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpvl4u4mwg.fsx(18,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (8:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n    'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + 'aaaa'\n    + '\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdtlxy8uv.fsx(9,5): error FS0010: Unexpected quote symbol in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + '\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdsalxc1d.fsx(9,3): error FS0010: Unexpected quote symbol in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  'aaaa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + 'aa'\n  + '\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpr6n1pzhx.fsx(9,3): error FS0010: Unexpected quote symbol in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + 'aaaa'\n  + '\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpdsalxc1d.fsx(9,3): error FS0010: Unexpected quote symbol in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  `${substring}${substring}${substring}`;\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxwzrudmy.fsx(9,3): error FS0010: Unexpected reserved keyword in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Find how many times a given substring can be found in the original string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>> how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\nlet how_many_times string substring = \n  `${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}${string}\nlet test() = \n  let candidate = how_many_times\n  assert (candidate \"\" \"x\" = 0)\n  assert (candidate \"xyxyxyx\" \"x\" = 4)\n  assert (candidate \"cacacacac\" \"cac\" = 4)\n  assert (candidate \"john doe\" \"john\" = 1)\n  0\n\ntest()",
      "timestamp": 1675797134,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpt60go1of.fsx(9,3): error FS0010: Unexpected reserved keyword in binding\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}