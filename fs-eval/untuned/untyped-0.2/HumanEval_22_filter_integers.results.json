{
  "name": "HumanEval_22_filter_integers",
  "language": "fs",
  "prompt": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n",
  "tests": "let test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
  "stop_tokens": [
    "\n(*",
    "\n//",
    "\ntype",
    "\n\n"
  ],
  "results": [
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8303bwe9.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n    [1, 2, 3, 'abc', {}, []]\nlet filter_integers_empty = filter_integers([]);\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpm3nbxsvq.fsx(7,15): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n    [1, 2, 3, 'abc', {}, []]\nlet filter_integers_2 = filter_integers(values)\nlet filter_integers_3 = filter_integers(values)\nlet filter_integers_4 = filter_integers(values)\nlet filter_integers_5 = filter_integers(values)\nlet filter_integers_6 = filter_integers(values)\nlet filter_integers_7 = filter_integers(values)\nlet filter_integers_8 = filter_integers(values)\nlet filter_integers_9 = filter_integers(values)\nlet filter_integers_10 = filter_integers(values)\nlet filter_integers_11 = filter_integers(values)\nlet filter_integers_12 = filter_integers(values)\nlet filter_integers_13 = filter_integers(values)\nlet filter_integers_14 = filter_integers(values)\nlet filter_integers_15 = filter_integers(values)\nlet filter_integers_16 = filter_integers(values)\nlet filter_integers_17 = filter_integers(values)\nlet filter_integers_18 = filter_integers(values)\nlet filter_integers_19 = filter_integers(values)\nlet filter_integers_20 = filter_integers(values)\nlet filter_integers_21 = filter_integers(values)\nlet filter_integers_22 = filter_integers(values)\nlet filter_integers_23 = filter_integers(values)\nlet filter_integers_24 = filter_integers(values)\nlet filter_integers_25 = filter_integers(values)\nlet filter_integers_26 = filter_integers(values)\nlet filter_integers_27 = filter_integers(values)\nlet filter_integers_28 = filter_integers(values)\nlet filter_integers_29 = filter_integers(values)\nlet filter_integers_30 = filter_integers(values)\nlet filter_integers_31 = filter_integers(values)\nlet filter_integers_32 = filter_integers(values)\n\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_vpx5wpz.fsx(7,15): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8303bwe9.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n[\n  'a',\n  3.14,\n  5,\n  'abc',\n  {},\n  [],\n  [],\n];\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp_td56mv0.fsx(7,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_td56mv0.fsx(7,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_td56mv0.fsx(11,3): error FS0010: Unexpected quote symbol in expression\n\n\n\n/tmp/tmp_td56mv0.fsx(15,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (14:3). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_td56mv0.fsx(16,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_td56mv0.fsx(16,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_td56mv0.fsx(23,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp_td56mv0.fsx(23,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8303bwe9.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8303bwe9.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8303bwe9.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8303bwe9.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n    [1, 2, 3, 'abc', {}, []]\nlet filter_integers_list = filter_integers(values)\nlet filter_integers_list_length = filter_integers_list.length\nlet filter_integers_list_length_2 = filter_integers_list.length\nlet filter_integers_list_length_3 = filter_integers_list.length\nlet filter_integers_list_length_4 = filter_integers_list.length\nlet filter_integers_list_length_5 = filter_integers_list.length\nlet filter_integers_list_length_6 = filter_integers_list.length\nlet filter_integers_list_length_7 = filter_integers_list.length\nlet filter_integers_list_length_8 = filter_integers_list.length\nlet filter_integers_list_length_9 = filter_integers_list.length\nlet filter_integers_list_length_10 = filter_integers_list.length\nlet filter_integers_list_length_11 = filter_integers_list.length\nlet filter_integers_list_length_12 = filter_integers_list.length\nlet filter_integers_list_length_13 = filter_integers_list.length\nlet filter_integers_list_length_14 = filter_integers_list.length\nlet filter_integers_list_length_15 = filter_integers_list.length\nlet filter_integers_list_length_16 = filter_integers_list.length\nlet filter_integers_list_length_17 = filter_integers_list.length\nlet filter_integers_list_length_18 = filter_integers_list.length\nlet filter_integers_list_length_19 = filter_integers_list.length\nlet filter_integers_list_length_20 = filter_integers_list.length\nlet filter_integers_list_length_21 = filter_integers_list.length\nlet filter_integers_list_length_22 = filter_integers_list.length\nlet filter_integers_list_length_23 = filter_integers_list.length\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpxrkqhkc6.fsx(7,15): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet filter_integers_empty = filter_integers([]);\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpfftfjc9r.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8303bwe9.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8303bwe9.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n[\n  [1, 2, 3, 'abc', {}, []]\n];\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp1znv_ps9.fsx(7,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1znv_ps9.fsx(7,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1znv_ps9.fsx(8,13): error FS0010: Unexpected quote symbol in expression\n\n\n\n/tmp/tmp1znv_ps9.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1znv_ps9.fsx(10,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmp1znv_ps9.fsx(17,1): warning FS0058: Possible incorrect indentation: this toke",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8303bwe9.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet filter_integers_empty = filter_integers([])()\nlet filter_integers_empty_empty = filter_integers([])()\nlet filter_integers_empty_empty_empty = filter_integers([])()\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpnv5kns8g.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8303bwe9.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n    [1, 2, 3, 'abc', {}, []]\nlet filter_integers_empty = filter_integers([]);\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpm3nbxsvq.fsx(7,15): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n  [1, 2, 3, 'abc', {}, []]\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmp8303bwe9.fsx(7,13): error FS0010: Unexpected quote symbol in expression\n\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Filter given list of any python values only for integers\n// >>> filter_integers(['a', 3.14, 5])\n// [5]\n// >>> filter_integers([1, 2, 3, 'abc', {}, []])\n// [1, 2, 3]\nlet filter_integers values = \n[\n  'a',\n  3.14,\n  5,\n  'abc',\n  {},\n  [],\n  []\n]\nlet test() = \n  let candidate = filter_integers\n  assert (candidate [] = [])\n  assert (candidate [4; Map []; []; 23.2; 9; \"adasd\"] = [4; 9])\n  assert (candidate [3; \"c\"; 3; 3; \"a\"; \"b\"] = [3; 3; 3])\n  0\n\ntest()",
      "timestamp": 1675797197,
      "stdout": "",
      "stderr": "\n\n/tmp/tmpmvxlvz2x.fsx(7,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmvxlvz2x.fsx(7,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmvxlvz2x.fsx(11,3): error FS0010: Unexpected quote symbol in expression\n\n\n\n/tmp/tmpmvxlvz2x.fsx(16,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmvxlvz2x.fsx(16,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmvxlvz2x.fsx(23,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n\n\n/tmp/tmpmvxlvz2x.fsx(23,1): warning FS0058: Possible incorrect indentation: this token is offside of context started at position (6:1). Try indenting this token further or using standard formatting conventions.\n\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}